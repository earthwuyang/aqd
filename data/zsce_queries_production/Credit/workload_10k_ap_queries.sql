SELECT MIN(orders.product_id + orders.order_id) as agg_0 FROM orders  WHERE orders.status != 'inactive';
SELECT users.city, users.user_id, SUM(orders.product_id + orders.quantity) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.product_id <= 450 AND users.user_id >= 134 AND users.city != 'pending' GROUP BY users.city, users.user_id ORDER BY users.city, users.user_id;
SELECT orders.user_id, orders.order_date, orders.status, MIN(orders.price) as agg_0 FROM orders  WHERE orders.user_id >= 297 AND orders.order_id <= 1318 AND orders.order_date = 'pending' AND orders.total_amount >= 271.2489310389558 GROUP BY orders.user_id, orders.order_date, orders.status ORDER BY orders.user_id, orders.order_date, orders.status LIMIT 10;
SELECT orders.order_id, users.status, orders.quantity, MIN(orders.price) as agg_0, AVG(orders.user_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.user_id <= 66 AND orders.price <= 90.56138779147622 AND users.age <= 1300 AND products.description != 'active' AND users.status = 'inactive' GROUP BY orders.order_id, users.status, orders.quantity ORDER BY orders.order_id, users.status, orders.quantity LIMIT 1000;
SELECT SUM(orders.product_id) as agg_0, MAX(orders.total_amount) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.stock <= 163 AND users.name != 'active' AND orders.price >= 81.88051220629968;
SELECT users.user_id, users.age, AVG(products.stock + products.price) as agg_0, SUM(users.user_id + orders.order_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.product_id <= 1 AND products.category = 'inactive' GROUP BY users.user_id, users.age ORDER BY users.user_id, users.age;
SELECT products.stock, COUNT(*) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.user_id <= 339 AND products.name != 'pending' AND orders.quantity <= 4286 GROUP BY products.stock ORDER BY products.stock;
SELECT MIN(orders.quantity + orders.order_id) as agg_0, AVG(orders.total_amount + orders.product_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.age >= 2463;
SELECT users.created_at, SUM(orders.quantity + users.user_id) as agg_0, MAX(orders.total_amount + orders.order_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.user_id >= 594 AND users.name != 'active' AND users.email = 'active' GROUP BY users.created_at HAVING SUM(orders.quantity + users.user_id) >= 56 ORDER BY users.created_at;
SELECT AVG(orders.price + orders.total_amount) as agg_0, MIN(products.price + orders.price) as agg_1, AVG(orders.price + products.stock) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.city != 'active' AND products.description = 'active' AND products.category = 'inactive' AND orders.total_amount >= 49.14878075938184;
SELECT SUM(orders.product_id + users.age) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE orders.order_date = 'active' AND orders.user_id <= 863;
SELECT orders.status, users.created_at, orders.order_id, MAX(users.user_id + orders.quantity) as agg_0, MAX(orders.order_id + orders.quantity) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.product_id <= 387 GROUP BY orders.status, users.created_at, orders.order_id ORDER BY orders.status, users.created_at, orders.order_id LIMIT 100;
SELECT products.stock, products.category, SUM(orders.product_id) as agg_0, AVG(orders.price + orders.product_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.city != 'active' AND orders.order_id >= 286 AND products.name != 'inactive' AND orders.status != 'inactive' AND orders.product_id >= 72 GROUP BY products.stock, products.category ORDER BY products.stock, products.category;
SELECT products.name, AVG(orders.total_amount) as agg_0, AVG(orders.user_id + orders.price) as agg_1, AVG(products.price) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.email = 'active' AND orders.quantity <= 1982 AND orders.order_date != 'inactive' GROUP BY products.name ORDER BY products.name LIMIT 1000;
SELECT orders.order_id, orders.status, SUM(orders.quantity) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.stock <= 426 AND products.description != 'active' GROUP BY orders.order_id, orders.status ORDER BY orders.order_id, orders.status;
SELECT orders.order_date, AVG(orders.order_id) as agg_0 FROM orders  WHERE orders.product_id <= 1668 AND orders.status != 'pending' AND orders.order_id >= 180 AND orders.total_amount <= 68.63934891639441 AND orders.price <= 28.938977707326448 GROUP BY orders.order_date ORDER BY orders.order_date;
SELECT orders.quantity, products.stock, SUM(orders.price + orders.order_id) as agg_0, COUNT(*) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.product_id >= 47 GROUP BY orders.quantity, products.stock HAVING COUNT(*) <= 16 ORDER BY orders.quantity, products.stock;
SELECT users.created_at, products.description, SUM(orders.order_id) as agg_0, COUNT(*) as agg_1, MIN(orders.order_id + products.stock) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.created_at != 'inactive' AND products.description != 'active' AND orders.product_id >= 4351 AND products.name != 'inactive' GROUP BY users.created_at, products.description ORDER BY users.created_at, products.description;
SELECT users.status, SUM(orders.order_id) as agg_0, MIN(orders.product_id + products.product_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.status != 'pending' AND orders.user_id >= 2939 GROUP BY users.status ORDER BY users.status;
SELECT products.description, orders.status, COUNT(*) as agg_0, AVG(orders.total_amount + orders.product_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.quantity <= 15 AND orders.order_date != 'inactive' AND products.description != 'active' AND orders.status != 'inactive' AND orders.user_id >= 4233 GROUP BY products.description, orders.status ORDER BY products.description, orders.status;
SELECT users.age, COUNT(*) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.stock >= 3603 AND orders.user_id >= 1269 AND orders.order_id <= 740 GROUP BY users.age ORDER BY users.age LIMIT 100;
SELECT AVG(orders.total_amount) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.user_id >= 488 AND orders.product_id <= 692 AND users.status = 'active' AND orders.order_date != 'active' AND orders.total_amount >= 44.16411487965376;
SELECT orders.order_date, users.created_at, AVG(orders.product_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.order_id >= 70 AND orders.price >= 469.3079703377802 AND orders.order_date != 'pending' GROUP BY orders.order_date, users.created_at ORDER BY orders.order_date, users.created_at LIMIT 100;
SELECT users.status, SUM(products.product_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.name != 'inactive' AND orders.order_id <= 4094 AND orders.price >= 323.0827037913692 AND orders.user_id >= 620 GROUP BY users.status ORDER BY users.status LIMIT 1000;
SELECT orders.user_id, orders.quantity, SUM(orders.price + products.product_id) as agg_0, SUM(users.age + orders.price) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.age >= 911 AND products.name = 'pending' AND orders.order_date != 'inactive' AND users.city != 'active' GROUP BY orders.user_id, orders.quantity ORDER BY orders.user_id, orders.quantity LIMIT 1000;
SELECT products.created_at, products.category, products.name, MAX(products.stock) as agg_0, MAX(products.product_id) as agg_1, MAX(products.product_id + products.stock) as agg_2 FROM products  WHERE products.category != 'pending' AND products.stock <= 48 GROUP BY products.created_at, products.category, products.name ORDER BY products.created_at, products.category, products.name;
SELECT products.name, products.stock, AVG(orders.price + products.price) as agg_0, SUM(orders.price + orders.total_amount) as agg_1, COUNT(*) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.user_id <= 3565 AND orders.order_id <= 4554 AND products.category = 'active' GROUP BY products.name, products.stock ORDER BY products.name, products.stock;
SELECT orders.status, products.created_at, AVG(orders.order_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.price >= 136.9687655511193 AND products.description != 'inactive' AND orders.status != 'active' AND orders.price >= 38.183450428145115 GROUP BY orders.status, products.created_at ORDER BY orders.status, products.created_at;
SELECT orders.quantity, products.category, orders.order_id, MAX(products.price) as agg_0, AVG(orders.product_id) as agg_1, MAX(products.stock) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE orders.total_amount <= 31.048290957591394 AND products.created_at != 'pending' GROUP BY orders.quantity, products.category, orders.order_id HAVING AVG(orders.product_id) <= 5 ORDER BY orders.quantity, products.category, orders.order_id;
SELECT COUNT(*) as agg_0, AVG(orders.price) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.user_id <= 84 AND orders.user_id >= 1;
SELECT orders.order_date, products.stock, MAX(products.product_id) as agg_0, SUM(products.price + orders.total_amount) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE products.price <= 12.26809601045909 AND products.description != 'pending' GROUP BY orders.order_date, products.stock ORDER BY orders.order_date, products.stock;
SELECT orders.quantity, orders.order_date, COUNT(*) as agg_0, COUNT(*) as agg_1, MAX(orders.price) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.stock <= 1276 AND users.name != 'active' AND orders.quantity <= 661 GROUP BY orders.quantity, orders.order_date ORDER BY orders.quantity, orders.order_date;
SELECT orders.user_id, AVG(products.product_id + orders.quantity) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.name != 'inactive' AND users.created_at = 'inactive' AND orders.user_id <= 81 AND products.name != 'inactive' AND orders.order_id <= 828 GROUP BY orders.user_id ORDER BY orders.user_id;
SELECT users.city, users.email, COUNT(*) as agg_0, SUM(users.user_id + users.age) as agg_1, MIN(users.age) as agg_2 FROM users  WHERE users.name = 'active' AND users.status = 'active' AND users.city != 'inactive' AND users.email != 'pending' AND users.age <= 1830 GROUP BY users.city, users.email HAVING COUNT(*) <= 49 ORDER BY users.city, users.email LIMIT 1000;
SELECT products.name, orders.status, orders.order_id, SUM(products.product_id) as agg_0, COUNT(*) as agg_1, SUM(orders.order_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.status = 'active' AND products.stock <= 92 AND products.name = 'active' AND products.price >= 42.838556415982254 AND orders.order_id <= 4179 GROUP BY products.name, orders.status, orders.order_id ORDER BY products.name, orders.status, orders.order_id;
SELECT users.city, MAX(users.user_id + orders.product_id) as agg_0, SUM(orders.product_id + orders.total_amount) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.created_at != 'pending' GROUP BY users.city HAVING MAX(users.user_id + orders.product_id) <= 45 ORDER BY users.city;
SELECT orders.order_id, products.product_id, orders.quantity, AVG(products.price + orders.total_amount) as agg_0, SUM(products.product_id + products.stock) as agg_1, MAX(orders.user_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.created_at != 'active' AND orders.status != 'active' AND orders.total_amount >= 174.803895243694 GROUP BY orders.order_id, products.product_id, orders.quantity HAVING SUM(products.product_id + products.stock) >= 71 ORDER BY orders.order_id, products.product_id, orders.quantity;
SELECT products.description, orders.order_id, orders.user_id, COUNT(*) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.user_id >= 61 AND orders.user_id >= 750 AND orders.status != 'active' GROUP BY products.description, orders.order_id, orders.user_id ORDER BY products.description, orders.order_id, orders.user_id LIMIT 1000;
SELECT orders.order_date, MAX(orders.product_id) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE products.category != 'inactive' AND products.product_id >= 591 AND products.name != 'inactive' AND orders.order_id >= 30 GROUP BY orders.order_date ORDER BY orders.order_date;
SELECT orders.status, MAX(products.stock) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE products.price >= 2.4143123768938946 AND products.category = 'inactive' AND products.stock <= 67 AND products.product_id >= 16 AND orders.product_id >= 54 GROUP BY orders.status ORDER BY orders.status;
SELECT users.created_at, COUNT(*) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.description != 'active' AND users.created_at != 'inactive' AND users.name != 'pending' GROUP BY users.created_at HAVING COUNT(*) >= 58 ORDER BY users.created_at;
SELECT users.name, AVG(users.user_id + users.age) as agg_0, SUM(users.user_id + users.age) as agg_1, COUNT(*) as agg_2 FROM users  WHERE users.city = 'active' GROUP BY users.name ORDER BY users.name;
SELECT COUNT(*) as agg_0, MAX(products.product_id) as agg_1, MAX(users.user_id + products.stock) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.status = 'inactive' AND orders.quantity >= 139 AND products.created_at != 'pending' AND orders.order_id >= 804 LIMIT 100;
SELECT users.status, users.name, users.age, COUNT(*) as agg_0, AVG(users.user_id + users.age) as agg_1 FROM users  WHERE users.user_id <= 322 AND users.age <= 332 AND users.status = 'active' AND users.created_at = 'active' GROUP BY users.status, users.name, users.age ORDER BY users.status, users.name, users.age;
SELECT MIN(orders.user_id + orders.total_amount) as agg_0, SUM(orders.order_id + orders.price) as agg_1 FROM orders  WHERE orders.order_date = 'active' AND orders.product_id <= 5;
SELECT users.status, products.product_id, AVG(users.user_id + orders.total_amount) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.created_at = 'pending' AND products.price <= 1.9921719003915923 AND orders.total_amount <= 3.7906654376460014 AND orders.product_id >= 45 AND products.category = 'pending' GROUP BY users.status, products.product_id ORDER BY users.status, products.product_id;
SELECT orders.user_id, users.name, orders.status, COUNT(*) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE orders.user_id <= 322 AND users.status = 'active' AND orders.order_date != 'inactive' GROUP BY orders.user_id, users.name, orders.status ORDER BY orders.user_id, users.name, orders.status;
SELECT orders.order_id, AVG(orders.total_amount + orders.quantity) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_id >= 53 AND orders.user_id >= 2034 GROUP BY orders.order_id ORDER BY orders.order_id;
SELECT orders.user_id, MIN(orders.user_id) as agg_0 FROM orders  WHERE orders.price <= 82.57820724961451 AND orders.order_id <= 726 AND orders.quantity <= 17 GROUP BY orders.user_id ORDER BY orders.user_id;
SELECT MAX(orders.total_amount) as agg_0, MIN(users.user_id + products.stock) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.user_id <= 3548 AND orders.product_id <= 475 AND users.name != 'pending' AND orders.order_date = 'pending' AND orders.user_id >= 401;
SELECT users.name, users.age, users.city, SUM(users.age) as agg_0, COUNT(*) as agg_1 FROM users  WHERE users.city != 'pending' AND users.status != 'pending' AND users.user_id >= 894 AND users.age <= 556 AND users.email = 'active' GROUP BY users.name, users.age, users.city ORDER BY users.name, users.age, users.city LIMIT 1000;
SELECT SUM(orders.price + orders.order_id) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.product_id >= 3556 AND orders.total_amount >= 44.77962239617371 AND users.status != 'pending' AND users.name != 'inactive';
SELECT orders.user_id, users.city, MAX(users.age + orders.user_id) as agg_0, MIN(orders.price + orders.product_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.age >= 740 GROUP BY orders.user_id, users.city ORDER BY orders.user_id, users.city;
SELECT products.product_id, products.description, MIN(orders.price + orders.order_id) as agg_0, COUNT(*) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE products.name = 'inactive' AND orders.product_id >= 444 AND orders.user_id <= 191 AND orders.order_id >= 735 GROUP BY products.product_id, products.description ORDER BY products.product_id, products.description;
SELECT users.name, AVG(orders.order_id) as agg_0, MAX(orders.user_id) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.name != 'active' AND orders.user_id >= 1138 AND products.product_id >= 9 AND users.email = 'pending' GROUP BY users.name HAVING AVG(orders.order_id) <= 38 ORDER BY users.name;
SELECT products.created_at, orders.status, products.name, MIN(orders.total_amount + products.stock) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.product_id <= 107 GROUP BY products.created_at, orders.status, products.name HAVING MIN(orders.total_amount + products.stock) <= 63 ORDER BY products.created_at, orders.status, products.name;
SELECT orders.status, orders.quantity, users.age, COUNT(*) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.age <= 850 AND users.city = 'inactive' AND orders.total_amount <= 65.19399865084016 AND orders.quantity <= 4184 GROUP BY orders.status, orders.quantity, users.age ORDER BY orders.status, orders.quantity, users.age;
SELECT orders.order_date, AVG(products.stock) as agg_0, COUNT(*) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.age >= 730 AND users.status = 'pending' AND orders.quantity >= 418 GROUP BY orders.order_date ORDER BY orders.order_date;
SELECT MIN(users.age) as agg_0, COUNT(*) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.product_id <= 1749 AND users.name != 'inactive' AND products.name != 'pending' AND users.user_id >= 74;
SELECT users.created_at, orders.quantity, MIN(orders.product_id + orders.price) as agg_0, SUM(orders.order_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.status = 'inactive' AND users.email != 'inactive' AND orders.order_date != 'active' AND users.created_at != 'pending' AND orders.user_id <= 44 GROUP BY users.created_at, orders.quantity ORDER BY users.created_at, orders.quantity;
SELECT orders.order_date, users.city, MIN(orders.order_id) as agg_0, AVG(orders.price) as agg_1, MAX(orders.user_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.city = 'pending' AND orders.quantity >= 4070 GROUP BY orders.order_date, users.city ORDER BY orders.order_date, users.city;
SELECT orders.order_date, products.created_at, users.age, AVG(users.age + users.user_id) as agg_0, COUNT(*) as agg_1, MIN(orders.price + users.age) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.total_amount >= 39.98761228121603 AND products.product_id <= 596 AND products.name != 'active' AND users.user_id <= 727 GROUP BY orders.order_date, products.created_at, users.age ORDER BY orders.order_date, products.created_at, users.age;
SELECT orders.status, SUM(products.stock + products.product_id) as agg_0, MIN(orders.total_amount + users.age) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.created_at = 'pending' AND users.email = 'pending' GROUP BY orders.status ORDER BY orders.status;
SELECT users.created_at, users.name, AVG(users.age + users.user_id) as agg_0, MIN(users.age) as agg_1, MAX(users.user_id) as agg_2 FROM users  WHERE users.age <= 2099 GROUP BY users.created_at, users.name ORDER BY users.created_at, users.name LIMIT 10;
SELECT products.stock, products.name, SUM(products.stock) as agg_0, AVG(products.product_id) as agg_1, AVG(products.stock) as agg_2 FROM products  WHERE products.description = 'pending' AND products.created_at = 'active' AND products.price >= 100.77939897378569 AND products.name = 'active' GROUP BY products.stock, products.name HAVING AVG(products.product_id) >= 36 ORDER BY products.stock, products.name;
SELECT AVG(products.stock + orders.user_id) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.product_id >= 1944 AND users.status != 'active' AND orders.order_date != 'pending';
SELECT users.name, COUNT(*) as agg_0, MIN(users.user_id) as agg_1, AVG(users.user_id + users.age) as agg_2 FROM users  WHERE users.created_at = 'active' GROUP BY users.name ORDER BY users.name;
SELECT orders.order_id, products.description, SUM(products.price + users.user_id) as agg_0, SUM(orders.total_amount) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.user_id <= 947 AND orders.order_id <= 963 AND orders.quantity <= 2873 GROUP BY orders.order_id, products.description ORDER BY orders.order_id, products.description LIMIT 100;
SELECT COUNT(*) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.status = 'pending' LIMIT 10;
SELECT orders.order_id, users.created_at, MAX(products.stock + orders.order_id) as agg_0, MAX(products.price + users.age) as agg_1, SUM(users.user_id) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.price >= 18.00696742267913 AND users.user_id >= 831 AND products.description != 'inactive' GROUP BY orders.order_id, users.created_at ORDER BY orders.order_id, users.created_at;
SELECT products.category, products.stock, AVG(products.price) as agg_0, MAX(orders.order_id + orders.total_amount) as agg_1, MAX(orders.quantity) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.quantity <= 157 AND orders.product_id <= 720 AND users.user_id <= 4786 GROUP BY products.category, products.stock ORDER BY products.category, products.stock;
SELECT orders.quantity, AVG(products.stock) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.email != 'inactive' AND products.description = 'pending' GROUP BY orders.quantity ORDER BY orders.quantity LIMIT 1000;
SELECT COUNT(*) as agg_0, MAX(products.price) as agg_1, MAX(products.stock + products.product_id) as agg_2 FROM products  WHERE products.created_at != 'pending';
SELECT COUNT(*) as agg_0, AVG(products.product_id) as agg_1, MIN(products.stock) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.user_id <= 185 AND orders.product_id >= 2906;
SELECT orders.order_date, orders.quantity, users.city, MAX(orders.quantity + products.price) as agg_0, SUM(products.product_id + orders.product_id) as agg_1, SUM(products.product_id) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.stock <= 956 AND products.name != 'active' GROUP BY orders.order_date, orders.quantity, users.city ORDER BY orders.order_date, orders.quantity, users.city;
SELECT users.email, AVG(users.age) as agg_0, COUNT(*) as agg_1 FROM users  WHERE users.name = 'active' AND users.created_at = 'active' AND users.age >= 8 GROUP BY users.email HAVING AVG(users.age) <= 11 ORDER BY users.email;
SELECT orders.user_id, COUNT(*) as agg_0, SUM(orders.user_id + users.user_id) as agg_1, AVG(users.age) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.user_id <= 4627 GROUP BY orders.user_id ORDER BY orders.user_id LIMIT 100;
SELECT products.category, users.user_id, MIN(products.price + orders.quantity) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.email != 'pending' AND orders.status = 'active' AND orders.quantity <= 2412 GROUP BY products.category, users.user_id ORDER BY products.category, users.user_id;
SELECT products.description, orders.user_id, products.category, SUM(products.price) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.description = 'pending' AND orders.user_id <= 87 AND orders.order_date = 'inactive' AND orders.total_amount >= 6.840633230200856 AND products.product_id <= 952 GROUP BY products.description, orders.user_id, products.category ORDER BY products.description, orders.user_id, products.category;
SELECT products.name, users.age, users.city, AVG(orders.user_id) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.created_at != 'active' AND orders.price <= 63.95197748397231 AND orders.quantity >= 253 GROUP BY products.name, users.age, users.city HAVING AVG(orders.user_id) >= 59 ORDER BY products.name, users.age, users.city;
SELECT products.category, products.created_at, MIN(orders.user_id) as agg_0, SUM(products.product_id) as agg_1, AVG(orders.user_id + users.user_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.status = 'inactive' GROUP BY products.category, products.created_at HAVING MIN(orders.user_id) <= 28 ORDER BY products.category, products.created_at;
SELECT MIN(orders.quantity + orders.user_id) as agg_0, AVG(products.stock) as agg_1, SUM(products.product_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.status != 'pending' AND orders.user_id <= 3070 AND orders.total_amount >= 248.25514315201556 AND users.city != 'inactive' AND products.price <= 91.74024524594779;
SELECT orders.order_id, COUNT(*) as agg_0, AVG(orders.product_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.created_at != 'inactive' AND users.age >= 577 AND orders.order_id <= 345 AND orders.price >= 166.60002926438165 AND users.email != 'active' GROUP BY orders.order_id ORDER BY orders.order_id;
SELECT products.name, products.stock, AVG(orders.price) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.product_id >= 491 AND products.category != 'active' AND products.description != 'pending' GROUP BY products.name, products.stock ORDER BY products.name, products.stock;
SELECT products.name, products.description, orders.order_id, MAX(orders.total_amount) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.category = 'active' AND products.description != 'pending' GROUP BY products.name, products.description, orders.order_id ORDER BY products.name, products.description, orders.order_id;
SELECT users.email, orders.status, products.product_id, MAX(users.age + orders.quantity) as agg_0, MIN(products.stock + orders.total_amount) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.price >= 19.506996870529612 AND products.description != 'pending' AND products.name = 'pending' AND users.email != 'pending' AND orders.total_amount >= 43.915973398619414 GROUP BY users.email, orders.status, products.product_id HAVING MAX(users.age + orders.quantity) >= 40 ORDER BY users.email, orders.status, products.product_id;
SELECT users.user_id, MAX(users.age + users.user_id) as agg_0 FROM users  WHERE users.created_at = 'inactive' AND users.city = 'active' GROUP BY users.user_id ORDER BY users.user_id;
SELECT users.user_id, MIN(products.stock) as agg_0, MIN(orders.quantity) as agg_1, SUM(products.stock) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.status = 'active' AND orders.price <= 68.08500257465025 GROUP BY users.user_id HAVING SUM(products.stock) >= 53 ORDER BY users.user_id;
SELECT users.name, COUNT(*) as agg_0, MAX(users.age + users.user_id) as agg_1 FROM users  WHERE users.city != 'pending' AND users.user_id >= 294 GROUP BY users.name HAVING COUNT(*) >= 79 ORDER BY users.name;
SELECT users.created_at, MIN(orders.quantity + products.product_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_id >= 99 GROUP BY users.created_at ORDER BY users.created_at;
SELECT products.name, COUNT(*) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.created_at != 'active' AND products.price <= 81.1619204359214 GROUP BY products.name ORDER BY products.name;
SELECT products.description, COUNT(*) as agg_0, MAX(orders.quantity + products.product_id) as agg_1, COUNT(*) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.total_amount >= 143.06969582436508 AND users.name = 'pending' AND orders.order_date = 'inactive' AND orders.user_id <= 643 AND orders.status = 'pending' GROUP BY products.description ORDER BY products.description;
SELECT products.stock, MIN(orders.quantity) as agg_0, COUNT(*) as agg_1, MIN(orders.quantity + orders.order_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.user_id >= 49 AND products.created_at = 'active' GROUP BY products.stock ORDER BY products.stock LIMIT 10;
SELECT orders.product_id, SUM(orders.quantity + orders.product_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.status != 'inactive' AND users.name != 'active' GROUP BY orders.product_id ORDER BY orders.product_id;
SELECT products.created_at, users.user_id, MIN(products.price) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.created_at != 'pending' AND users.email = 'inactive' AND orders.product_id <= 726 GROUP BY products.created_at, users.user_id ORDER BY products.created_at, users.user_id;
SELECT COUNT(*) as agg_0, MAX(orders.product_id + orders.order_id) as agg_1, MIN(products.product_id + orders.total_amount) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.status = 'active' AND orders.user_id >= 3338 AND orders.status != 'inactive' AND orders.order_id >= 2252 AND products.stock <= 28;
SELECT products.stock, products.name, MAX(products.product_id) as agg_0, COUNT(*) as agg_1, MIN(products.stock) as agg_2 FROM products  WHERE products.category = 'active' AND products.product_id >= 40 AND products.created_at = 'active' GROUP BY products.stock, products.name ORDER BY products.stock, products.name;
SELECT users.age, MAX(orders.quantity + orders.price) as agg_0, MAX(orders.price) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.city = 'active' AND orders.total_amount <= 46.70849328154435 GROUP BY users.age ORDER BY users.age LIMIT 100;
SELECT users.email, users.age, MIN(products.product_id + users.user_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.name != 'inactive' AND products.created_at != 'pending' AND products.stock >= 420 GROUP BY users.email, users.age ORDER BY users.email, users.age LIMIT 1000;
SELECT AVG(orders.order_id) as agg_0, SUM(orders.user_id + orders.price) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE orders.quantity <= 188;
SELECT users.name, users.user_id, COUNT(*) as agg_0 FROM users  WHERE users.name != 'active' AND users.email != 'inactive' GROUP BY users.name, users.user_id ORDER BY users.name, users.user_id;
SELECT MIN(products.price + products.stock) as agg_0, MAX(orders.user_id + orders.product_id) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.created_at = 'active' AND users.age >= 14;
SELECT COUNT(*) as agg_0, COUNT(*) as agg_1, MIN(products.stock + products.price) as agg_2 FROM products  WHERE products.name = 'active' AND products.description = 'inactive' LIMIT 1000;
SELECT SUM(products.product_id) as agg_0, COUNT(*) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.created_at != 'active';
SELECT AVG(orders.product_id) as agg_0, MIN(orders.order_id + orders.total_amount) as agg_1, COUNT(*) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE orders.total_amount <= 2.0137005605265004 AND products.created_at != 'pending' AND orders.quantity >= 820 AND orders.user_id >= 965;
SELECT orders.order_id, SUM(orders.user_id) as agg_0, SUM(orders.product_id) as agg_1, MIN(orders.quantity + orders.order_id) as agg_2 FROM orders  WHERE orders.quantity >= 2060 AND orders.order_date != 'pending' AND orders.product_id >= 631 AND orders.status = 'active' AND orders.order_id <= 957 GROUP BY orders.order_id ORDER BY orders.order_id;
SELECT orders.quantity, orders.order_date, MAX(orders.total_amount) as agg_0, COUNT(*) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_id >= 407 GROUP BY orders.quantity, orders.order_date ORDER BY orders.quantity, orders.order_date;
SELECT users.city, MIN(users.age) as agg_0, AVG(products.price + orders.quantity) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.name != 'active' AND products.category = 'pending' GROUP BY users.city ORDER BY users.city;
SELECT orders.status, products.product_id, orders.quantity, COUNT(*) as agg_0, MAX(orders.order_id) as agg_1, AVG(products.product_id) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.email != 'active' AND users.age >= 917 AND products.category != 'active' AND orders.price >= 12.007506562766324 AND users.status != 'inactive' GROUP BY orders.status, products.product_id, orders.quantity ORDER BY orders.status, products.product_id, orders.quantity;
SELECT users.age, orders.status, users.email, AVG(orders.total_amount + orders.price) as agg_0, AVG(users.user_id) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.price >= 13.714240326396524 GROUP BY users.age, orders.status, users.email ORDER BY users.age, orders.status, users.email LIMIT 1000;
SELECT SUM(orders.user_id + orders.quantity) as agg_0, MIN(orders.product_id) as agg_1 FROM orders  WHERE orders.order_id <= 666;
SELECT users.status, MAX(users.user_id) as agg_0 FROM users  WHERE users.age <= 618 AND users.city = 'inactive' AND users.created_at = 'pending' AND users.status != 'active' AND users.user_id <= 286 GROUP BY users.status ORDER BY users.status;
SELECT SUM(users.user_id) as agg_0, MAX(users.age + users.user_id) as agg_1, MAX(users.age + users.user_id) as agg_2 FROM users  WHERE users.email != 'active' AND users.status = 'inactive' AND users.name = 'inactive' AND users.created_at = 'inactive' AND users.age <= 910;
SELECT orders.order_id, orders.product_id, orders.quantity, COUNT(*) as agg_0, MAX(orders.price) as agg_1, COUNT(*) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.price >= 18.26885296937086 AND users.created_at != 'active' AND orders.product_id >= 4271 AND orders.status != 'inactive' GROUP BY orders.order_id, orders.product_id, orders.quantity ORDER BY orders.order_id, orders.product_id, orders.quantity;
SELECT users.status, products.created_at, products.description, MIN(products.price + orders.price) as agg_0, AVG(orders.total_amount) as agg_1, MIN(orders.product_id + users.user_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_date = 'inactive' AND products.description = 'active' AND orders.user_id >= 826 AND users.age <= 971 GROUP BY users.status, products.created_at, products.description ORDER BY users.status, products.created_at, products.description;
SELECT products.created_at, AVG(products.product_id + products.stock) as agg_0, COUNT(*) as agg_1, SUM(orders.total_amount) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.quantity >= 9 AND products.product_id >= 90 GROUP BY products.created_at ORDER BY products.created_at;
SELECT users.email, SUM(orders.price) as agg_0, MIN(orders.total_amount + users.user_id) as agg_1, SUM(users.age + orders.total_amount) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.created_at != 'inactive' AND users.age >= 3350 GROUP BY users.email ORDER BY users.email;
SELECT orders.quantity, users.city, users.age, SUM(orders.quantity + orders.total_amount) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.description = 'active' AND orders.quantity <= 160 AND products.name = 'inactive' GROUP BY orders.quantity, users.city, users.age ORDER BY orders.quantity, users.city, users.age;
SELECT orders.quantity, COUNT(*) as agg_0, SUM(orders.product_id + orders.user_id) as agg_1 FROM orders  WHERE orders.order_date != 'inactive' AND orders.status != 'active' GROUP BY orders.quantity ORDER BY orders.quantity LIMIT 1000;
SELECT products.name, orders.quantity, users.age, COUNT(*) as agg_0, SUM(users.age + orders.product_id) as agg_1, MAX(orders.product_id + users.user_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.product_id <= 3613 GROUP BY products.name, orders.quantity, users.age ORDER BY products.name, orders.quantity, users.age;
SELECT COUNT(*) as agg_0, AVG(products.stock) as agg_1, SUM(products.price + orders.order_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.price >= 54.142757777298186 AND orders.order_date = 'pending' AND orders.quantity <= 142;
SELECT products.name, SUM(orders.product_id) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.description != 'inactive' AND users.created_at != 'active' AND orders.quantity >= 3845 AND orders.user_id <= 337 AND orders.price <= 53.66885721489488 GROUP BY products.name HAVING SUM(orders.product_id) <= 70 ORDER BY products.name;
SELECT users.name, products.name, users.age, MAX(orders.price) as agg_0, MAX(products.stock + orders.order_id) as agg_1, COUNT(*) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.stock <= 979 AND orders.product_id <= 898 AND users.status = 'pending' AND orders.quantity >= 973 GROUP BY users.name, products.name, users.age ORDER BY users.name, products.name, users.age LIMIT 100;
SELECT MAX(orders.price) as agg_0, SUM(products.stock) as agg_1, MIN(users.user_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.email != 'inactive' AND users.name = 'pending' AND orders.price <= 65.86427409101604 AND users.user_id >= 4465 AND orders.order_id >= 293;
SELECT products.description, users.email, COUNT(*) as agg_0, SUM(orders.price) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.status = 'pending' GROUP BY products.description, users.email ORDER BY products.description, users.email;
SELECT orders.product_id, orders.order_id, users.age, MAX(users.user_id + orders.user_id) as agg_0, COUNT(*) as agg_1, AVG(orders.total_amount) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.name = 'active' AND orders.order_date != 'pending' AND orders.product_id <= 477 AND orders.order_id >= 3236 AND users.status != 'pending' GROUP BY orders.product_id, orders.order_id, users.age ORDER BY orders.product_id, orders.order_id, users.age;
SELECT users.city, MIN(orders.total_amount) as agg_0, AVG(users.user_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.created_at != 'active' GROUP BY users.city ORDER BY users.city;
SELECT users.name, MAX(users.user_id) as agg_0, MIN(orders.price) as agg_1, MAX(orders.price) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.product_id >= 24 AND orders.status != 'active' GROUP BY users.name ORDER BY users.name;
SELECT orders.quantity, orders.order_id, products.name, COUNT(*) as agg_0, MAX(orders.order_id + orders.price) as agg_1, MAX(orders.total_amount + orders.price) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.email != 'pending' AND products.category = 'inactive' AND products.product_id >= 853 AND products.name != 'active' AND orders.price <= 51.74001068286363 GROUP BY orders.quantity, orders.order_id, products.name ORDER BY orders.quantity, orders.order_id, products.name;
SELECT products.created_at, AVG(users.user_id) as agg_0, AVG(products.product_id + orders.price) as agg_1, MAX(orders.order_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.price >= 431.3720367851856 AND products.product_id <= 733 AND orders.user_id >= 35 GROUP BY products.created_at ORDER BY products.created_at;
SELECT products.description, products.product_id, COUNT(*) as agg_0, SUM(products.stock) as agg_1, SUM(orders.product_id) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE orders.quantity <= 630 AND products.description = 'pending' AND products.name = 'inactive' AND orders.order_id <= 271 AND orders.status != 'inactive' GROUP BY products.description, products.product_id ORDER BY products.description, products.product_id;
SELECT SUM(orders.user_id + orders.quantity) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.created_at != 'pending' AND users.age >= 77 AND orders.quantity >= 2792 AND products.stock >= 4161 AND users.status != 'pending';
SELECT products.name, orders.order_id, COUNT(*) as agg_0, COUNT(*) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.order_id <= 76 AND orders.status = 'pending' AND products.price >= 93.82478603759537 AND orders.user_id >= 387 GROUP BY products.name, orders.order_id ORDER BY products.name, orders.order_id;
SELECT users.city, orders.order_id, orders.product_id, SUM(orders.order_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.user_id >= 2420 AND orders.quantity >= 4444 AND users.city = 'pending' AND orders.order_id >= 2781 GROUP BY users.city, orders.order_id, orders.product_id ORDER BY users.city, orders.order_id, orders.product_id;
SELECT products.product_id, products.created_at, COUNT(*) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_id <= 645 GROUP BY products.product_id, products.created_at ORDER BY products.product_id, products.created_at;
SELECT users.age, products.category, users.user_id, AVG(products.price) as agg_0, MAX(products.stock + products.price) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.stock >= 349 AND products.created_at != 'pending' AND users.age <= 87 GROUP BY users.age, products.category, users.user_id ORDER BY users.age, products.category, users.user_id;
SELECT users.city, users.age, SUM(orders.order_id + orders.total_amount) as agg_0, MAX(products.product_id + users.age) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.product_id >= 3444 AND users.status = 'active' AND products.created_at = 'inactive' AND users.city != 'active' GROUP BY users.city, users.age ORDER BY users.city, users.age;
SELECT MIN(products.stock) as agg_0, AVG(products.stock + orders.order_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.status = 'active' AND products.product_id >= 2209;
SELECT COUNT(*) as agg_0, SUM(products.stock) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.price >= 52.01520734455774 LIMIT 100;
SELECT users.email, users.city, users.created_at, MAX(users.user_id + users.age) as agg_0 FROM users  WHERE users.status != 'active' AND users.age >= 158 AND users.name = 'active' GROUP BY users.email, users.city, users.created_at ORDER BY users.email, users.city, users.created_at;
SELECT AVG(products.product_id) as agg_0, COUNT(*) as agg_1, MAX(products.stock + products.price) as agg_2 FROM products  WHERE products.price <= 19.00246493660912;
SELECT MAX(products.stock) as agg_0, MAX(orders.quantity + orders.user_id) as agg_1, MIN(orders.user_id + users.user_id) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.city != 'active' AND products.created_at != 'active' AND products.stock <= 52;
SELECT orders.status, COUNT(*) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE orders.quantity <= 450 AND orders.order_id >= 4 AND orders.product_id >= 55 AND products.created_at = 'active' GROUP BY orders.status ORDER BY orders.status;
SELECT orders.product_id, products.created_at, users.city, COUNT(*) as agg_0, COUNT(*) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.created_at != 'inactive' AND orders.order_date = 'pending' AND orders.order_id <= 24 AND orders.user_id >= 82 AND products.stock <= 93 GROUP BY orders.product_id, products.created_at, users.city ORDER BY orders.product_id, products.created_at, users.city;
SELECT users.name, users.age, orders.quantity, AVG(orders.price) as agg_0, SUM(users.age) as agg_1, COUNT(*) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.order_id <= 82 AND users.city != 'pending' AND orders.order_date = 'active' AND users.created_at != 'inactive' AND products.category != 'inactive' GROUP BY users.name, users.age, orders.quantity ORDER BY users.name, users.age, orders.quantity;
SELECT users.city, COUNT(*) as agg_0, COUNT(*) as agg_1, AVG(orders.quantity + users.age) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.status = 'active' AND orders.product_id >= 6 GROUP BY users.city ORDER BY users.city LIMIT 1000;
SELECT users.email, orders.user_id, users.city, MAX(orders.price) as agg_0, MIN(orders.price + orders.quantity) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.price <= 33.503544229955594 GROUP BY users.email, orders.user_id, users.city ORDER BY users.email, orders.user_id, users.city;
SELECT SUM(users.age + orders.order_id) as agg_0, AVG(orders.price + orders.user_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.product_id >= 96 AND orders.status = 'pending' AND users.email = 'active' AND products.description = 'inactive' AND products.product_id <= 844 LIMIT 10;
SELECT SUM(orders.product_id) as agg_0, MIN(orders.order_id) as agg_1, MIN(orders.order_id + orders.product_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.product_id <= 902;
SELECT users.age, users.name, MIN(orders.quantity + orders.total_amount) as agg_0, SUM(orders.product_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.email = 'inactive' AND users.city != 'inactive' AND users.name != 'active' AND orders.status = 'inactive' GROUP BY users.age, users.name ORDER BY users.age, users.name;
SELECT products.stock, products.name, products.created_at, AVG(products.price) as agg_0, MAX(products.stock) as agg_1 FROM products  WHERE products.product_id >= 392 AND products.category = 'pending' GROUP BY products.stock, products.name, products.created_at ORDER BY products.stock, products.name, products.created_at;
SELECT products.product_id, products.description, products.name, MAX(products.product_id + products.price) as agg_0, MIN(products.price) as agg_1 FROM products  WHERE products.price <= 61.51890647440628 AND products.description = 'inactive' AND products.created_at != 'pending' AND products.name = 'active' AND products.product_id <= 795 GROUP BY products.product_id, products.description, products.name ORDER BY products.product_id, products.description, products.name LIMIT 100;
SELECT orders.status, orders.order_date, orders.quantity, MAX(orders.order_id) as agg_0, AVG(orders.quantity) as agg_1, AVG(orders.total_amount) as agg_2 FROM orders  WHERE orders.total_amount >= 65.33798700586686 AND orders.status != 'pending' GROUP BY orders.status, orders.order_date, orders.quantity ORDER BY orders.status, orders.order_date, orders.quantity LIMIT 1000;
SELECT orders.user_id, users.created_at, AVG(users.age + users.user_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.city != 'pending' AND users.age >= 136 GROUP BY orders.user_id, users.created_at ORDER BY orders.user_id, users.created_at;
SELECT products.description, orders.status, MAX(products.product_id + orders.user_id) as agg_0, AVG(orders.product_id) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE orders.user_id >= 206 AND products.created_at != 'active' AND products.description != 'inactive' AND products.category = 'active' AND products.product_id <= 14 GROUP BY products.description, orders.status ORDER BY products.description, orders.status;
SELECT orders.product_id, orders.user_id, orders.order_date, AVG(orders.total_amount + orders.order_id) as agg_0, MAX(orders.price + orders.order_id) as agg_1, AVG(orders.user_id) as agg_2 FROM orders  WHERE orders.user_id <= 31 AND orders.status = 'inactive' GROUP BY orders.product_id, orders.user_id, orders.order_date HAVING AVG(orders.user_id) >= 18 ORDER BY orders.product_id, orders.user_id, orders.order_date;
SELECT MIN(users.user_id) as agg_0, MAX(users.age + users.user_id) as agg_1, COUNT(*) as agg_2 FROM users  WHERE users.created_at = 'active' AND users.city != 'inactive' AND users.email = 'pending' AND users.age >= 338;
SELECT products.category, products.product_id, products.stock, SUM(products.stock + products.price) as agg_0, AVG(products.price + products.product_id) as agg_1, SUM(products.product_id) as agg_2 FROM products  WHERE products.product_id >= 210 AND products.category != 'inactive' GROUP BY products.category, products.product_id, products.stock ORDER BY products.category, products.product_id, products.stock LIMIT 1000;
SELECT orders.quantity, COUNT(*) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.quantity >= 587 AND orders.product_id >= 91 AND products.category != 'active' GROUP BY orders.quantity ORDER BY orders.quantity LIMIT 100;
SELECT products.description, MIN(products.stock + orders.user_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.user_id >= 644 AND orders.product_id >= 41 AND products.name != 'active' AND orders.total_amount <= 52.78732659242074 GROUP BY products.description ORDER BY products.description;
SELECT products.stock, products.category, products.created_at, SUM(products.price + products.stock) as agg_0 FROM products  WHERE products.product_id <= 4347 AND products.description != 'active' GROUP BY products.stock, products.category, products.created_at ORDER BY products.stock, products.category, products.created_at;
SELECT orders.product_id, products.stock, MIN(orders.quantity + orders.product_id) as agg_0, AVG(orders.user_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.created_at = 'inactive' AND users.user_id >= 4935 GROUP BY orders.product_id, products.stock ORDER BY orders.product_id, products.stock;
SELECT users.created_at, COUNT(*) as agg_0, COUNT(*) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.user_id <= 790 AND users.city = 'pending' AND users.email = 'pending' GROUP BY users.created_at ORDER BY users.created_at;
SELECT orders.order_id, orders.status, orders.order_date, MAX(products.stock + products.price) as agg_0, MAX(orders.user_id + products.price) as agg_1, MIN(orders.product_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.order_date = 'inactive' GROUP BY orders.order_id, orders.status, orders.order_date ORDER BY orders.order_id, orders.status, orders.order_date LIMIT 10;
SELECT AVG(products.product_id) as agg_0, AVG(products.product_id + products.price) as agg_1 FROM products  WHERE products.created_at != 'active';
SELECT COUNT(*) as agg_0 FROM products  WHERE products.price >= 12.352860941402014 AND products.stock <= 2109 LIMIT 1000;
SELECT SUM(orders.quantity) as agg_0, AVG(orders.order_id + orders.product_id) as agg_1, SUM(orders.total_amount + orders.quantity) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE products.stock <= 727 LIMIT 100;
SELECT products.category, products.product_id, orders.quantity, MIN(products.stock) as agg_0, MIN(orders.total_amount) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.quantity <= 2063 AND products.stock >= 921 AND products.name != 'pending' AND orders.user_id <= 205 GROUP BY products.category, products.product_id, orders.quantity ORDER BY products.category, products.product_id, orders.quantity;
SELECT products.stock, MAX(products.stock) as agg_0, COUNT(*) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE orders.price <= 5.402666443119397 GROUP BY products.stock HAVING MAX(products.stock) >= 61 ORDER BY products.stock;
SELECT orders.order_id, users.name, products.name, MIN(products.stock) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.name = 'pending' AND users.age <= 232 AND orders.total_amount <= 84.7544487062461 AND orders.order_id >= 3929 AND products.category = 'active' GROUP BY orders.order_id, users.name, products.name ORDER BY orders.order_id, users.name, products.name LIMIT 10;
SELECT users.name, MAX(products.price) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.order_id <= 298 AND products.created_at != 'pending' AND orders.total_amount <= 31.01045860402232 AND users.age <= 4463 GROUP BY users.name ORDER BY users.name;
SELECT orders.status, orders.product_id, orders.order_id, SUM(orders.quantity + orders.user_id) as agg_0, MAX(orders.price) as agg_1, COUNT(*) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.email = 'inactive' AND users.city = 'inactive' AND orders.status != 'active' AND users.status != 'active' AND orders.order_id <= 211 GROUP BY orders.status, orders.product_id, orders.order_id HAVING COUNT(*) >= 30 ORDER BY orders.status, orders.product_id, orders.order_id;
SELECT orders.user_id, products.category, users.status, MAX(users.age) as agg_0, MAX(orders.product_id) as agg_1, SUM(orders.quantity) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.price >= 5.79889949525019 AND users.email != 'active' AND orders.total_amount <= 137.66055444865873 GROUP BY orders.user_id, products.category, users.status ORDER BY orders.user_id, products.category, users.status;
SELECT users.user_id, users.created_at, orders.status, AVG(orders.order_id + orders.total_amount) as agg_0, MIN(orders.order_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.total_amount <= 485.55533123363904 AND users.name != 'active' GROUP BY users.user_id, users.created_at, orders.status ORDER BY users.user_id, users.created_at, orders.status LIMIT 1000;
SELECT AVG(orders.price) as agg_0, COUNT(*) as agg_1, AVG(users.user_id + orders.product_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.email = 'inactive' AND orders.product_id >= 121;
SELECT MIN(users.user_id + users.age) as agg_0, MAX(users.user_id + users.age) as agg_1, SUM(users.user_id) as agg_2 FROM users  WHERE users.created_at = 'inactive' AND users.status = 'active' AND users.age <= 492 AND users.user_id >= 332 AND users.email = 'pending' LIMIT 10;
SELECT orders.user_id, MAX(orders.user_id) as agg_0, AVG(orders.product_id) as agg_1 FROM orders  WHERE orders.product_id >= 208 GROUP BY orders.user_id HAVING MAX(orders.user_id) <= 84 ORDER BY orders.user_id;
SELECT users.user_id, MIN(orders.quantity) as agg_0, MAX(orders.price + orders.total_amount) as agg_1, AVG(users.user_id + orders.product_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.name = 'inactive' AND users.email != 'pending' GROUP BY users.user_id HAVING AVG(users.user_id + orders.product_id) >= 95 ORDER BY users.user_id;
SELECT users.email, users.city, MAX(users.age + products.product_id) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.quantity <= 82 AND orders.order_id <= 180 AND users.user_id <= 322 AND products.stock <= 214 AND users.created_at = 'active' GROUP BY users.email, users.city ORDER BY users.email, users.city;
SELECT products.name, orders.product_id, COUNT(*) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.status != 'inactive' AND orders.quantity <= 113 GROUP BY products.name, orders.product_id HAVING COUNT(*) <= 12 ORDER BY products.name, orders.product_id;
SELECT SUM(orders.price + products.stock) as agg_0, AVG(orders.price) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.product_id <= 2288 AND orders.price >= 43.50353021884253 AND orders.product_id >= 85 AND orders.status != 'inactive' AND products.stock <= 804;
SELECT orders.order_date, orders.status, orders.order_id, COUNT(*) as agg_0, MIN(orders.user_id + orders.total_amount) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE products.name != 'pending' GROUP BY orders.order_date, orders.status, orders.order_id HAVING MIN(orders.user_id + orders.total_amount) >= 90 ORDER BY orders.order_date, orders.status, orders.order_id;
SELECT AVG(orders.order_id) as agg_0, SUM(orders.product_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.name = 'pending' AND orders.order_date = 'pending';
SELECT orders.order_id, MAX(users.user_id + orders.user_id) as agg_0, COUNT(*) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.user_id >= 88 GROUP BY orders.order_id ORDER BY orders.order_id;
SELECT products.category, users.user_id, MIN(orders.product_id + products.price) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.price <= 27.9565097922973 GROUP BY products.category, users.user_id ORDER BY products.category, users.user_id;
SELECT SUM(orders.order_id) as agg_0, AVG(orders.total_amount + orders.quantity) as agg_1, COUNT(*) as agg_2 FROM orders  WHERE orders.price <= 7.620640056775351 AND orders.status = 'pending' AND orders.product_id >= 659 LIMIT 100;
SELECT users.age, AVG(orders.order_id) as agg_0, AVG(orders.quantity + orders.product_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.user_id >= 981 AND orders.order_id >= 1590 AND orders.price >= 62.667973294427995 AND orders.status = 'pending' GROUP BY users.age ORDER BY users.age;
SELECT COUNT(*) as agg_0, AVG(orders.total_amount + orders.order_id) as agg_1, SUM(orders.total_amount) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.product_id <= 4199 AND products.stock <= 114 AND orders.user_id <= 897 AND products.created_at != 'inactive';
SELECT orders.status, COUNT(*) as agg_0, AVG(orders.price) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.description != 'inactive' AND users.city = 'inactive' AND orders.total_amount >= 94.50290143663705 GROUP BY orders.status HAVING AVG(orders.price) >= 43 ORDER BY orders.status;
SELECT MIN(orders.user_id + users.age) as agg_0, COUNT(*) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.city = 'active' AND users.name != 'pending' AND orders.total_amount >= 35.832196032351035;
SELECT products.name, users.created_at, orders.user_id, AVG(users.age) as agg_0, MIN(products.stock) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.status != 'inactive' AND users.created_at != 'pending' AND users.user_id <= 218 AND orders.status != 'inactive' AND products.name != 'pending' GROUP BY products.name, users.created_at, orders.user_id ORDER BY products.name, users.created_at, orders.user_id LIMIT 10;
SELECT SUM(orders.user_id + orders.product_id) as agg_0, MAX(orders.user_id + orders.total_amount) as agg_1, COUNT(*) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.name != 'active' AND orders.status = 'inactive' AND users.user_id >= 83 AND users.created_at != 'pending';
SELECT users.status, users.age, products.created_at, SUM(orders.order_id) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.city = 'inactive' GROUP BY users.status, users.age, products.created_at ORDER BY users.status, users.age, products.created_at;
SELECT users.created_at, SUM(orders.price) as agg_0, AVG(products.stock + users.user_id) as agg_1, SUM(orders.product_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.user_id >= 1985 AND orders.order_id <= 813 AND users.email = 'inactive' GROUP BY users.created_at HAVING SUM(orders.product_id) >= 91 ORDER BY users.created_at LIMIT 100;
SELECT products.category, products.description, orders.status, MIN(products.price + orders.total_amount) as agg_0, AVG(products.price + orders.user_id) as agg_1, MAX(orders.quantity + orders.product_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.total_amount <= 23.369783632929916 AND orders.price >= 93.1060847982287 AND products.created_at != 'pending' AND orders.order_date = 'active' AND products.description != 'inactive' GROUP BY products.category, products.description, orders.status HAVING MAX(orders.quantity + orders.product_id) <= 63 ORDER BY products.category, products.description, orders.status;
SELECT products.description, orders.order_date, MIN(products.stock) as agg_0, MAX(products.price + orders.product_id) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE products.name != 'pending' AND products.price >= 410.8001387964929 AND products.category = 'pending' GROUP BY products.description, orders.order_date ORDER BY products.description, orders.order_date;
SELECT users.status, users.age, users.city, COUNT(*) as agg_0 FROM users  WHERE users.age >= 937 GROUP BY users.status, users.age, users.city ORDER BY users.status, users.age, users.city;
SELECT SUM(users.age + orders.total_amount) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.status = 'inactive' AND orders.order_id >= 2842 AND users.age <= 213 AND orders.total_amount <= 121.401956855529 AND orders.quantity <= 837 LIMIT 100;
SELECT users.city, users.user_id, COUNT(*) as agg_0, MAX(users.age) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.name != 'inactive' AND products.category != 'inactive' AND products.description = 'active' GROUP BY users.city, users.user_id HAVING MAX(users.age) <= 50 ORDER BY users.city, users.user_id;
SELECT MIN(products.stock) as agg_0 FROM products  WHERE products.name = 'pending' AND products.product_id <= 117 AND products.stock <= 914;
SELECT products.category, products.product_id, products.created_at, COUNT(*) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.user_id >= 96 GROUP BY products.category, products.product_id, products.created_at ORDER BY products.category, products.product_id, products.created_at;
SELECT SUM(orders.price) as agg_0 FROM orders  WHERE orders.status != 'pending' AND orders.order_date != 'active' AND orders.price >= 14.08059093255956;
SELECT AVG(orders.order_id + orders.product_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.status = 'pending' AND users.created_at != 'active' AND orders.quantity >= 641 AND orders.total_amount >= 4.094081415446423 AND products.created_at != 'pending';
SELECT COUNT(*) as agg_0 FROM orders  WHERE orders.total_amount <= 464.58275179471025 AND orders.quantity <= 4097;
SELECT users.status, orders.order_date, COUNT(*) as agg_0, MAX(orders.quantity + orders.total_amount) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.user_id >= 15 AND orders.total_amount <= 33.443305064562836 AND orders.product_id <= 916 AND users.status != 'inactive' AND users.created_at != 'pending' GROUP BY users.status, orders.order_date ORDER BY users.status, orders.order_date;
SELECT products.description, users.city, orders.order_date, AVG(orders.product_id + users.age) as agg_0, SUM(products.stock) as agg_1, AVG(orders.price + orders.total_amount) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.age >= 726 GROUP BY products.description, users.city, orders.order_date ORDER BY products.description, users.city, orders.order_date;
SELECT orders.quantity, MAX(orders.order_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.created_at = 'active' AND orders.quantity >= 46 AND orders.status != 'pending' AND products.description = 'active' GROUP BY orders.quantity HAVING MAX(orders.order_id) >= 60 ORDER BY orders.quantity LIMIT 100;
SELECT AVG(orders.price) as agg_0, AVG(orders.price + products.product_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.name = 'pending' AND orders.user_id <= 2577 AND users.email != 'inactive' LIMIT 100;
SELECT orders.quantity, MAX(orders.user_id + orders.price) as agg_0, AVG(orders.order_id + users.age) as agg_1, AVG(orders.quantity + orders.user_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.name = 'active' AND products.price <= 376.85280000642473 AND users.user_id >= 66 GROUP BY orders.quantity HAVING MAX(orders.user_id + orders.price) >= 89 ORDER BY orders.quantity;
SELECT products.product_id, COUNT(*) as agg_0, MIN(users.user_id + orders.order_id) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.created_at = 'inactive' AND users.city != 'active' AND orders.total_amount <= 84.2991805709502 AND products.price <= 353.3899147862046 AND products.category = 'inactive' GROUP BY products.product_id ORDER BY products.product_id;
SELECT users.email, orders.status, MAX(products.product_id + users.user_id) as agg_0, MAX(users.age) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.total_amount >= 8.95473058829754 GROUP BY users.email, orders.status ORDER BY users.email, orders.status;
SELECT MAX(users.user_id) as agg_0, MIN(orders.product_id + users.user_id) as agg_1, MIN(users.user_id + orders.total_amount) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.user_id >= 54 AND users.name != 'inactive' AND orders.total_amount <= 74.84757108366959 AND products.stock >= 476;
SELECT orders.product_id, MAX(orders.quantity) as agg_0, MIN(orders.product_id + orders.quantity) as agg_1, COUNT(*) as agg_2 FROM orders  WHERE orders.order_date != 'active' GROUP BY orders.product_id HAVING COUNT(*) <= 55 ORDER BY orders.product_id LIMIT 100;
SELECT orders.status, products.description, products.product_id, SUM(users.age + products.product_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.quantity <= 234 AND products.name != 'pending' AND users.status != 'inactive' GROUP BY orders.status, products.description, products.product_id HAVING SUM(users.age + products.product_id) >= 56 ORDER BY orders.status, products.description, products.product_id;
SELECT products.category, products.name, products.description, AVG(orders.product_id) as agg_0, SUM(orders.total_amount) as agg_1, COUNT(*) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE products.created_at != 'inactive' AND orders.order_date = 'pending' AND products.stock <= 77 GROUP BY products.category, products.name, products.description ORDER BY products.category, products.name, products.description LIMIT 1000;
SELECT orders.order_date, MIN(orders.user_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.price <= 37.86095871441876 AND products.stock >= 259 AND products.category != 'pending' AND users.status = 'inactive' GROUP BY orders.order_date ORDER BY orders.order_date LIMIT 1000;
SELECT MIN(products.stock + products.product_id) as agg_0, AVG(products.stock) as agg_1 FROM products  WHERE products.stock <= 73 AND products.product_id <= 849 AND products.price >= 6.704438092638873;
SELECT orders.user_id, orders.quantity, orders.order_date, AVG(orders.price + orders.total_amount) as agg_0, MIN(products.stock + products.price) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.product_id <= 644 AND products.name != 'pending' AND users.city != 'pending' AND orders.product_id <= 2663 AND orders.order_date = 'active' GROUP BY orders.user_id, orders.quantity, orders.order_date ORDER BY orders.user_id, orders.quantity, orders.order_date;
SELECT MIN(products.stock) as agg_0, AVG(orders.product_id + orders.price) as agg_1, MIN(orders.order_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.created_at != 'pending' AND products.description != 'pending' AND orders.product_id >= 194 AND products.category != 'active' LIMIT 1000;
SELECT orders.product_id, MIN(orders.order_id) as agg_0, SUM(orders.quantity) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.age <= 750 AND orders.user_id >= 41 GROUP BY orders.product_id ORDER BY orders.product_id;
SELECT products.stock, products.name, AVG(orders.price) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.city = 'inactive' AND users.email != 'pending' GROUP BY products.stock, products.name HAVING AVG(orders.price) <= 77 ORDER BY products.stock, products.name LIMIT 10;
SELECT products.name, COUNT(*) as agg_0 FROM products  WHERE products.name != 'pending' AND products.stock <= 16 AND products.description != 'inactive' AND products.price >= 55.32943021416373 AND products.created_at = 'active' GROUP BY products.name ORDER BY products.name;
SELECT products.category, COUNT(*) as agg_0, MAX(users.age + products.price) as agg_1, MIN(users.age + users.user_id) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.name != 'active' AND products.product_id <= 3904 AND users.user_id >= 794 AND orders.product_id >= 944 GROUP BY products.category ORDER BY products.category;
SELECT orders.order_date, users.age, products.created_at, COUNT(*) as agg_0, MAX(products.stock) as agg_1, AVG(orders.order_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.user_id <= 49 GROUP BY orders.order_date, users.age, products.created_at ORDER BY orders.order_date, users.age, products.created_at;
SELECT COUNT(*) as agg_0, MAX(orders.user_id + orders.order_id) as agg_1 FROM orders  WHERE orders.order_id >= 4471 AND orders.status != 'inactive' AND orders.order_date != 'pending';
SELECT MAX(orders.product_id + products.price) as agg_0, SUM(products.price + users.age) as agg_1, SUM(orders.order_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.price <= 409.0907445096596 LIMIT 100;
SELECT MIN(products.stock + products.price) as agg_0 FROM products  WHERE products.category != 'inactive';
SELECT users.email, users.name, users.age, COUNT(*) as agg_0 FROM users  WHERE users.email != 'pending' AND users.age >= 366 AND users.created_at = 'active' AND users.city = 'inactive' GROUP BY users.email, users.name, users.age ORDER BY users.email, users.name, users.age;
SELECT MAX(orders.user_id) as agg_0, SUM(orders.order_id + users.age) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.email = 'inactive' AND orders.quantity >= 569 AND orders.order_date != 'inactive' LIMIT 1000;
SELECT users.created_at, users.email, AVG(orders.price + users.age) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE orders.order_date = 'pending' AND orders.product_id >= 195 AND users.city != 'inactive' AND users.user_id <= 43 AND orders.user_id >= 1448 GROUP BY users.created_at, users.email ORDER BY users.created_at, users.email;
SELECT users.user_id, MIN(users.age + users.user_id) as agg_0 FROM users  WHERE users.email != 'inactive' AND users.city != 'pending' GROUP BY users.user_id ORDER BY users.user_id;
SELECT users.name, SUM(orders.product_id + orders.order_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.city != 'inactive' AND users.name = 'inactive' GROUP BY users.name HAVING SUM(orders.product_id + orders.order_id) >= 38 ORDER BY users.name;
SELECT orders.order_id, COUNT(*) as agg_0, COUNT(*) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.name = 'active' AND products.stock >= 68 AND orders.status = 'inactive' GROUP BY orders.order_id ORDER BY orders.order_id;
SELECT orders.order_id, MIN(orders.quantity + products.product_id) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.age <= 46 AND orders.user_id <= 10 AND users.email = 'pending' GROUP BY orders.order_id ORDER BY orders.order_id;
SELECT users.city, users.name, users.status, SUM(users.user_id + users.age) as agg_0, MIN(users.user_id) as agg_1 FROM users  WHERE users.name != 'inactive' AND users.email != 'inactive' AND users.city != 'inactive' AND users.created_at != 'inactive' GROUP BY users.city, users.name, users.status ORDER BY users.city, users.name, users.status;
SELECT MAX(products.price) as agg_0, AVG(products.product_id + products.stock) as agg_1 FROM products  WHERE products.name != 'pending' AND products.category != 'inactive' AND products.product_id <= 2215 AND products.stock >= 382;
SELECT products.category, SUM(orders.order_id + products.price) as agg_0, COUNT(*) as agg_1, AVG(orders.total_amount) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.product_id >= 243 AND orders.status = 'active' AND products.stock >= 580 GROUP BY products.category HAVING COUNT(*) >= 14 ORDER BY products.category;
SELECT orders.product_id, users.name, MIN(products.product_id) as agg_0, AVG(products.stock) as agg_1, SUM(orders.price) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.description = 'pending' GROUP BY orders.product_id, users.name HAVING MIN(products.product_id) <= 29 ORDER BY orders.product_id, users.name;
SELECT MAX(orders.order_id + orders.price) as agg_0, MAX(products.stock + orders.user_id) as agg_1, COUNT(*) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.created_at = 'active' AND users.name != 'pending' AND orders.user_id <= 417;
SELECT AVG(orders.order_id + orders.price) as agg_0 FROM orders  WHERE orders.quantity <= 1309 AND orders.order_date != 'pending' AND orders.product_id <= 77 AND orders.price >= 29.37838821801555;
SELECT products.product_id, users.created_at, users.email, MIN(products.price) as agg_0, MAX(orders.price + products.price) as agg_1, MAX(products.product_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.created_at = 'inactive' AND orders.quantity >= 34 GROUP BY products.product_id, users.created_at, users.email ORDER BY products.product_id, users.created_at, users.email;
SELECT MIN(products.price) as agg_0, MAX(products.price + products.stock) as agg_1, SUM(products.product_id + products.price) as agg_2 FROM products  WHERE products.name != 'pending' AND products.created_at = 'inactive' AND products.category = 'active' AND products.stock <= 81;
SELECT orders.product_id, products.name, SUM(orders.price) as agg_0, MIN(products.product_id) as agg_1, MAX(orders.price + orders.quantity) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.status = 'inactive' AND users.user_id >= 656 AND users.name = 'pending' AND orders.order_id >= 962 AND products.product_id <= 1873 GROUP BY orders.product_id, products.name HAVING MAX(orders.price + orders.quantity) >= 80 ORDER BY orders.product_id, products.name;
SELECT products.product_id, orders.status, SUM(orders.total_amount + users.age) as agg_0, MIN(orders.order_id + orders.user_id) as agg_1, COUNT(*) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.product_id >= 93 AND orders.order_id <= 1166 AND products.name != 'active' AND users.city != 'inactive' AND users.email != 'pending' GROUP BY products.product_id, orders.status ORDER BY products.product_id, orders.status;
SELECT orders.user_id, users.created_at, AVG(orders.price + orders.user_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.city = 'pending' AND users.name = 'inactive' AND users.status = 'inactive' GROUP BY orders.user_id, users.created_at ORDER BY orders.user_id, users.created_at;
SELECT orders.product_id, COUNT(*) as agg_0, SUM(orders.quantity + users.age) as agg_1, MIN(orders.product_id + orders.price) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.quantity >= 627 AND orders.user_id >= 2481 GROUP BY orders.product_id ORDER BY orders.product_id;
SELECT products.created_at, products.name, SUM(products.product_id) as agg_0 FROM products  WHERE products.description = 'inactive' AND products.price <= 6.592457479078053 AND products.category = 'active' AND products.created_at != 'active' GROUP BY products.created_at, products.name ORDER BY products.created_at, products.name;
SELECT products.name, orders.status, MAX(orders.product_id + orders.user_id) as agg_0, AVG(products.price) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.user_id <= 2441 AND orders.status != 'active' AND products.name != 'pending' GROUP BY products.name, orders.status HAVING AVG(products.price) <= 1 ORDER BY products.name, orders.status;
SELECT orders.status, MIN(products.product_id + users.user_id) as agg_0, MAX(users.user_id) as agg_1, COUNT(*) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.category != 'pending' AND products.stock >= 943 AND products.product_id <= 3033 AND orders.order_date != 'inactive' GROUP BY orders.status ORDER BY orders.status;
SELECT users.age, MIN(users.user_id) as agg_0, SUM(users.age + users.user_id) as agg_1 FROM users  WHERE users.created_at = 'active' AND users.user_id <= 798 AND users.name = 'active' GROUP BY users.age ORDER BY users.age;
SELECT SUM(users.age) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.price >= 450.19255110653023 AND products.name = 'pending' AND orders.status = 'inactive';
SELECT orders.product_id, products.product_id, orders.status, MIN(orders.product_id + orders.total_amount) as agg_0, AVG(orders.product_id) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE products.description != 'pending' AND orders.product_id >= 757 GROUP BY orders.product_id, products.product_id, orders.status ORDER BY orders.product_id, products.product_id, orders.status LIMIT 100;
SELECT users.city, orders.order_date, SUM(products.product_id + products.price) as agg_0, MAX(orders.price + users.user_id) as agg_1, AVG(orders.product_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.name != 'inactive' GROUP BY users.city, orders.order_date ORDER BY users.city, orders.order_date LIMIT 100;
SELECT orders.user_id, users.email, users.name, MAX(orders.total_amount + products.stock) as agg_0, MAX(products.product_id) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.created_at != 'pending' AND users.age <= 170 GROUP BY orders.user_id, users.email, users.name ORDER BY orders.user_id, users.email, users.name;
SELECT products.created_at, SUM(orders.product_id + products.product_id) as agg_0, MAX(users.user_id + orders.product_id) as agg_1, COUNT(*) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.stock >= 4328 AND users.age <= 1791 AND orders.price <= 98.53155332856832 AND orders.order_date != 'active' AND users.city = 'active' GROUP BY products.created_at ORDER BY products.created_at;
SELECT AVG(orders.product_id + orders.quantity) as agg_0, MAX(users.age + products.price) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.name = 'active' AND users.status = 'pending' LIMIT 100;
SELECT AVG(products.stock + products.product_id) as agg_0, MAX(products.price + products.product_id) as agg_1 FROM products  WHERE products.name != 'pending' AND products.price >= 67.58853849886918 AND products.product_id <= 56 AND products.created_at = 'inactive' AND products.category != 'active';
SELECT users.name, SUM(orders.product_id + products.stock) as agg_0, SUM(orders.quantity) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.product_id >= 667 AND products.name != 'inactive' AND orders.user_id <= 3539 AND users.created_at = 'pending' GROUP BY users.name ORDER BY users.name;
SELECT orders.order_date, COUNT(*) as agg_0, SUM(orders.total_amount) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.category != 'pending' AND orders.product_id <= 1515 AND users.user_id <= 113 AND users.city != 'pending' GROUP BY orders.order_date ORDER BY orders.order_date LIMIT 1000;
SELECT orders.order_date, orders.quantity, orders.product_id, SUM(orders.total_amount) as agg_0 FROM orders  WHERE orders.quantity >= 2749 AND orders.user_id >= 335 GROUP BY orders.order_date, orders.quantity, orders.product_id HAVING SUM(orders.total_amount) <= 52 ORDER BY orders.order_date, orders.quantity, orders.product_id;
SELECT users.age, users.status, COUNT(*) as agg_0, MAX(users.user_id + products.price) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.category = 'inactive' GROUP BY users.age, users.status ORDER BY users.age, users.status;
SELECT orders.order_id, orders.order_date, orders.user_id, MIN(orders.product_id + orders.quantity) as agg_0, AVG(orders.order_id) as agg_1, MAX(orders.user_id + orders.quantity) as agg_2 FROM orders  WHERE orders.product_id >= 16 AND orders.order_date = 'inactive' AND orders.quantity >= 1550 AND orders.status != 'pending' AND orders.order_id <= 337 GROUP BY orders.order_id, orders.order_date, orders.user_id ORDER BY orders.order_id, orders.order_date, orders.user_id;
SELECT orders.order_date, products.stock, products.product_id, MIN(orders.total_amount + products.stock) as agg_0, AVG(products.price + orders.user_id) as agg_1, MAX(products.stock + orders.user_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.user_id >= 411 GROUP BY orders.order_date, products.stock, products.product_id ORDER BY orders.order_date, products.stock, products.product_id;
SELECT AVG(orders.total_amount + products.stock) as agg_0, COUNT(*) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.created_at = 'pending' AND orders.total_amount <= 9.885441611003767 AND orders.order_id <= 750 AND orders.price >= 49.12497057162686;
SELECT products.created_at, SUM(products.stock) as agg_0, MAX(orders.total_amount + users.user_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.stock <= 4934 AND users.city != 'active' AND products.description = 'inactive' AND users.age <= 83 AND users.name = 'inactive' GROUP BY products.created_at HAVING SUM(products.stock) >= 74 ORDER BY products.created_at;
SELECT products.category, orders.order_date, MIN(orders.quantity) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.order_date = 'inactive' AND orders.user_id >= 4571 AND products.product_id >= 30 AND products.name != 'active' GROUP BY products.category, orders.order_date ORDER BY products.category, orders.order_date LIMIT 1000;
SELECT users.name, users.status, products.stock, MAX(products.product_id + orders.price) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.email != 'active' AND orders.total_amount <= 63.26536416411642 AND users.age <= 3772 AND orders.quantity >= 322 AND users.status = 'active' GROUP BY users.name, users.status, products.stock ORDER BY users.name, users.status, products.stock LIMIT 10;
SELECT users.user_id, orders.quantity, MIN(orders.price + orders.total_amount) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.status != 'active' AND users.created_at != 'pending' GROUP BY users.user_id, orders.quantity ORDER BY users.user_id, orders.quantity LIMIT 1000;
SELECT orders.quantity, users.user_id, products.stock, COUNT(*) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.product_id >= 466 AND users.email = 'active' GROUP BY orders.quantity, users.user_id, products.stock ORDER BY orders.quantity, users.user_id, products.stock LIMIT 10;
SELECT AVG(products.stock) as agg_0 FROM products  WHERE products.product_id >= 1 AND products.description != 'pending' AND products.name = 'pending' LIMIT 1000;
SELECT users.status, users.email, MIN(users.user_id + users.age) as agg_0, COUNT(*) as agg_1, MAX(users.user_id) as agg_2 FROM users  WHERE users.city != 'inactive' AND users.status != 'active' AND users.user_id >= 172 GROUP BY users.status, users.email HAVING MAX(users.user_id) <= 85 ORDER BY users.status, users.email;
SELECT orders.status, orders.order_id, AVG(orders.quantity + orders.order_id) as agg_0, SUM(orders.product_id) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.status != 'inactive' AND orders.price <= 48.083309441042 AND orders.status = 'active' AND orders.order_id <= 459 AND users.email != 'pending' GROUP BY orders.status, orders.order_id ORDER BY orders.status, orders.order_id;
SELECT MAX(products.stock) as agg_0, MAX(products.stock + products.product_id) as agg_1, MAX(orders.quantity) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_id <= 210 AND products.name = 'active' AND products.category != 'active' AND orders.product_id <= 1373;
SELECT MIN(products.stock + orders.product_id) as agg_0, MIN(orders.user_id) as agg_1, SUM(orders.total_amount) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.product_id <= 474 AND users.email != 'active' LIMIT 100;
SELECT SUM(orders.order_id + users.user_id) as agg_0, MAX(products.product_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.description != 'pending' AND orders.status = 'active' AND orders.product_id >= 393;
SELECT orders.order_id, SUM(orders.product_id + users.age) as agg_0, MIN(products.price) as agg_1, SUM(users.user_id + orders.total_amount) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.category != 'inactive' AND orders.product_id <= 590 AND products.price >= 94.52734701138044 GROUP BY orders.order_id ORDER BY orders.order_id LIMIT 100;
SELECT MIN(orders.price + orders.quantity) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.description = 'active' AND orders.total_amount <= 87.97338386876865 AND products.name != 'pending' AND users.name = 'pending';
SELECT MAX(products.product_id) as agg_0, COUNT(*) as agg_1, COUNT(*) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.product_id <= 87 AND products.name = 'pending';
SELECT orders.user_id, orders.order_id, SUM(orders.total_amount) as agg_0, COUNT(*) as agg_1, AVG(orders.quantity + orders.order_id) as agg_2 FROM orders  WHERE orders.price <= 2.0679880914219755 AND orders.order_id <= 2689 GROUP BY orders.user_id, orders.order_id ORDER BY orders.user_id, orders.order_id;
SELECT orders.quantity, orders.user_id, MIN(products.stock + orders.quantity) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.product_id >= 462 AND orders.quantity <= 725 AND orders.user_id <= 133 AND orders.total_amount <= 6.503491444568406 GROUP BY orders.quantity, orders.user_id ORDER BY orders.quantity, orders.user_id LIMIT 10;
SELECT users.user_id, users.status, users.email, MAX(orders.quantity) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.user_id <= 40 GROUP BY users.user_id, users.status, users.email ORDER BY users.user_id, users.status, users.email;
SELECT products.name, MAX(products.price) as agg_0 FROM products  WHERE products.product_id <= 952 AND products.category != 'active' AND products.stock <= 192 AND products.created_at = 'pending' GROUP BY products.name ORDER BY products.name;
SELECT SUM(orders.price + orders.user_id) as agg_0, MAX(orders.quantity) as agg_1, SUM(orders.user_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.user_id <= 4 AND users.user_id >= 18 AND users.created_at != 'active' AND orders.status != 'pending' AND users.age <= 4655;
SELECT products.category, COUNT(*) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.name != 'inactive' AND orders.status != 'inactive' AND products.product_id >= 907 AND orders.price >= 92.92033069413844 AND products.category = 'pending' GROUP BY products.category ORDER BY products.category;
SELECT orders.order_date, orders.order_id, orders.user_id, MIN(orders.price) as agg_0 FROM orders  WHERE orders.order_id <= 2478 GROUP BY orders.order_date, orders.order_id, orders.user_id ORDER BY orders.order_date, orders.order_id, orders.user_id;
SELECT AVG(orders.quantity) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.status != 'inactive' AND orders.quantity >= 308 AND orders.total_amount >= 25.98364692991808 AND orders.price <= 65.97044447657092;
SELECT MIN(users.age + orders.user_id) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE orders.order_id <= 2 AND orders.price >= 273.8840245792969 AND orders.quantity >= 916 LIMIT 10;
SELECT users.user_id, COUNT(*) as agg_0, MAX(users.user_id + orders.quantity) as agg_1, MIN(orders.total_amount) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.category = 'active' AND users.name != 'active' GROUP BY users.user_id ORDER BY users.user_id;
SELECT users.name, AVG(products.product_id + users.user_id) as agg_0, AVG(orders.product_id) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.quantity <= 2871 AND products.stock >= 67 GROUP BY users.name ORDER BY users.name;
SELECT COUNT(*) as agg_0, SUM(orders.quantity + users.user_id) as agg_1, MIN(orders.order_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.price <= 13.873128013069191;
SELECT orders.product_id, AVG(orders.product_id + orders.user_id) as agg_0, MIN(orders.total_amount + orders.product_id) as agg_1, COUNT(*) as agg_2 FROM orders  WHERE orders.order_id <= 765 AND orders.price >= 63.12882821820948 AND orders.user_id <= 656 GROUP BY orders.product_id ORDER BY orders.product_id LIMIT 100;
SELECT products.name, orders.order_id, COUNT(*) as agg_0, COUNT(*) as agg_1, SUM(products.price + orders.user_id) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.user_id >= 1916 AND products.created_at = 'active' AND orders.order_date != 'active' AND orders.product_id >= 3692 AND users.age <= 960 GROUP BY products.name, orders.order_id HAVING SUM(products.price + orders.user_id) <= 61 ORDER BY products.name, orders.order_id;
SELECT products.created_at, products.name, products.stock, AVG(products.product_id + products.stock) as agg_0, SUM(products.stock) as agg_1, COUNT(*) as agg_2 FROM products  WHERE products.created_at != 'inactive' AND products.product_id <= 4199 AND products.category = 'pending' GROUP BY products.created_at, products.name, products.stock HAVING COUNT(*) >= 25 ORDER BY products.created_at, products.name, products.stock;
SELECT MAX(orders.total_amount) as agg_0, MIN(orders.price + orders.product_id) as agg_1, SUM(products.stock + orders.total_amount) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.user_id >= 84 AND products.description = 'active' AND users.name = 'active' AND orders.order_date = 'inactive';
SELECT SUM(orders.quantity) as agg_0, AVG(orders.order_id) as agg_1, MAX(users.user_id + products.price) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.description = 'pending' AND products.stock >= 63 AND orders.product_id <= 154;
SELECT products.created_at, products.name, products.description, MAX(products.stock) as agg_0 FROM products  WHERE products.price <= 16.26473185219446 AND products.category != 'inactive' AND products.name = 'pending' AND products.stock <= 8 AND products.product_id >= 1950 GROUP BY products.created_at, products.name, products.description ORDER BY products.created_at, products.name, products.description;
SELECT users.user_id, users.name, users.city, MIN(users.age) as agg_0, MIN(users.user_id + users.age) as agg_1 FROM users  WHERE users.email != 'active' AND users.city != 'pending' AND users.status != 'pending' GROUP BY users.user_id, users.name, users.city ORDER BY users.user_id, users.name, users.city;
SELECT AVG(orders.price) as agg_0, MIN(orders.quantity) as agg_1, SUM(products.product_id + products.stock) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.created_at = 'pending' AND orders.total_amount >= 191.68294302310142;
SELECT users.city, users.status, MAX(users.age + users.user_id) as agg_0 FROM users  WHERE users.age >= 118 GROUP BY users.city, users.status ORDER BY users.city, users.status;
SELECT products.description, MAX(orders.user_id + users.user_id) as agg_0, COUNT(*) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.product_id <= 305 AND orders.price <= 93.79554082596437 AND users.email != 'inactive' AND orders.total_amount >= 6.151784706847199 AND users.user_id <= 4231 GROUP BY products.description ORDER BY products.description LIMIT 10;
SELECT products.description, COUNT(*) as agg_0, SUM(orders.product_id + products.product_id) as agg_1, MAX(orders.quantity + orders.price) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE products.product_id <= 149 AND products.stock >= 3781 AND products.description != 'inactive' AND orders.quantity >= 906 AND orders.price <= 1.6341807496043175 GROUP BY products.description ORDER BY products.description;
SELECT orders.user_id, orders.order_date, orders.status, COUNT(*) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.user_id >= 37 AND orders.quantity >= 99 AND orders.product_id >= 674 AND users.created_at != 'inactive' GROUP BY orders.user_id, orders.order_date, orders.status ORDER BY orders.user_id, orders.order_date, orders.status;
SELECT orders.quantity, products.name, orders.status, AVG(orders.quantity + products.product_id) as agg_0, SUM(users.age) as agg_1, MIN(orders.total_amount + products.stock) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.created_at != 'pending' AND orders.order_date != 'pending' AND products.name != 'inactive' AND orders.order_id >= 228 AND orders.user_id <= 199 GROUP BY orders.quantity, products.name, orders.status ORDER BY orders.quantity, products.name, orders.status LIMIT 100;
SELECT products.name, products.product_id, orders.user_id, SUM(orders.order_id) as agg_0, COUNT(*) as agg_1, SUM(orders.product_id + orders.order_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.status = 'pending' GROUP BY products.name, products.product_id, orders.user_id ORDER BY products.name, products.product_id, orders.user_id;
SELECT COUNT(*) as agg_0, AVG(users.age + products.product_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.stock <= 67 AND orders.user_id <= 1740 AND users.city = 'inactive';
SELECT users.created_at, COUNT(*) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.user_id <= 46 AND orders.status = 'inactive' GROUP BY users.created_at HAVING COUNT(*) <= 95 ORDER BY users.created_at;
SELECT orders.order_date, SUM(orders.product_id + orders.user_id) as agg_0, SUM(orders.user_id + orders.price) as agg_1 FROM orders  WHERE orders.price <= 1.8254551744836807 GROUP BY orders.order_date ORDER BY orders.order_date;
SELECT orders.product_id, users.age, users.created_at, COUNT(*) as agg_0, COUNT(*) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.email != 'active' AND orders.price >= 378.98142161576584 GROUP BY orders.product_id, users.age, users.created_at ORDER BY orders.product_id, users.age, users.created_at LIMIT 100;
SELECT orders.status, AVG(users.user_id + users.age) as agg_0, MIN(orders.user_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.status != 'inactive' GROUP BY orders.status ORDER BY orders.status;
SELECT SUM(orders.price + orders.product_id) as agg_0, AVG(users.user_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.created_at != 'active' AND users.status = 'inactive' AND orders.status = 'active' LIMIT 1000;
SELECT SUM(products.price) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.stock >= 25 AND orders.product_id >= 1930 AND products.created_at = 'inactive';
SELECT users.status, users.user_id, users.email, AVG(users.user_id + users.age) as agg_0, AVG(users.user_id + users.age) as agg_1 FROM users  WHERE users.city = 'pending' AND users.user_id <= 4331 AND users.email != 'inactive' AND users.name != 'active' GROUP BY users.status, users.user_id, users.email ORDER BY users.status, users.user_id, users.email;
SELECT SUM(users.age + users.user_id) as agg_0, COUNT(*) as agg_1, COUNT(*) as agg_2 FROM users  WHERE users.email = 'inactive' AND users.city != 'pending' AND users.status = 'active';
SELECT products.stock, products.name, SUM(products.price) as agg_0, COUNT(*) as agg_1 FROM products  WHERE products.product_id <= 982 GROUP BY products.stock, products.name HAVING SUM(products.price) <= 68 ORDER BY products.stock, products.name;
SELECT MIN(orders.user_id) as agg_0, AVG(orders.price) as agg_1 FROM orders  WHERE orders.product_id >= 211 AND orders.user_id >= 816 AND orders.status = 'active' AND orders.order_date = 'pending' AND orders.total_amount >= 141.94471668877412;
SELECT orders.product_id, orders.order_id, COUNT(*) as agg_0, MIN(orders.price + orders.product_id) as agg_1, SUM(orders.product_id + orders.order_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.city != 'active' GROUP BY orders.product_id, orders.order_id ORDER BY orders.product_id, orders.order_id;
SELECT orders.quantity, orders.user_id, products.description, AVG(orders.user_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.user_id >= 88 AND products.name = 'inactive' AND orders.status = 'inactive' AND products.category = 'pending' AND orders.order_date != 'active' GROUP BY orders.quantity, orders.user_id, products.description ORDER BY orders.quantity, orders.user_id, products.description;
SELECT orders.status, orders.product_id, MIN(orders.order_id + orders.price) as agg_0, COUNT(*) as agg_1, MAX(products.stock + orders.user_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.quantity <= 1028 AND orders.total_amount <= 1.3132475568035655 AND products.stock >= 88 AND users.email = 'inactive' AND orders.product_id <= 918 GROUP BY orders.status, orders.product_id ORDER BY orders.status, orders.product_id;
SELECT orders.user_id, products.created_at, AVG(orders.total_amount) as agg_0, MIN(products.product_id) as agg_1, SUM(orders.order_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.user_id >= 730 AND orders.status != 'active' AND orders.total_amount >= 49.91559839785277 GROUP BY orders.user_id, products.created_at ORDER BY orders.user_id, products.created_at;
SELECT users.city, orders.status, COUNT(*) as agg_0, MIN(orders.total_amount + orders.quantity) as agg_1, AVG(orders.order_id + orders.total_amount) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.status = 'pending' AND users.user_id >= 1341 AND users.age <= 1678 AND orders.total_amount <= 65.30090801756413 AND users.created_at != 'active' GROUP BY users.city, orders.status ORDER BY users.city, orders.status LIMIT 100;
SELECT products.category, products.created_at, MAX(orders.quantity + orders.price) as agg_0, AVG(orders.quantity + products.product_id) as agg_1, AVG(orders.price) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.total_amount <= 35.53722783879202 AND products.description = 'inactive' GROUP BY products.category, products.created_at HAVING AVG(orders.quantity + products.product_id) <= 21 ORDER BY products.category, products.created_at;
SELECT products.category, products.stock, SUM(products.stock) as agg_0 FROM products  WHERE products.stock <= 184 AND products.description != 'pending' AND products.product_id <= 2974 AND products.category = 'inactive' GROUP BY products.category, products.stock ORDER BY products.category, products.stock;
SELECT orders.product_id, AVG(orders.order_id + orders.product_id) as agg_0, MAX(orders.product_id + orders.order_id) as agg_1 FROM orders  WHERE orders.total_amount <= 86.54660372374039 AND orders.price >= 5.013145467566256 AND orders.order_id <= 1605 AND orders.quantity >= 732 GROUP BY orders.product_id HAVING AVG(orders.order_id + orders.product_id) <= 7 ORDER BY orders.product_id;
SELECT products.product_id, products.description, MAX(products.stock) as agg_0 FROM products  WHERE products.created_at = 'inactive' AND products.name = 'active' AND products.price >= 7.134747775527917 AND products.category != 'inactive' GROUP BY products.product_id, products.description ORDER BY products.product_id, products.description LIMIT 1000;
SELECT users.email, MIN(orders.product_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.status = 'pending' AND orders.total_amount >= 174.42897992311612 AND users.name = 'inactive' AND users.age <= 335 GROUP BY users.email ORDER BY users.email;
SELECT users.name, MIN(products.product_id + products.price) as agg_0, COUNT(*) as agg_1, MIN(orders.price + orders.user_id) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_date != 'active' AND users.age >= 332 GROUP BY users.name ORDER BY users.name;
SELECT orders.quantity, orders.order_date, users.user_id, AVG(orders.total_amount) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.user_id <= 498 AND users.created_at = 'active' AND orders.order_id >= 1005 GROUP BY orders.quantity, orders.order_date, users.user_id ORDER BY orders.quantity, orders.order_date, users.user_id;
SELECT products.category, users.name, MAX(orders.user_id + users.user_id) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.name != 'inactive' AND orders.quantity >= 882 GROUP BY products.category, users.name ORDER BY products.category, users.name LIMIT 100;
SELECT products.category, SUM(products.stock) as agg_0, MAX(products.product_id) as agg_1 FROM products  WHERE products.category = 'inactive' AND products.created_at = 'active' GROUP BY products.category ORDER BY products.category LIMIT 1000;
SELECT SUM(products.stock) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.order_id >= 96 AND products.description = 'inactive' AND products.name = 'active' AND orders.status = 'active';
SELECT orders.order_id, users.email, users.user_id, MAX(orders.price) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.order_date != 'pending' GROUP BY orders.order_id, users.email, users.user_id ORDER BY orders.order_id, users.email, users.user_id;
SELECT COUNT(*) as agg_0 FROM orders  WHERE orders.order_date != 'active' AND orders.quantity >= 83;
SELECT users.status, MAX(products.product_id + orders.order_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.user_id <= 969 GROUP BY users.status HAVING MAX(products.product_id + orders.order_id) <= 63 ORDER BY users.status;
SELECT users.name, users.created_at, users.user_id, MIN(users.age + users.user_id) as agg_0, MAX(users.user_id + users.age) as agg_1 FROM users  WHERE users.created_at != 'inactive' AND users.name = 'active' GROUP BY users.name, users.created_at, users.user_id HAVING MIN(users.age + users.user_id) >= 67 ORDER BY users.name, users.created_at, users.user_id LIMIT 100;
SELECT products.name, products.description, AVG(products.product_id + orders.total_amount) as agg_0, SUM(orders.user_id) as agg_1, MIN(orders.product_id + products.stock) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.user_id <= 110 AND users.status != 'pending' AND products.price >= 4.836140003669437 GROUP BY products.name, products.description HAVING MIN(orders.product_id + products.stock) >= 30 ORDER BY products.name, products.description;
SELECT users.city, orders.quantity, SUM(users.age) as agg_0, COUNT(*) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.user_id <= 382 AND orders.price >= 328.97213491524315 AND products.description = 'inactive' AND users.created_at != 'inactive' AND users.age >= 28 GROUP BY users.city, orders.quantity HAVING SUM(users.age) <= 27 ORDER BY users.city, orders.quantity;
SELECT users.age, AVG(orders.price) as agg_0, AVG(orders.order_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.created_at != 'inactive' GROUP BY users.age ORDER BY users.age;
SELECT AVG(products.stock + products.product_id) as agg_0, MAX(products.price + products.product_id) as agg_1 FROM products  WHERE products.product_id >= 25 AND products.category = 'pending';
SELECT users.city, SUM(orders.quantity) as agg_0, AVG(products.stock + orders.total_amount) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.status != 'active' GROUP BY users.city ORDER BY users.city LIMIT 1000;
SELECT users.user_id, users.created_at, SUM(orders.quantity + orders.order_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.quantity <= 406 AND products.stock <= 365 GROUP BY users.user_id, users.created_at ORDER BY users.user_id, users.created_at;
SELECT orders.status, orders.user_id, orders.order_id, SUM(orders.quantity + orders.total_amount) as agg_0, MAX(orders.total_amount) as agg_1, MAX(orders.total_amount) as agg_2 FROM orders  WHERE orders.user_id >= 448 AND orders.order_date != 'inactive' GROUP BY orders.status, orders.user_id, orders.order_id ORDER BY orders.status, orders.user_id, orders.order_id;
SELECT COUNT(*) as agg_0, MAX(orders.price) as agg_1, COUNT(*) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.user_id <= 285 LIMIT 10;
SELECT MIN(orders.price) as agg_0, AVG(orders.quantity) as agg_1, MIN(orders.product_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.price <= 69.31344758706967 AND users.status != 'active' AND orders.product_id <= 33 AND orders.quantity <= 166 AND orders.order_id <= 659;
SELECT products.description, AVG(orders.total_amount) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.order_id >= 81 AND orders.price >= 444.5522649239728 AND products.description = 'inactive' AND users.email = 'pending' GROUP BY products.description ORDER BY products.description;
SELECT users.status, users.age, COUNT(*) as agg_0, COUNT(*) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.price <= 50.557556204520246 AND orders.user_id >= 3 GROUP BY users.status, users.age HAVING COUNT(*) >= 46 ORDER BY users.status, users.age;
SELECT users.city, COUNT(*) as agg_0, MIN(users.age) as agg_1 FROM users  WHERE users.name != 'inactive' AND users.email != 'inactive' GROUP BY users.city ORDER BY users.city;
SELECT orders.status, MAX(orders.order_id + orders.quantity) as agg_0 FROM orders  WHERE orders.product_id <= 70 AND orders.order_id >= 4250 GROUP BY orders.status ORDER BY orders.status;
SELECT users.created_at, COUNT(*) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.user_id >= 85 AND orders.total_amount >= 294.3588081118322 AND users.city = 'pending' AND users.created_at != 'inactive' AND orders.product_id >= 305 GROUP BY users.created_at ORDER BY users.created_at;
SELECT MIN(users.age + orders.user_id) as agg_0, COUNT(*) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.product_id <= 33;
SELECT MIN(orders.user_id + orders.order_id) as agg_0, SUM(orders.order_id) as agg_1, MIN(orders.product_id + orders.order_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.quantity <= 36 AND orders.total_amount >= 7.099056517109994 AND orders.user_id >= 31 AND products.created_at = 'inactive' LIMIT 1000;
SELECT COUNT(*) as agg_0, AVG(products.price) as agg_1, MIN(products.product_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.stock <= 22;
SELECT MIN(orders.quantity) as agg_0, SUM(orders.product_id) as agg_1, AVG(users.user_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_date = 'active';
SELECT AVG(orders.total_amount + orders.quantity) as agg_0, MIN(products.stock + orders.user_id) as agg_1, MAX(products.stock + products.price) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.name = 'inactive';
SELECT SUM(products.stock + orders.total_amount) as agg_0, COUNT(*) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.quantity <= 233 LIMIT 10;
SELECT MAX(users.user_id + orders.user_id) as agg_0, MIN(users.age + orders.order_id) as agg_1, AVG(users.user_id + orders.price) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.user_id >= 91 AND users.name = 'inactive' AND users.email = 'pending' AND orders.order_id >= 4022;
SELECT orders.status, products.name, orders.quantity, MIN(users.user_id + orders.total_amount) as agg_0, SUM(products.product_id + users.user_id) as agg_1, MAX(orders.total_amount + orders.price) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_date != 'inactive' AND orders.status != 'pending' AND users.age <= 899 GROUP BY orders.status, products.name, orders.quantity ORDER BY orders.status, products.name, orders.quantity;
SELECT orders.order_date, users.user_id, orders.product_id, MIN(orders.order_id + users.age) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.description != 'active' AND orders.user_id >= 418 AND users.age <= 853 AND orders.quantity >= 2708 GROUP BY orders.order_date, users.user_id, orders.product_id HAVING MIN(orders.order_id + users.age) >= 64 ORDER BY orders.order_date, users.user_id, orders.product_id;
SELECT orders.order_date, orders.product_id, orders.quantity, SUM(orders.quantity) as agg_0, SUM(orders.quantity) as agg_1 FROM orders  WHERE orders.order_id <= 1499 GROUP BY orders.order_date, orders.product_id, orders.quantity ORDER BY orders.order_date, orders.product_id, orders.quantity;
SELECT products.created_at, AVG(products.price) as agg_0, MAX(orders.order_id + products.product_id) as agg_1, SUM(orders.quantity + products.price) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE orders.total_amount >= 1.2449516838461805 AND orders.price <= 21.520129090489743 AND products.stock <= 966 GROUP BY products.created_at ORDER BY products.created_at;
SELECT products.product_id, products.name, MAX(products.price) as agg_0, COUNT(*) as agg_1, COUNT(*) as agg_2 FROM products  WHERE products.stock <= 191 AND products.created_at != 'inactive' AND products.price >= 319.02316725466676 GROUP BY products.product_id, products.name ORDER BY products.product_id, products.name;
SELECT orders.status, orders.user_id, orders.order_date, COUNT(*) as agg_0 FROM orders  WHERE orders.order_date = 'inactive' GROUP BY orders.status, orders.user_id, orders.order_date ORDER BY orders.status, orders.user_id, orders.order_date LIMIT 1000;
SELECT users.name, users.created_at, MAX(orders.price + users.age) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.status = 'inactive' AND users.city != 'inactive' AND users.user_id >= 2880 AND users.created_at != 'pending' AND orders.price >= 2.5308190724648103 GROUP BY users.name, users.created_at ORDER BY users.name, users.created_at;
SELECT orders.status, users.age, orders.user_id, SUM(orders.product_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.description = 'active' AND users.email = 'inactive' GROUP BY orders.status, users.age, orders.user_id ORDER BY orders.status, users.age, orders.user_id;
SELECT products.name, products.product_id, products.category, MIN(orders.total_amount + orders.user_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.stock <= 753 AND orders.quantity <= 25 AND products.created_at = 'active' GROUP BY products.name, products.product_id, products.category HAVING MIN(orders.total_amount + orders.user_id) <= 11 ORDER BY products.name, products.product_id, products.category;
SELECT orders.order_id, users.city, MAX(products.stock) as agg_0, COUNT(*) as agg_1, MAX(orders.total_amount) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.category = 'active' GROUP BY orders.order_id, users.city ORDER BY orders.order_id, users.city;
SELECT orders.order_date, products.category, products.product_id, MIN(orders.quantity) as agg_0, MIN(products.price + users.user_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.stock >= 3951 AND products.product_id >= 3733 AND users.city != 'active' GROUP BY orders.order_date, products.category, products.product_id ORDER BY orders.order_date, products.category, products.product_id;
SELECT products.description, users.age, users.user_id, MAX(orders.total_amount) as agg_0, AVG(orders.order_id + products.product_id) as agg_1, MIN(orders.total_amount) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.user_id <= 60 AND products.category = 'active' AND orders.status = 'inactive' AND users.age <= 695 GROUP BY products.description, users.age, users.user_id ORDER BY products.description, users.age, users.user_id LIMIT 10;
SELECT orders.product_id, users.created_at, COUNT(*) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.order_id >= 701 AND users.city != 'inactive' AND products.category = 'active' AND products.created_at != 'inactive' GROUP BY orders.product_id, users.created_at ORDER BY orders.product_id, users.created_at;
SELECT orders.quantity, COUNT(*) as agg_0, COUNT(*) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.email != 'pending' AND users.user_id >= 1700 AND users.age <= 32 AND orders.quantity <= 965 AND orders.user_id <= 124 GROUP BY orders.quantity ORDER BY orders.quantity;
SELECT COUNT(*) as agg_0, COUNT(*) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.product_id >= 565;
SELECT orders.status, orders.order_id, MIN(orders.price) as agg_0 FROM orders  WHERE orders.product_id >= 923 AND orders.order_date != 'inactive' GROUP BY orders.status, orders.order_id ORDER BY orders.status, orders.order_id LIMIT 1000;
SELECT users.name, orders.user_id, MAX(orders.price) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.name != 'active' AND orders.order_date = 'active' AND users.created_at = 'inactive' AND users.city = 'pending' AND users.email != 'inactive' GROUP BY users.name, orders.user_id ORDER BY users.name, orders.user_id;
SELECT products.stock, users.age, products.description, COUNT(*) as agg_0, AVG(users.user_id) as agg_1, SUM(orders.order_id + users.user_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.age >= 496 GROUP BY products.stock, users.age, products.description HAVING AVG(users.user_id) >= 43 ORDER BY products.stock, users.age, products.description LIMIT 100;
SELECT SUM(orders.total_amount + products.product_id) as agg_0, SUM(orders.price + orders.order_id) as agg_1, MAX(orders.price) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.status != 'active' AND orders.product_id <= 2207 LIMIT 10;
SELECT products.created_at, users.email, COUNT(*) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.stock >= 634 AND users.email = 'inactive' AND users.user_id >= 664 AND products.category != 'pending' GROUP BY products.created_at, users.email ORDER BY products.created_at, users.email;
SELECT products.stock, orders.order_id, users.city, MAX(orders.user_id) as agg_0, COUNT(*) as agg_1, COUNT(*) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.user_id >= 328 AND orders.status = 'active' GROUP BY products.stock, orders.order_id, users.city ORDER BY products.stock, orders.order_id, users.city;
SELECT users.created_at, users.age, users.email, SUM(users.user_id + users.age) as agg_0, COUNT(*) as agg_1, AVG(users.age + users.user_id) as agg_2 FROM users  WHERE users.age <= 471 AND users.name = 'pending' AND users.user_id <= 52 AND users.status != 'pending' AND users.email != 'inactive' GROUP BY users.created_at, users.age, users.email ORDER BY users.created_at, users.age, users.email;
SELECT users.age, users.status, MIN(orders.user_id) as agg_0, AVG(orders.total_amount) as agg_1, COUNT(*) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.order_date = 'active' AND users.city = 'active' AND users.user_id <= 592 GROUP BY users.age, users.status ORDER BY users.age, users.status;
SELECT orders.status, orders.user_id, AVG(orders.product_id + orders.total_amount) as agg_0, MAX(orders.user_id) as agg_1, COUNT(*) as agg_2 FROM orders  WHERE orders.order_date != 'inactive' AND orders.status = 'inactive' AND orders.product_id >= 299 GROUP BY orders.status, orders.user_id ORDER BY orders.status, orders.user_id;
SELECT MIN(products.price) as agg_0, MAX(products.price) as agg_1, MAX(products.product_id) as agg_2 FROM products  WHERE products.created_at != 'active' AND products.product_id <= 184 AND products.name = 'active';
SELECT users.name, products.category, users.status, MIN(products.price + users.user_id) as agg_0, AVG(products.product_id + orders.total_amount) as agg_1, MIN(orders.user_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.name != 'active' AND orders.quantity >= 98 AND products.created_at != 'pending' GROUP BY users.name, products.category, users.status ORDER BY users.name, products.category, users.status;
SELECT orders.status, COUNT(*) as agg_0, SUM(products.price) as agg_1, AVG(products.stock + orders.quantity) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.total_amount >= 5.559837254720802 GROUP BY orders.status ORDER BY orders.status;
SELECT orders.quantity, COUNT(*) as agg_0 FROM orders  WHERE orders.total_amount >= 43.7796114397832 AND orders.quantity >= 1313 AND orders.status != 'pending' GROUP BY orders.quantity ORDER BY orders.quantity LIMIT 10;
SELECT COUNT(*) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.price <= 429.2540382879944 AND users.name = 'active' AND products.price >= 5.015895995755584;
SELECT products.stock, SUM(users.age) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.category != 'inactive' GROUP BY products.stock HAVING SUM(users.age) <= 95 ORDER BY products.stock LIMIT 100;
SELECT users.name, users.status, orders.product_id, SUM(orders.product_id) as agg_0, SUM(products.price) as agg_1, MIN(orders.user_id) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.total_amount <= 64.29744925597838 AND products.product_id <= 955 AND users.age <= 750 AND orders.price <= 91.15863975567109 AND users.created_at != 'active' GROUP BY users.name, users.status, orders.product_id HAVING MIN(orders.user_id) <= 54 ORDER BY users.name, users.status, orders.product_id;
SELECT products.stock, products.category, SUM(products.price + orders.product_id) as agg_0, MIN(orders.user_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.description = 'active' AND products.stock <= 127 GROUP BY products.stock, products.category ORDER BY products.stock, products.category;
SELECT orders.quantity, MAX(orders.user_id) as agg_0, SUM(orders.user_id) as agg_1, SUM(products.stock + orders.product_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.created_at != 'pending' AND orders.quantity <= 417 AND products.description != 'inactive' GROUP BY orders.quantity ORDER BY orders.quantity;
SELECT SUM(users.user_id) as agg_0, SUM(products.price + products.stock) as agg_1, MAX(products.stock) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_id <= 24 AND products.stock >= 2276;
SELECT SUM(orders.total_amount) as agg_0, COUNT(*) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.status != 'pending' AND orders.product_id >= 536 AND products.category != 'pending' AND products.created_at != 'active';
SELECT users.status, users.city, orders.user_id, MIN(orders.order_id + orders.total_amount) as agg_0, COUNT(*) as agg_1, AVG(orders.price) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.status != 'pending' AND users.email = 'active' AND orders.order_date != 'active' AND users.age <= 721 AND users.city != 'inactive' GROUP BY users.status, users.city, orders.user_id ORDER BY users.status, users.city, orders.user_id;
SELECT users.name, users.email, MAX(products.stock + orders.user_id) as agg_0, MIN(products.stock) as agg_1, COUNT(*) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.created_at != 'inactive' AND products.stock <= 351 GROUP BY users.name, users.email ORDER BY users.name, users.email;
SELECT orders.order_date, MIN(orders.product_id + orders.order_id) as agg_0, MIN(orders.price + orders.user_id) as agg_1, MAX(orders.quantity) as agg_2 FROM orders  WHERE orders.price >= 197.24562674335027 AND orders.order_id >= 82 GROUP BY orders.order_date HAVING MIN(orders.product_id + orders.order_id) <= 99 ORDER BY orders.order_date LIMIT 10;
SELECT MAX(orders.user_id) as agg_0, MAX(products.price) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.order_date != 'active' AND orders.user_id >= 292 AND users.created_at = 'pending' AND orders.price <= 6.629262327121585;
SELECT SUM(products.product_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_date = 'active' AND orders.status = 'active';
SELECT MIN(orders.product_id) as agg_0, SUM(orders.user_id) as agg_1, AVG(orders.total_amount + orders.product_id) as agg_2 FROM orders  WHERE orders.order_date != 'pending' AND orders.order_id >= 476 AND orders.price <= 91.60071963947311;
SELECT MIN(users.age) as agg_0, MAX(users.user_id) as agg_1 FROM users  WHERE users.created_at != 'active' AND users.user_id <= 84 AND users.name != 'active' LIMIT 10;
SELECT COUNT(*) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.city != 'inactive';
SELECT users.created_at, users.email, COUNT(*) as agg_0, COUNT(*) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.user_id >= 957 AND users.status != 'pending' AND orders.total_amount <= 159.64863223561863 AND products.category != 'active' GROUP BY users.created_at, users.email ORDER BY users.created_at, users.email;
SELECT users.created_at, products.created_at, MIN(orders.price + orders.user_id) as agg_0, SUM(orders.total_amount + users.user_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.category != 'inactive' AND users.created_at = 'active' GROUP BY users.created_at, products.created_at ORDER BY users.created_at, products.created_at;
SELECT products.product_id, products.created_at, MAX(products.product_id + products.price) as agg_0, AVG(products.product_id + products.price) as agg_1 FROM products  WHERE products.description = 'active' AND products.product_id >= 355 AND products.category = 'active' GROUP BY products.product_id, products.created_at ORDER BY products.product_id, products.created_at;
SELECT AVG(users.user_id) as agg_0, SUM(users.age + users.user_id) as agg_1 FROM users  WHERE users.status != 'active' AND users.city != 'inactive' AND users.user_id >= 92 AND users.created_at != 'pending' AND users.email != 'active';
SELECT orders.product_id, products.category, products.name, COUNT(*) as agg_0, MIN(orders.order_id + products.product_id) as agg_1, COUNT(*) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.status = 'pending' AND orders.quantity <= 625 AND products.name = 'active' AND orders.price >= 158.93774058234976 AND products.price >= 348.42728602792204 GROUP BY orders.product_id, products.category, products.name HAVING MIN(orders.order_id + products.product_id) <= 89 ORDER BY orders.product_id, products.category, products.name;
SELECT users.city, orders.product_id, MAX(users.user_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.created_at != 'pending' GROUP BY users.city, orders.product_id HAVING MAX(users.user_id) >= 30 ORDER BY users.city, orders.product_id;
SELECT orders.product_id, MAX(products.product_id + orders.quantity) as agg_0, AVG(products.product_id + products.price) as agg_1, MAX(orders.product_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.status != 'active' AND products.stock <= 2823 AND products.category != 'pending' GROUP BY orders.product_id ORDER BY orders.product_id;
SELECT orders.order_date, orders.product_id, AVG(orders.quantity + orders.user_id) as agg_0, MAX(orders.order_id + orders.total_amount) as agg_1, COUNT(*) as agg_2 FROM orders  WHERE orders.status = 'pending' GROUP BY orders.order_date, orders.product_id ORDER BY orders.order_date, orders.product_id;
SELECT products.description, products.created_at, AVG(orders.total_amount + orders.user_id) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.name = 'pending' AND users.email = 'pending' AND users.created_at != 'pending' AND users.name != 'active' AND orders.total_amount >= 428.5691047507018 GROUP BY products.description, products.created_at ORDER BY products.description, products.created_at;
SELECT orders.order_date, COUNT(*) as agg_0 FROM orders  WHERE orders.order_date = 'active' AND orders.user_id >= 987 AND orders.price <= 49.553477066540836 AND orders.total_amount <= 451.24527567108765 AND orders.order_id <= 249 GROUP BY orders.order_date ORDER BY orders.order_date;
SELECT MAX(products.product_id) as agg_0, MAX(products.price) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.created_at != 'active' AND products.category = 'inactive' AND products.product_id <= 373 AND orders.user_id >= 848 AND users.status = 'pending';
SELECT MAX(orders.order_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.price >= 41.47146337527988 AND users.created_at != 'active' AND products.created_at = 'inactive' AND users.user_id <= 1594 AND users.email != 'active';
SELECT users.created_at, products.description, AVG(users.user_id) as agg_0, SUM(orders.price) as agg_1, MAX(products.product_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.name = 'active' AND orders.total_amount >= 1.0483604635111834 AND users.age >= 29 AND products.category != 'inactive' AND orders.price <= 27.456257430015988 GROUP BY users.created_at, products.description ORDER BY users.created_at, products.description;
SELECT users.name, COUNT(*) as agg_0 FROM users  WHERE users.city != 'inactive' GROUP BY users.name HAVING COUNT(*) <= 65 ORDER BY users.name LIMIT 10;
SELECT users.email, orders.status, COUNT(*) as agg_0, COUNT(*) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.price <= 4.037715617437284 AND users.city != 'active' AND products.category != 'active' AND users.created_at != 'active' AND users.email = 'active' GROUP BY users.email, orders.status ORDER BY users.email, orders.status;
SELECT AVG(orders.user_id) as agg_0, COUNT(*) as agg_1, SUM(products.stock + users.user_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.status = 'pending' AND products.description = 'active' AND products.created_at != 'inactive' AND orders.total_amount <= 28.33001170603965 AND users.user_id >= 503;
SELECT orders.order_id, orders.order_date, SUM(orders.price) as agg_0, AVG(orders.total_amount) as agg_1 FROM orders  WHERE orders.product_id <= 589 AND orders.order_date != 'pending' GROUP BY orders.order_id, orders.order_date HAVING SUM(orders.price) >= 4 ORDER BY orders.order_id, orders.order_date;
SELECT products.stock, orders.order_id, MIN(products.stock + orders.user_id) as agg_0, MAX(products.product_id) as agg_1, MAX(orders.price) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.stock >= 365 AND orders.total_amount >= 92.65189269659038 AND orders.user_id <= 191 AND orders.price >= 70.77768280964327 GROUP BY products.stock, orders.order_id ORDER BY products.stock, orders.order_id;
SELECT products.product_id, products.name, MIN(products.stock + products.product_id) as agg_0 FROM products  WHERE products.created_at != 'active' AND products.product_id <= 2530 AND products.category != 'pending' GROUP BY products.product_id, products.name ORDER BY products.product_id, products.name;
SELECT products.product_id, orders.quantity, SUM(products.stock + orders.price) as agg_0, AVG(orders.order_id + users.user_id) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.product_id <= 16 AND orders.status != 'inactive' AND orders.total_amount >= 46.8438165440909 AND users.name != 'active' GROUP BY products.product_id, orders.quantity ORDER BY products.product_id, orders.quantity;
SELECT orders.user_id, users.city, users.status, SUM(orders.price + orders.quantity) as agg_0, AVG(orders.product_id + users.age) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.order_id >= 950 AND users.name = 'active' GROUP BY orders.user_id, users.city, users.status ORDER BY orders.user_id, users.city, users.status LIMIT 100;
SELECT MAX(orders.quantity) as agg_0, AVG(orders.product_id) as agg_1, SUM(orders.price) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.user_id >= 323 AND orders.status = 'inactive';
SELECT MIN(users.age) as agg_0, MAX(users.user_id + orders.product_id) as agg_1, MAX(orders.price) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.product_id >= 2 AND orders.status = 'active';
SELECT MIN(users.user_id + orders.product_id) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.status = 'pending' AND orders.user_id <= 186 AND orders.order_date != 'active';
SELECT orders.order_date, orders.order_id, AVG(products.product_id + users.user_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.email = 'inactive' GROUP BY orders.order_date, orders.order_id ORDER BY orders.order_date, orders.order_id;
SELECT orders.quantity, orders.product_id, AVG(users.age) as agg_0, AVG(products.price + orders.total_amount) as agg_1, SUM(orders.product_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.email != 'pending' AND users.name = 'active' GROUP BY orders.quantity, orders.product_id HAVING AVG(users.age) >= 33 ORDER BY orders.quantity, orders.product_id;
SELECT products.category, users.age, COUNT(*) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.stock >= 488 AND products.product_id >= 2169 GROUP BY products.category, users.age ORDER BY products.category, users.age LIMIT 100;
SELECT MAX(orders.product_id) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE orders.status = 'inactive' AND users.user_id <= 82 AND users.status = 'pending' AND users.email = 'inactive' AND users.created_at = 'inactive';
SELECT products.name, users.name, COUNT(*) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.stock >= 175 AND orders.total_amount <= 1.3393832908875396 AND orders.order_date != 'pending' AND users.user_id <= 406 AND users.email = 'pending' GROUP BY products.name, users.name ORDER BY products.name, users.name;
SELECT orders.user_id, users.email, COUNT(*) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.email != 'inactive' AND orders.status = 'active' AND products.name != 'pending' AND users.created_at = 'inactive' AND users.city = 'active' GROUP BY orders.user_id, users.email ORDER BY orders.user_id, users.email;
SELECT products.description, products.name, SUM(products.price) as agg_0, SUM(products.stock) as agg_1, AVG(products.stock) as agg_2 FROM products  WHERE products.description != 'pending' AND products.stock >= 62 AND products.product_id <= 81 AND products.price >= 248.8869091472253 GROUP BY products.description, products.name ORDER BY products.description, products.name;
SELECT AVG(orders.user_id) as agg_0, MIN(users.user_id + orders.order_id) as agg_1, MIN(orders.user_id + orders.price) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.status = 'pending' AND orders.product_id <= 1006 LIMIT 1000;
SELECT users.user_id, users.city, orders.product_id, SUM(orders.user_id + orders.order_id) as agg_0, SUM(users.user_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.city != 'inactive' GROUP BY users.user_id, users.city, orders.product_id ORDER BY users.user_id, users.city, orders.product_id;
SELECT orders.product_id, AVG(orders.price + products.stock) as agg_0, MIN(products.price) as agg_1, SUM(orders.price + orders.user_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.order_date = 'pending' AND products.product_id <= 637 AND orders.order_id <= 1635 AND products.name != 'active' GROUP BY orders.product_id ORDER BY orders.product_id LIMIT 100;
SELECT orders.product_id, orders.status, MIN(orders.order_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.order_date = 'inactive' AND products.description != 'pending' AND users.email = 'active' GROUP BY orders.product_id, orders.status ORDER BY orders.product_id, orders.status;
SELECT products.category, SUM(orders.product_id) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.order_id >= 94 GROUP BY products.category ORDER BY products.category;
SELECT products.category, orders.order_date, products.description, SUM(products.price + orders.order_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.description != 'inactive' AND products.name != 'inactive' AND products.created_at != 'active' GROUP BY products.category, orders.order_date, products.description ORDER BY products.category, orders.order_date, products.description;
SELECT users.status, orders.status, orders.order_date, AVG(orders.order_id) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.email = 'pending' AND orders.product_id <= 738 AND products.created_at != 'inactive' AND orders.user_id <= 582 AND users.age >= 151 GROUP BY users.status, orders.status, orders.order_date ORDER BY users.status, orders.status, orders.order_date;
SELECT products.created_at, products.description, products.stock, MAX(products.stock + products.price) as agg_0, SUM(products.stock + products.price) as agg_1 FROM products  WHERE products.created_at != 'active' AND products.product_id >= 297 AND products.category = 'inactive' AND products.name != 'inactive' GROUP BY products.created_at, products.description, products.stock HAVING SUM(products.stock + products.price) <= 21 ORDER BY products.created_at, products.description, products.stock;
SELECT products.created_at, COUNT(*) as agg_0, AVG(orders.quantity) as agg_1, MAX(orders.user_id + orders.total_amount) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.status != 'pending' AND users.age <= 942 AND users.user_id >= 869 AND products.product_id >= 979 AND orders.product_id >= 19 GROUP BY products.created_at ORDER BY products.created_at;
SELECT orders.product_id, MIN(orders.quantity + orders.order_id) as agg_0, COUNT(*) as agg_1 FROM orders  WHERE orders.product_id >= 1730 AND orders.quantity <= 782 AND orders.order_date != 'pending' GROUP BY orders.product_id HAVING COUNT(*) <= 36 ORDER BY orders.product_id;
SELECT users.city, users.user_id, MAX(users.age) as agg_0, SUM(users.user_id) as agg_1 FROM users  WHERE users.email = 'pending' AND users.age <= 338 AND users.created_at != 'active' AND users.city != 'inactive' AND users.name = 'pending' GROUP BY users.city, users.user_id ORDER BY users.city, users.user_id;
SELECT products.product_id, COUNT(*) as agg_0, SUM(orders.product_id + orders.total_amount) as agg_1, MIN(products.price) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.category = 'inactive' AND orders.order_id >= 494 GROUP BY products.product_id ORDER BY products.product_id;
SELECT AVG(orders.quantity + orders.total_amount) as agg_0, MIN(products.stock + orders.price) as agg_1, SUM(orders.product_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.stock <= 119;
SELECT products.category, MAX(orders.total_amount + orders.product_id) as agg_0, AVG(users.age + orders.price) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.user_id >= 22 AND users.status = 'active' AND users.name = 'inactive' AND orders.total_amount <= 62.14856702959234 AND orders.quantity >= 2590 GROUP BY products.category ORDER BY products.category;
SELECT orders.quantity, COUNT(*) as agg_0, MIN(orders.user_id + users.user_id) as agg_1, MAX(orders.order_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.product_id <= 213 AND users.age >= 176 AND orders.order_date = 'active' GROUP BY orders.quantity ORDER BY orders.quantity LIMIT 1000;
SELECT orders.quantity, users.email, MIN(users.age) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.total_amount >= 89.69201628739913 AND products.stock >= 3444 AND orders.price <= 34.427097125308634 AND users.city != 'pending' GROUP BY orders.quantity, users.email ORDER BY orders.quantity, users.email;
SELECT COUNT(*) as agg_0, AVG(users.user_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.user_id <= 4762 AND products.name != 'pending' AND orders.order_date != 'active' AND users.user_id >= 178 AND orders.status = 'inactive' LIMIT 1000;
SELECT products.category, AVG(orders.total_amount + orders.user_id) as agg_0, MIN(products.stock + products.product_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.total_amount <= 18.769250878303893 AND users.user_id >= 3845 AND orders.order_id >= 28 GROUP BY products.category ORDER BY products.category;
SELECT users.name, orders.product_id, AVG(orders.price + orders.user_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.user_id <= 76 AND users.name != 'active' AND users.created_at = 'active' AND users.status = 'inactive' GROUP BY users.name, orders.product_id ORDER BY users.name, orders.product_id;
SELECT users.email, users.age, users.status, AVG(users.age + users.user_id) as agg_0, AVG(users.user_id + users.age) as agg_1 FROM users  WHERE users.email != 'inactive' GROUP BY users.email, users.age, users.status ORDER BY users.email, users.age, users.status;
SELECT orders.order_date, products.category, SUM(orders.price) as agg_0, MAX(products.stock) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.user_id >= 106 AND users.status = 'inactive' AND products.category != 'active' AND users.name = 'active' AND orders.total_amount >= 28.23097145306297 GROUP BY orders.order_date, products.category ORDER BY orders.order_date, products.category;
SELECT users.created_at, COUNT(*) as agg_0, SUM(orders.total_amount + orders.product_id) as agg_1, COUNT(*) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.stock >= 6 AND orders.quantity >= 470 AND orders.order_id <= 39 AND orders.user_id >= 859 GROUP BY users.created_at ORDER BY users.created_at LIMIT 100;
SELECT MAX(users.age) as agg_0, MIN(products.stock) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.name != 'pending' AND orders.status != 'inactive' LIMIT 1000;
SELECT AVG(orders.total_amount) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.order_id <= 102;
SELECT users.age, AVG(orders.user_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.total_amount <= 187.35157701874607 GROUP BY users.age ORDER BY users.age;
SELECT users.age, AVG(orders.product_id + users.user_id) as agg_0, MIN(products.product_id + users.user_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.user_id >= 1160 AND users.user_id >= 41 AND products.stock >= 99 GROUP BY users.age ORDER BY users.age;
SELECT users.city, AVG(users.user_id + orders.user_id) as agg_0, MAX(orders.total_amount + orders.order_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.email = 'inactive' AND users.created_at != 'pending' GROUP BY users.city ORDER BY users.city;
SELECT users.created_at, orders.order_date, COUNT(*) as agg_0, MAX(orders.price) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.name = 'inactive' AND orders.user_id <= 1164 AND products.product_id <= 413 AND orders.order_id >= 448 GROUP BY users.created_at, orders.order_date ORDER BY users.created_at, orders.order_date LIMIT 10;
SELECT MIN(users.user_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.user_id <= 91 AND orders.order_id <= 340 AND orders.product_id >= 4607;
SELECT users.city, orders.order_date, orders.user_id, COUNT(*) as agg_0, SUM(orders.price) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.total_amount >= 48.446513856895706 GROUP BY users.city, orders.order_date, orders.user_id ORDER BY users.city, orders.order_date, orders.user_id;
SELECT orders.status, products.stock, SUM(orders.total_amount + products.price) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.name = 'pending' AND products.stock >= 3611 AND orders.total_amount <= 446.07974826736773 AND products.price >= 89.72968206319321 AND orders.price >= 15.099048699249353 GROUP BY orders.status, products.stock ORDER BY orders.status, products.stock;
SELECT COUNT(*) as agg_0, MIN(products.price) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.created_at != 'active' AND products.stock >= 920 AND orders.order_id >= 2990 AND products.product_id <= 1448;
SELECT orders.user_id, users.name, MIN(orders.order_id) as agg_0, COUNT(*) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.name = 'inactive' AND orders.price <= 14.752489411804923 AND users.status = 'pending' GROUP BY orders.user_id, users.name ORDER BY orders.user_id, users.name;
SELECT COUNT(*) as agg_0 FROM users  WHERE users.name != 'active' AND users.email = 'pending' AND users.user_id <= 914 AND users.age <= 305;
SELECT users.email, users.created_at, MIN(users.age + users.user_id) as agg_0, MIN(users.user_id + users.age) as agg_1 FROM users  WHERE users.name != 'active' AND users.status != 'inactive' AND users.city = 'pending' AND users.age >= 783 GROUP BY users.email, users.created_at HAVING MIN(users.age + users.user_id) >= 43 ORDER BY users.email, users.created_at;
SELECT COUNT(*) as agg_0, AVG(products.price + orders.quantity) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.price <= 72.59042929191064 AND users.age >= 17 AND orders.total_amount <= 49.98536344740228;
SELECT users.name, products.category, orders.quantity, SUM(orders.user_id + users.age) as agg_0, SUM(products.product_id) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.total_amount <= 5.395345822088675 AND products.stock >= 292 AND users.age <= 63 AND products.price <= 18.62642437554019 GROUP BY users.name, products.category, orders.quantity ORDER BY users.name, products.category, orders.quantity;
SELECT AVG(products.price + orders.quantity) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.name = 'pending' AND users.age <= 604 AND products.stock >= 7 AND products.category != 'active' AND orders.status != 'inactive' LIMIT 1000;
SELECT products.name, orders.product_id, products.description, COUNT(*) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.product_id <= 15 AND orders.order_date != 'inactive' AND products.price >= 4.865577303793453 GROUP BY products.name, orders.product_id, products.description ORDER BY products.name, orders.product_id, products.description;
SELECT orders.product_id, MIN(users.user_id + orders.order_id) as agg_0, MAX(orders.quantity + orders.total_amount) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.user_id >= 550 AND orders.status != 'active' GROUP BY orders.product_id HAVING MAX(orders.quantity + orders.total_amount) >= 35 ORDER BY orders.product_id;
SELECT SUM(users.user_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.status = 'active';
SELECT orders.user_id, orders.status, orders.product_id, MAX(orders.quantity) as agg_0, AVG(orders.order_id + orders.product_id) as agg_1 FROM orders  WHERE orders.total_amount <= 7.1904592989760046 AND orders.order_date != 'pending' AND orders.quantity <= 551 AND orders.product_id <= 81 GROUP BY orders.user_id, orders.status, orders.product_id ORDER BY orders.user_id, orders.status, orders.product_id;
SELECT orders.status, orders.order_date, products.category, AVG(orders.order_id + products.stock) as agg_0, AVG(orders.user_id + orders.product_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.quantity <= 782 GROUP BY orders.status, orders.order_date, products.category ORDER BY orders.status, orders.order_date, products.category;
SELECT products.product_id, products.category, products.description, AVG(products.stock + products.price) as agg_0, AVG(products.stock + products.product_id) as agg_1 FROM products  WHERE products.price >= 129.10514587015385 AND products.name = 'inactive' AND products.description = 'inactive' AND products.stock >= 83 AND products.product_id <= 68 GROUP BY products.product_id, products.category, products.description ORDER BY products.product_id, products.category, products.description;
SELECT COUNT(*) as agg_0, AVG(products.product_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.product_id >= 353 AND products.price >= 4.326362328673485 AND users.age >= 131;
SELECT MIN(orders.product_id + orders.quantity) as agg_0, MIN(orders.total_amount) as agg_1, MAX(orders.price) as agg_2 FROM orders  WHERE orders.order_id >= 48 LIMIT 100;
SELECT MAX(products.product_id) as agg_0, MAX(orders.user_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.quantity <= 98 AND products.category != 'inactive' AND orders.user_id >= 4731 AND products.description != 'active' AND orders.order_id <= 69;
SELECT products.description, users.name, MAX(products.product_id + users.age) as agg_0, MAX(orders.product_id + orders.user_id) as agg_1, MAX(users.age) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.quantity >= 2662 GROUP BY products.description, users.name HAVING MAX(users.age) >= 55 ORDER BY products.description, users.name;
SELECT users.created_at, products.name, orders.user_id, SUM(products.stock + orders.user_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.age >= 182 GROUP BY users.created_at, products.name, orders.user_id ORDER BY users.created_at, products.name, orders.user_id LIMIT 10;
SELECT AVG(users.age) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_id <= 1422 AND products.category != 'inactive' AND orders.user_id >= 901 AND products.name != 'inactive' AND users.created_at = 'pending';
SELECT MIN(products.product_id) as agg_0, COUNT(*) as agg_1, SUM(products.product_id + products.price) as agg_2 FROM products  WHERE products.stock >= 580;
SELECT SUM(products.product_id) as agg_0 FROM products  WHERE products.description != 'inactive' AND products.created_at = 'pending' AND products.price >= 81.69727389397683 AND products.category != 'active' AND products.stock >= 1336;
SELECT orders.quantity, users.age, orders.order_date, COUNT(*) as agg_0, AVG(products.price + users.user_id) as agg_1, MIN(orders.price + users.age) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.product_id <= 357 AND orders.total_amount >= 3.1068099296735783 AND products.price >= 85.09157483704263 AND users.status != 'active' AND products.description != 'inactive' GROUP BY orders.quantity, users.age, orders.order_date HAVING COUNT(*) >= 21 ORDER BY orders.quantity, users.age, orders.order_date;
SELECT users.created_at, SUM(users.age) as agg_0, MAX(users.age) as agg_1 FROM users  WHERE users.name != 'active' AND users.age <= 3447 AND users.city != 'active' GROUP BY users.created_at ORDER BY users.created_at;
SELECT COUNT(*) as agg_0, SUM(users.user_id + users.age) as agg_1 FROM users  WHERE users.age >= 294 AND users.user_id <= 1313 AND users.status != 'active';
SELECT products.name, users.name, MIN(users.user_id + orders.order_id) as agg_0, MAX(users.user_id + orders.order_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.email = 'pending' GROUP BY products.name, users.name ORDER BY products.name, users.name;
SELECT users.city, SUM(users.age) as agg_0, MIN(users.user_id) as agg_1, SUM(users.age + users.user_id) as agg_2 FROM users  WHERE users.created_at != 'inactive' AND users.city = 'active' AND users.user_id >= 826 GROUP BY users.city ORDER BY users.city;
SELECT users.age, users.city, users.email, COUNT(*) as agg_0 FROM users  WHERE users.user_id <= 2770 AND users.age >= 2500 AND users.city != 'inactive' AND users.status = 'active' GROUP BY users.age, users.city, users.email HAVING COUNT(*) <= 62 ORDER BY users.age, users.city, users.email;
SELECT orders.order_date, orders.status, products.category, MIN(products.price + orders.price) as agg_0, COUNT(*) as agg_1, MIN(orders.total_amount + orders.product_id) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE products.name = 'pending' AND orders.product_id >= 10 GROUP BY orders.order_date, orders.status, products.category ORDER BY orders.order_date, orders.status, products.category;
SELECT SUM(users.age + orders.price) as agg_0, MAX(orders.total_amount) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.user_id <= 36 AND products.stock >= 87 AND products.product_id >= 4 AND users.age <= 583;
SELECT MIN(orders.order_id + orders.user_id) as agg_0, MAX(users.user_id + orders.user_id) as agg_1, MIN(orders.product_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.status = 'inactive' AND users.city != 'active' AND orders.user_id <= 197 AND users.created_at != 'pending' AND orders.quantity >= 736;
SELECT users.user_id, orders.status, AVG(orders.order_id + users.user_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_id <= 34 AND users.user_id <= 202 GROUP BY users.user_id, orders.status ORDER BY users.user_id, orders.status;
SELECT products.name, AVG(orders.user_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.order_date != 'active' AND products.description = 'inactive' GROUP BY products.name ORDER BY products.name;
SELECT MAX(products.product_id + products.stock) as agg_0 FROM products  WHERE products.description != 'pending';
SELECT products.stock, orders.status, MAX(orders.total_amount + users.user_id) as agg_0, COUNT(*) as agg_1, COUNT(*) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.name != 'pending' AND orders.quantity >= 2158 AND products.description = 'inactive' AND orders.product_id >= 23 GROUP BY products.stock, orders.status ORDER BY products.stock, orders.status;
SELECT products.category, products.name, products.stock, MAX(products.stock) as agg_0, MIN(products.stock + products.product_id) as agg_1 FROM products  WHERE products.description = 'inactive' GROUP BY products.category, products.name, products.stock HAVING MIN(products.stock + products.product_id) <= 27 ORDER BY products.category, products.name, products.stock;
SELECT products.category, MAX(orders.user_id) as agg_0, COUNT(*) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE products.stock >= 936 AND orders.quantity >= 941 GROUP BY products.category ORDER BY products.category;
SELECT users.name, users.status, SUM(orders.total_amount) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.order_date = 'active' AND orders.price <= 4.822970752776644 AND users.status = 'inactive' AND orders.user_id >= 828 AND users.created_at = 'inactive' GROUP BY users.name, users.status ORDER BY users.name, users.status;
SELECT products.stock, products.category, products.created_at, AVG(products.stock + products.product_id) as agg_0, AVG(products.stock + products.product_id) as agg_1, MIN(products.product_id) as agg_2 FROM products  WHERE products.product_id >= 1845 AND products.name = 'inactive' AND products.description = 'inactive' AND products.price <= 65.4346978640541 AND products.created_at = 'inactive' GROUP BY products.stock, products.category, products.created_at ORDER BY products.stock, products.category, products.created_at;
SELECT users.status, orders.status, MIN(orders.quantity) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.created_at != 'pending' AND users.name = 'active' AND orders.status = 'active' GROUP BY users.status, orders.status ORDER BY users.status, orders.status;
SELECT orders.status, MAX(users.age + orders.price) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.order_id <= 17 AND users.user_id >= 226 GROUP BY orders.status ORDER BY orders.status;
SELECT AVG(orders.user_id + products.product_id) as agg_0, AVG(products.product_id + orders.user_id) as agg_1, SUM(products.stock + orders.product_id) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.name != 'active' AND products.category = 'active' AND products.stock >= 4740;
SELECT products.stock, MIN(users.user_id + users.age) as agg_0, SUM(orders.product_id + users.user_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.user_id >= 95 AND orders.quantity >= 501 AND orders.product_id >= 3645 AND users.email = 'active' GROUP BY products.stock ORDER BY products.stock;
SELECT users.created_at, MIN(products.stock + orders.order_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.created_at = 'pending' AND orders.product_id <= 260 GROUP BY users.created_at HAVING MIN(products.stock + orders.order_id) >= 86 ORDER BY users.created_at LIMIT 1000;
SELECT orders.user_id, products.created_at, orders.status, MIN(orders.total_amount) as agg_0, MIN(orders.user_id + orders.product_id) as agg_1, SUM(products.stock + orders.quantity) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.user_id <= 3731 AND products.product_id <= 2 GROUP BY orders.user_id, products.created_at, orders.status ORDER BY orders.user_id, products.created_at, orders.status LIMIT 10;
SELECT users.age, users.name, products.name, AVG(orders.price) as agg_0, MIN(orders.order_id + products.price) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.stock <= 303 AND users.name != 'inactive' AND orders.total_amount <= 447.96683288901215 GROUP BY users.age, users.name, products.name ORDER BY users.age, users.name, products.name;
SELECT MAX(orders.price + orders.total_amount) as agg_0, MIN(orders.order_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.user_id >= 28 AND users.email = 'pending' AND users.user_id >= 3594 AND users.status = 'pending' AND orders.total_amount >= 55.863148557991416;
SELECT products.name, products.description, products.created_at, SUM(products.price) as agg_0 FROM products  WHERE products.created_at = 'active' AND products.category = 'inactive' GROUP BY products.name, products.description, products.created_at ORDER BY products.name, products.description, products.created_at;
SELECT COUNT(*) as agg_0 FROM users  WHERE users.status = 'inactive' AND users.city != 'inactive' LIMIT 10;
SELECT SUM(orders.price + orders.total_amount) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.created_at != 'pending';
SELECT users.user_id, users.city, orders.order_id, MAX(orders.total_amount) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.city = 'inactive' AND orders.total_amount >= 25.95280198242877 AND orders.price >= 425.47845622312377 GROUP BY users.user_id, users.city, orders.order_id ORDER BY users.user_id, users.city, orders.order_id;
SELECT products.category, MAX(products.stock + products.product_id) as agg_0 FROM products  WHERE products.description = 'active' AND products.price <= 265.91160756914974 AND products.name = 'active' AND products.created_at = 'inactive' GROUP BY products.category ORDER BY products.category LIMIT 1000;
SELECT products.category, orders.order_date, products.created_at, MIN(products.stock) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE orders.total_amount <= 5.966806158559589 AND orders.order_id <= 760 AND orders.price >= 44.42894615681705 AND products.price >= 1.728004451205903 GROUP BY products.category, orders.order_date, products.created_at ORDER BY products.category, orders.order_date, products.created_at;
SELECT products.name, users.user_id, AVG(orders.product_id) as agg_0, MAX(orders.product_id + users.user_id) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.user_id >= 431 GROUP BY products.name, users.user_id ORDER BY products.name, users.user_id;
SELECT products.created_at, products.product_id, MIN(products.price) as agg_0, COUNT(*) as agg_1 FROM products  WHERE products.stock >= 983 GROUP BY products.created_at, products.product_id ORDER BY products.created_at, products.product_id LIMIT 1000;
SELECT orders.user_id, users.city, users.name, MAX(users.user_id) as agg_0, SUM(products.stock + users.age) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.created_at = 'active' GROUP BY orders.user_id, users.city, users.name HAVING MAX(users.user_id) >= 73 ORDER BY orders.user_id, users.city, users.name;
SELECT orders.product_id, products.description, products.product_id, COUNT(*) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.quantity >= 407 AND orders.status != 'pending' AND products.name != 'active' AND products.stock <= 113 AND orders.order_id <= 2007 GROUP BY orders.product_id, products.description, products.product_id ORDER BY orders.product_id, products.description, products.product_id;
SELECT users.email, users.created_at, users.status, AVG(orders.order_id) as agg_0, MAX(orders.order_id + users.age) as agg_1, AVG(orders.product_id) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.quantity >= 4781 AND users.age <= 569 AND users.email = 'active' GROUP BY users.email, users.created_at, users.status ORDER BY users.email, users.created_at, users.status;
SELECT orders.order_id, COUNT(*) as agg_0, MIN(orders.price) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.description != 'inactive' AND orders.total_amount >= 9.557797040268195 AND products.stock >= 649 AND products.product_id >= 337 AND products.price <= 17.00991300426223 GROUP BY orders.order_id ORDER BY orders.order_id;
SELECT MIN(orders.order_id + orders.price) as agg_0, COUNT(*) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.status != 'pending' AND users.user_id <= 666;
SELECT orders.quantity, MAX(orders.price) as agg_0, MIN(orders.total_amount) as agg_1 FROM orders  WHERE orders.total_amount <= 5.188732876094824 AND orders.status = 'active' AND orders.price <= 90.89136241971458 AND orders.order_id >= 377 AND orders.order_date != 'active' GROUP BY orders.quantity ORDER BY orders.quantity;
SELECT SUM(users.user_id) as agg_0, SUM(users.age + users.user_id) as agg_1, COUNT(*) as agg_2 FROM users  WHERE users.age <= 1121 LIMIT 10;
SELECT users.created_at, users.status, AVG(users.age) as agg_0, MIN(orders.order_id) as agg_1, SUM(orders.user_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.category = 'pending' AND orders.order_date != 'pending' GROUP BY users.created_at, users.status ORDER BY users.created_at, users.status;
SELECT COUNT(*) as agg_0, MAX(users.user_id) as agg_1, AVG(users.user_id) as agg_2 FROM users  WHERE users.city != 'pending' AND users.created_at = 'pending';
SELECT products.created_at, COUNT(*) as agg_0, MAX(users.age + products.product_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.product_id >= 31 AND products.description = 'active' GROUP BY products.created_at HAVING MAX(users.age + products.product_id) <= 95 ORDER BY products.created_at LIMIT 10;
SELECT orders.quantity, users.status, SUM(products.price) as agg_0, AVG(orders.user_id + products.stock) as agg_1, AVG(users.age) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.user_id >= 799 AND users.name = 'inactive' AND products.price <= 54.86876523310411 AND products.description != 'active' GROUP BY orders.quantity, users.status ORDER BY orders.quantity, users.status;
SELECT users.city, MAX(products.stock + orders.price) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.created_at = 'inactive' AND products.category != 'pending' AND orders.order_id <= 293 AND products.product_id >= 474 AND products.description = 'pending' GROUP BY users.city ORDER BY users.city LIMIT 1000;
SELECT products.created_at, SUM(products.price + products.product_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.name = 'inactive' AND orders.status != 'inactive' AND products.price >= 91.11321227195052 GROUP BY products.created_at ORDER BY products.created_at;
SELECT orders.product_id, products.name, COUNT(*) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.product_id >= 90 AND products.category = 'inactive' AND users.name != 'inactive' GROUP BY orders.product_id, products.name ORDER BY orders.product_id, products.name;
SELECT orders.quantity, AVG(orders.user_id) as agg_0 FROM orders  WHERE orders.quantity <= 25 AND orders.user_id <= 54 AND orders.product_id >= 1111 AND orders.price >= 125.17624842931895 GROUP BY orders.quantity ORDER BY orders.quantity;
SELECT users.city, users.status, COUNT(*) as agg_0, AVG(orders.order_id) as agg_1, MIN(orders.user_id + orders.quantity) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE orders.price >= 87.16360938508627 AND orders.product_id <= 2080 GROUP BY users.city, users.status ORDER BY users.city, users.status;
SELECT orders.order_date, products.category, MAX(products.price) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.price <= 22.81921471089096 AND orders.order_date != 'pending' AND products.name != 'active' GROUP BY orders.order_date, products.category ORDER BY orders.order_date, products.category LIMIT 10;
SELECT users.name, users.email, AVG(users.age + users.user_id) as agg_0 FROM users  WHERE users.created_at != 'pending' AND users.status != 'active' AND users.age >= 252 GROUP BY users.name, users.email HAVING AVG(users.age + users.user_id) <= 46 ORDER BY users.name, users.email;
SELECT orders.product_id, orders.order_id, SUM(products.stock) as agg_0, SUM(orders.order_id + products.price) as agg_1, SUM(orders.price) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.description != 'active' GROUP BY orders.product_id, orders.order_id ORDER BY orders.product_id, orders.order_id;
SELECT users.age, users.name, users.created_at, SUM(users.age + users.user_id) as agg_0, COUNT(*) as agg_1, COUNT(*) as agg_2 FROM users  WHERE users.email = 'active' GROUP BY users.age, users.name, users.created_at ORDER BY users.age, users.name, users.created_at;
SELECT orders.user_id, AVG(users.user_id + orders.product_id) as agg_0, AVG(orders.price) as agg_1, AVG(orders.total_amount + orders.price) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.age >= 449 AND orders.product_id >= 2889 GROUP BY orders.user_id ORDER BY orders.user_id LIMIT 10;
SELECT AVG(orders.total_amount) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.name = 'active' AND users.created_at = 'pending' AND users.user_id >= 25;
SELECT products.category, COUNT(*) as agg_0, MIN(products.product_id) as agg_1 FROM products  WHERE products.category = 'pending' AND products.stock >= 640 AND products.price <= 17.690577964871622 AND products.description != 'pending' AND products.created_at = 'active' GROUP BY products.category ORDER BY products.category;
SELECT MIN(products.price + products.product_id) as agg_0 FROM products  WHERE products.product_id >= 66 AND products.name = 'active' AND products.description != 'inactive' AND products.stock >= 692;
SELECT orders.status, AVG(orders.product_id + orders.total_amount) as agg_0, SUM(orders.product_id + products.stock) as agg_1, COUNT(*) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.city = 'pending' AND orders.order_id >= 579 AND orders.order_date != 'pending' GROUP BY orders.status ORDER BY orders.status;
SELECT users.user_id, COUNT(*) as agg_0 FROM users  WHERE users.city != 'inactive' AND users.email = 'active' AND users.name != 'pending' AND users.user_id <= 442 AND users.created_at = 'inactive' GROUP BY users.user_id ORDER BY users.user_id;
SELECT products.product_id, COUNT(*) as agg_0, AVG(orders.quantity + orders.price) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.name != 'active' AND orders.price <= 51.935518752483404 AND orders.quantity >= 233 AND products.category = 'inactive' AND users.created_at = 'active' GROUP BY products.product_id ORDER BY products.product_id;
SELECT orders.order_date, AVG(orders.quantity + orders.order_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.city != 'inactive' AND orders.product_id >= 18 AND products.name != 'active' AND users.status != 'active' GROUP BY orders.order_date ORDER BY orders.order_date;
SELECT products.created_at, users.name, MAX(users.user_id + orders.product_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.price <= 19.14901989826007 AND orders.order_date != 'pending' AND users.created_at != 'inactive' AND products.category = 'inactive' GROUP BY products.created_at, users.name ORDER BY products.created_at, users.name LIMIT 1000;
SELECT orders.order_date, SUM(products.stock + orders.order_id) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE orders.status = 'active' AND products.created_at = 'inactive' AND products.description = 'pending' AND products.name = 'pending' GROUP BY orders.order_date ORDER BY orders.order_date;
SELECT users.email, orders.user_id, MIN(orders.order_id + users.user_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.user_id <= 4048 AND users.status = 'pending' AND users.email = 'active' AND users.created_at = 'inactive' AND orders.order_date = 'active' GROUP BY users.email, orders.user_id ORDER BY users.email, orders.user_id;
SELECT orders.user_id, SUM(users.age) as agg_0, MIN(orders.total_amount + orders.user_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.total_amount <= 336.63741341826903 AND orders.user_id <= 866 AND orders.quantity <= 97 AND users.user_id <= 228 AND orders.order_date = 'active' GROUP BY orders.user_id HAVING SUM(users.age) >= 42 ORDER BY orders.user_id;
SELECT MIN(orders.product_id) as agg_0, AVG(orders.price) as agg_1, COUNT(*) as agg_2 FROM orders  WHERE orders.product_id <= 307 AND orders.order_id >= 716 AND orders.quantity >= 838;
SELECT orders.product_id, COUNT(*) as agg_0, MAX(orders.total_amount + users.age) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.age <= 4195 GROUP BY orders.product_id HAVING MAX(orders.total_amount + users.age) >= 92 ORDER BY orders.product_id;
SELECT orders.order_id, orders.product_id, MAX(orders.price + orders.order_id) as agg_0, COUNT(*) as agg_1, AVG(products.price) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.price >= 491.5792033257376 AND orders.quantity >= 95 GROUP BY orders.order_id, orders.product_id ORDER BY orders.order_id, orders.product_id;
SELECT orders.user_id, orders.quantity, COUNT(*) as agg_0 FROM orders  WHERE orders.status = 'active' AND orders.price >= 99.30273628395831 AND orders.order_date = 'inactive' AND orders.user_id >= 470 GROUP BY orders.user_id, orders.quantity ORDER BY orders.user_id, orders.quantity;
SELECT orders.order_id, orders.order_date, AVG(orders.order_id + products.price) as agg_0, MIN(orders.quantity) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.order_date = 'pending' AND products.price >= 43.6890343736725 AND orders.user_id >= 474 AND orders.quantity <= 816 AND products.product_id >= 155 GROUP BY orders.order_id, orders.order_date ORDER BY orders.order_id, orders.order_date;
SELECT AVG(orders.order_id) as agg_0, MAX(products.price + products.stock) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.description != 'pending' AND products.name != 'active' AND products.category = 'active' AND orders.user_id >= 40 LIMIT 10;
SELECT orders.quantity, users.created_at, MIN(users.user_id + orders.user_id) as agg_0, MAX(products.stock + orders.total_amount) as agg_1, AVG(users.user_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.quantity <= 47 GROUP BY orders.quantity, users.created_at HAVING MIN(users.user_id + orders.user_id) >= 83 ORDER BY orders.quantity, users.created_at;
SELECT users.name, products.category, MAX(orders.product_id) as agg_0, AVG(users.user_id) as agg_1, AVG(products.price + orders.total_amount) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.user_id >= 4346 GROUP BY users.name, products.category ORDER BY users.name, products.category;
SELECT users.city, users.email, MIN(users.user_id + orders.total_amount) as agg_0, COUNT(*) as agg_1, COUNT(*) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.quantity >= 51 AND products.name = 'active' AND products.category = 'inactive' AND products.created_at = 'pending' GROUP BY users.city, users.email ORDER BY users.city, users.email;
SELECT SUM(orders.order_id) as agg_0, AVG(products.stock) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.created_at != 'active' AND products.price <= 497.425270738692 AND users.status != 'pending' AND products.description = 'active' LIMIT 1000;
SELECT AVG(orders.quantity + orders.product_id) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.stock <= 17 AND users.status != 'pending' AND products.product_id <= 483 AND users.age >= 779;
SELECT products.category, users.user_id, MIN(products.stock + orders.product_id) as agg_0, MAX(orders.order_id + orders.product_id) as agg_1, COUNT(*) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.user_id <= 1049 GROUP BY products.category, users.user_id ORDER BY products.category, users.user_id LIMIT 100;
SELECT users.age, users.created_at, COUNT(*) as agg_0, MAX(users.user_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.status = 'inactive' GROUP BY users.age, users.created_at ORDER BY users.age, users.created_at;
SELECT users.email, products.category, AVG(orders.order_id + users.user_id) as agg_0, AVG(orders.total_amount) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.created_at != 'active' AND orders.order_date = 'active' GROUP BY users.email, products.category HAVING AVG(orders.order_id + users.user_id) <= 45 ORDER BY users.email, products.category;
SELECT orders.product_id, MAX(products.product_id) as agg_0, MAX(orders.product_id + orders.total_amount) as agg_1, MIN(orders.user_id + users.user_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.email != 'pending' AND orders.product_id <= 1350 AND orders.order_id >= 652 GROUP BY orders.product_id HAVING MIN(orders.user_id + users.user_id) <= 78 ORDER BY orders.product_id;
SELECT products.created_at, AVG(products.stock + orders.user_id) as agg_0, MIN(orders.product_id) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.quantity >= 908 AND orders.status = 'pending' AND orders.product_id <= 343 AND users.name != 'inactive' GROUP BY products.created_at ORDER BY products.created_at;
SELECT SUM(orders.total_amount) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.created_at = 'pending' AND products.price <= 37.31504264807427 AND orders.price <= 9.428700882286066 AND products.description != 'pending' AND orders.user_id <= 216;
SELECT AVG(orders.product_id + orders.user_id) as agg_0, COUNT(*) as agg_1, MAX(orders.quantity) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.stock <= 873 AND orders.price >= 88.7249256336901;
SELECT users.created_at, products.name, MAX(orders.quantity + orders.order_id) as agg_0, COUNT(*) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.category = 'pending' AND users.city != 'inactive' AND orders.product_id >= 922 AND users.age >= 4879 AND products.created_at != 'pending' GROUP BY users.created_at, products.name ORDER BY users.created_at, products.name;
SELECT COUNT(*) as agg_0, MIN(users.user_id + users.age) as agg_1 FROM users  WHERE users.status = 'pending' AND users.user_id >= 455 AND users.age >= 2035;
SELECT users.name, users.email, users.created_at, MAX(users.user_id + users.age) as agg_0, COUNT(*) as agg_1 FROM users  WHERE users.city != 'active' GROUP BY users.name, users.email, users.created_at ORDER BY users.name, users.email, users.created_at;
SELECT products.created_at, SUM(products.price) as agg_0 FROM products  WHERE products.product_id <= 238 GROUP BY products.created_at HAVING SUM(products.price) >= 15 ORDER BY products.created_at;
SELECT products.stock, products.product_id, products.name, SUM(products.stock + products.price) as agg_0, MIN(products.price) as agg_1 FROM products  WHERE products.price <= 42.006993612414625 AND products.name = 'inactive' AND products.stock >= 32 GROUP BY products.stock, products.product_id, products.name ORDER BY products.stock, products.product_id, products.name;
SELECT users.status, users.created_at, SUM(products.product_id + orders.product_id) as agg_0, AVG(orders.product_id) as agg_1, AVG(orders.user_id + products.product_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.city != 'pending' AND products.description = 'inactive' AND products.stock >= 111 AND products.created_at = 'pending' GROUP BY users.status, users.created_at ORDER BY users.status, users.created_at;
SELECT orders.status, users.user_id, SUM(orders.total_amount + users.age) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.email != 'pending' AND orders.status = 'inactive' AND users.city != 'pending' GROUP BY orders.status, users.user_id ORDER BY orders.status, users.user_id;
SELECT orders.product_id, orders.user_id, COUNT(*) as agg_0, AVG(products.price + orders.price) as agg_1, COUNT(*) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE products.description != 'inactive' AND orders.product_id <= 4897 AND orders.order_id <= 85 AND orders.total_amount >= 85.32307379427345 GROUP BY orders.product_id, orders.user_id ORDER BY orders.product_id, orders.user_id;
SELECT MAX(orders.quantity + orders.total_amount) as agg_0, AVG(orders.price + orders.user_id) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.city != 'pending' AND orders.total_amount >= 321.42873800413236 LIMIT 10;
SELECT products.product_id, products.created_at, products.stock, AVG(products.price) as agg_0, MIN(products.price) as agg_1 FROM products  WHERE products.category != 'inactive' AND products.description != 'pending' GROUP BY products.product_id, products.created_at, products.stock HAVING MIN(products.price) <= 66 ORDER BY products.product_id, products.created_at, products.stock;
SELECT users.city, orders.quantity, users.email, MIN(users.user_id + orders.product_id) as agg_0, MIN(users.user_id + orders.total_amount) as agg_1, MAX(orders.product_id + users.age) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.email != 'inactive' AND orders.order_date = 'active' GROUP BY users.city, orders.quantity, users.email ORDER BY users.city, orders.quantity, users.email;
SELECT products.product_id, products.created_at, orders.status, AVG(orders.total_amount) as agg_0, SUM(orders.total_amount + products.stock) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.price >= 162.26815777680946 AND orders.total_amount <= 412.82697423925526 GROUP BY products.product_id, products.created_at, orders.status ORDER BY products.product_id, products.created_at, orders.status;
SELECT MAX(orders.total_amount) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.age <= 31;
SELECT products.category, users.created_at, SUM(orders.product_id) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.stock <= 1341 AND products.category = 'active' GROUP BY products.category, users.created_at ORDER BY products.category, users.created_at;
SELECT products.stock, MIN(orders.total_amount + products.product_id) as agg_0, MAX(products.price) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.product_id >= 92 AND products.price <= 11.012415255725006 GROUP BY products.stock ORDER BY products.stock;
SELECT orders.user_id, users.name, AVG(users.age + orders.price) as agg_0, COUNT(*) as agg_1, MAX(orders.product_id + orders.quantity) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.product_id <= 581 AND orders.price <= 130.88357028781243 GROUP BY orders.user_id, users.name ORDER BY orders.user_id, users.name;
SELECT AVG(products.stock) as agg_0 FROM products  WHERE products.created_at = 'pending' AND products.price <= 79.19333414830521;
SELECT MIN(products.product_id + products.price) as agg_0, AVG(orders.total_amount) as agg_1, AVG(orders.total_amount) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE products.stock <= 2311;
SELECT products.category, MAX(orders.total_amount + orders.price) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.stock <= 254 AND products.product_id <= 451 AND orders.user_id >= 601 AND products.price <= 34.02844264633647 AND orders.order_date != 'active' GROUP BY products.category ORDER BY products.category;
SELECT AVG(orders.price) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE orders.user_id >= 92;
SELECT MIN(orders.quantity + orders.product_id) as agg_0, COUNT(*) as agg_1, SUM(products.product_id + orders.total_amount) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE products.category = 'active';
SELECT products.stock, AVG(products.stock + products.price) as agg_0, MAX(products.price) as agg_1 FROM products  WHERE products.name != 'active' GROUP BY products.stock ORDER BY products.stock;
SELECT users.city, AVG(orders.quantity + users.age) as agg_0, MAX(users.user_id + users.age) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE orders.order_date = 'active' AND users.user_id <= 9 AND users.status != 'inactive' AND orders.product_id >= 815 GROUP BY users.city ORDER BY users.city;
SELECT products.created_at, COUNT(*) as agg_0, MAX(products.price + orders.total_amount) as agg_1, MAX(orders.price + users.user_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.age <= 1115 AND orders.user_id <= 37 AND orders.price >= 45.96417894642483 GROUP BY products.created_at ORDER BY products.created_at;
SELECT orders.user_id, MAX(products.stock) as agg_0, COUNT(*) as agg_1, AVG(orders.total_amount + orders.product_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.status != 'active' AND users.name = 'active' AND orders.quantity >= 4222 AND users.city != 'pending' GROUP BY orders.user_id ORDER BY orders.user_id;
SELECT orders.quantity, orders.user_id, orders.product_id, COUNT(*) as agg_0, MAX(orders.quantity + orders.total_amount) as agg_1, AVG(orders.user_id + orders.order_id) as agg_2 FROM orders  WHERE orders.price >= 378.9546815545547 GROUP BY orders.quantity, orders.user_id, orders.product_id ORDER BY orders.quantity, orders.user_id, orders.product_id;
SELECT SUM(orders.total_amount + orders.user_id) as agg_0, COUNT(*) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.status != 'pending' AND orders.product_id <= 3138 AND orders.price >= 106.80700481788419;
SELECT users.name, MAX(orders.product_id) as agg_0, SUM(orders.user_id + orders.quantity) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.total_amount >= 360.8571227669486 AND orders.status = 'active' AND products.stock >= 4482 AND orders.order_date = 'active' GROUP BY users.name ORDER BY users.name;
SELECT products.created_at, COUNT(*) as agg_0, MIN(orders.order_id) as agg_1, MIN(orders.quantity) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.email = 'pending' AND products.created_at != 'pending' AND products.stock >= 69 AND orders.status != 'pending' AND products.description = 'inactive' GROUP BY products.created_at ORDER BY products.created_at LIMIT 100;
SELECT users.created_at, users.email, AVG(users.age) as agg_0, COUNT(*) as agg_1, COUNT(*) as agg_2 FROM users  WHERE users.created_at = 'inactive' AND users.age <= 670 AND users.email = 'active' GROUP BY users.created_at, users.email HAVING COUNT(*) >= 46 ORDER BY users.created_at, users.email LIMIT 1000;
SELECT MIN(users.user_id + orders.total_amount) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.city != 'pending' AND products.description = 'pending';
SELECT products.product_id, MAX(orders.product_id + users.age) as agg_0, MAX(products.price) as agg_1, MIN(orders.total_amount + orders.quantity) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.quantity <= 543 AND orders.product_id >= 376 GROUP BY products.product_id HAVING MIN(orders.total_amount + orders.quantity) >= 31 ORDER BY products.product_id;
SELECT SUM(orders.user_id) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.name != 'active' AND orders.order_id >= 3471 AND products.created_at = 'inactive' AND users.city != 'active';
SELECT COUNT(*) as agg_0, COUNT(*) as agg_1, MIN(orders.total_amount) as agg_2 FROM orders  WHERE orders.order_id >= 834 AND orders.total_amount >= 44.415683321371525 AND orders.status != 'pending' LIMIT 1000;
SELECT orders.order_date, MIN(users.age) as agg_0, SUM(users.user_id + products.price) as agg_1, SUM(products.price) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_id >= 3689 AND products.description != 'inactive' AND products.created_at = 'inactive' GROUP BY orders.order_date ORDER BY orders.order_date;
SELECT users.age, users.user_id, users.email, COUNT(*) as agg_0, AVG(users.user_id) as agg_1, SUM(users.user_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE orders.order_date != 'active' AND orders.quantity >= 489 AND users.status != 'inactive' AND users.created_at = 'active' GROUP BY users.age, users.user_id, users.email ORDER BY users.age, users.user_id, users.email;
SELECT products.name, MAX(products.product_id) as agg_0, MIN(products.product_id) as agg_1, MAX(products.product_id) as agg_2 FROM products  WHERE products.name != 'pending' AND products.description != 'active' AND products.category = 'active' AND products.product_id >= 1853 GROUP BY products.name ORDER BY products.name;
SELECT products.created_at, orders.order_date, products.description, AVG(products.product_id) as agg_0, SUM(orders.price) as agg_1, MAX(orders.price) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.price <= 11.444980900780228 AND products.name = 'inactive' GROUP BY products.created_at, orders.order_date, products.description ORDER BY products.created_at, orders.order_date, products.description;
SELECT COUNT(*) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.user_id <= 83 AND users.age <= 2597 AND orders.order_date = 'inactive';
SELECT orders.order_date, products.stock, MIN(orders.product_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.city != 'pending' AND users.status = 'pending' AND products.description = 'active' GROUP BY orders.order_date, products.stock ORDER BY orders.order_date, products.stock;
SELECT users.user_id, COUNT(*) as agg_0, AVG(users.user_id + users.age) as agg_1 FROM users  WHERE users.status != 'inactive' AND users.created_at = 'inactive' AND users.name != 'pending' GROUP BY users.user_id ORDER BY users.user_id;
SELECT products.category, orders.quantity, users.age, MIN(orders.quantity) as agg_0, AVG(orders.price) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.price <= 94.91187550312085 AND products.product_id <= 801 AND users.age >= 644 AND orders.product_id <= 792 GROUP BY products.category, orders.quantity, users.age ORDER BY products.category, orders.quantity, users.age;
SELECT orders.quantity, orders.user_id, AVG(orders.quantity) as agg_0, SUM(orders.product_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.user_id >= 902 AND orders.status != 'inactive' GROUP BY orders.quantity, orders.user_id ORDER BY orders.quantity, orders.user_id;
SELECT products.product_id, users.name, users.status, COUNT(*) as agg_0, COUNT(*) as agg_1, COUNT(*) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.product_id <= 615 AND products.price <= 3.528470197585289 GROUP BY products.product_id, users.name, users.status ORDER BY products.product_id, users.name, users.status;
SELECT users.email, orders.order_id, MIN(users.age + orders.price) as agg_0, MIN(orders.quantity + users.user_id) as agg_1, SUM(orders.total_amount + orders.product_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE orders.price <= 31.095340759951622 AND users.email != 'inactive' AND orders.total_amount >= 9.559330006168338 AND users.age <= 910 AND orders.quantity <= 1856 GROUP BY users.email, orders.order_id ORDER BY users.email, orders.order_id LIMIT 100;
SELECT products.created_at, orders.status, SUM(orders.total_amount + products.product_id) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.product_id <= 1419 AND orders.order_id >= 3839 AND users.user_id >= 241 GROUP BY products.created_at, orders.status ORDER BY products.created_at, orders.status;
SELECT users.status, SUM(users.age + users.user_id) as agg_0, SUM(users.user_id + users.age) as agg_1, AVG(users.age) as agg_2 FROM users  WHERE users.age <= 3460 AND users.created_at != 'active' AND users.name != 'active' GROUP BY users.status ORDER BY users.status;
SELECT orders.order_id, COUNT(*) as agg_0, COUNT(*) as agg_1, SUM(orders.user_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.order_id >= 887 AND orders.quantity <= 22 AND users.age >= 79 GROUP BY orders.order_id ORDER BY orders.order_id LIMIT 100;
SELECT users.city, SUM(orders.quantity + orders.product_id) as agg_0, MAX(orders.order_id) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.created_at != 'inactive' AND orders.order_id <= 74 GROUP BY users.city ORDER BY users.city;
SELECT users.name, orders.quantity, AVG(users.user_id + orders.price) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.category != 'pending' AND users.user_id <= 365 GROUP BY users.name, orders.quantity ORDER BY users.name, orders.quantity;
SELECT users.user_id, users.name, users.status, MIN(users.user_id) as agg_0, AVG(orders.order_id + orders.user_id) as agg_1, MIN(orders.product_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.user_id <= 589 AND orders.quantity >= 147 AND users.email = 'inactive' AND users.status = 'pending' GROUP BY users.user_id, users.name, users.status HAVING MIN(orders.product_id) >= 10 ORDER BY users.user_id, users.name, users.status LIMIT 1000;
SELECT products.description, MAX(orders.total_amount + orders.price) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.price <= 14.804320133107755 AND products.description = 'pending' AND users.created_at = 'inactive' AND users.name != 'inactive' AND products.stock >= 30 GROUP BY products.description ORDER BY products.description;
SELECT products.created_at, users.age, users.email, MIN(orders.user_id + users.age) as agg_0, MAX(users.user_id + products.stock) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.created_at != 'active' AND products.product_id <= 3864 AND products.category != 'active' AND products.stock >= 104 GROUP BY products.created_at, users.age, users.email ORDER BY products.created_at, users.age, users.email;
SELECT products.category, users.created_at, SUM(products.product_id + orders.order_id) as agg_0, COUNT(*) as agg_1, COUNT(*) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.user_id <= 914 AND products.created_at = 'active' GROUP BY products.category, users.created_at ORDER BY products.category, users.created_at;
SELECT products.description, SUM(products.product_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.description = 'inactive' AND users.status != 'inactive' AND users.user_id >= 95 AND users.email = 'active' AND orders.order_date = 'active' GROUP BY products.description ORDER BY products.description LIMIT 1000;
SELECT products.stock, products.created_at, COUNT(*) as agg_0, SUM(products.product_id) as agg_1, MAX(products.stock + products.product_id) as agg_2 FROM products  WHERE products.product_id <= 2027 AND products.category = 'pending' AND products.name = 'active' GROUP BY products.stock, products.created_at ORDER BY products.stock, products.created_at;
SELECT products.name, COUNT(*) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.product_id >= 4688 GROUP BY products.name ORDER BY products.name;
SELECT orders.status, products.description, products.created_at, COUNT(*) as agg_0, SUM(users.user_id) as agg_1, MAX(orders.user_id + orders.order_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.name = 'pending' AND orders.price >= 425.1266465284958 AND orders.quantity >= 57 AND orders.status = 'active' GROUP BY orders.status, products.description, products.created_at ORDER BY orders.status, products.description, products.created_at;
SELECT orders.product_id, orders.order_id, users.created_at, COUNT(*) as agg_0, COUNT(*) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.created_at = 'inactive' AND orders.order_id <= 37 AND orders.quantity >= 212 GROUP BY orders.product_id, orders.order_id, users.created_at HAVING COUNT(*) >= 91 ORDER BY orders.product_id, orders.order_id, users.created_at;
SELECT AVG(orders.product_id) as agg_0, MAX(products.price) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.quantity >= 396 AND orders.user_id <= 981 AND orders.product_id <= 51 AND products.stock <= 1166 LIMIT 10;
SELECT MAX(orders.total_amount) as agg_0 FROM orders  WHERE orders.total_amount <= 487.803177197713 AND orders.status = 'active';
SELECT SUM(orders.price) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.price >= 2.0641579154844267 AND products.description = 'active' AND users.name = 'active' AND products.created_at = 'pending' AND users.age <= 568 LIMIT 100;
SELECT products.name, orders.user_id, SUM(orders.price + orders.order_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.stock >= 2041 GROUP BY products.name, orders.user_id ORDER BY products.name, orders.user_id;
SELECT SUM(products.product_id) as agg_0, MIN(products.stock) as agg_1, AVG(products.price + products.product_id) as agg_2 FROM products  WHERE products.description != 'pending';
SELECT AVG(orders.product_id) as agg_0, AVG(products.stock) as agg_1, MIN(orders.product_id + orders.price) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.status != 'pending' AND orders.quantity <= 3782 AND users.age <= 518 AND orders.order_date != 'inactive';
SELECT MIN(orders.user_id + orders.total_amount) as agg_0, MAX(orders.price + orders.product_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.created_at = 'inactive';
SELECT users.status, users.email, users.age, AVG(users.user_id) as agg_0, MIN(users.age + users.user_id) as agg_1 FROM users  WHERE users.user_id <= 4 AND users.city = 'pending' AND users.status != 'pending' AND users.age <= 80 AND users.email = 'pending' GROUP BY users.status, users.email, users.age ORDER BY users.status, users.email, users.age;
SELECT orders.order_id, orders.status, users.email, AVG(orders.user_id) as agg_0, MIN(orders.total_amount) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.order_date != 'inactive' AND orders.product_id >= 72 AND users.created_at = 'inactive' AND users.user_id >= 29 AND orders.user_id >= 4 GROUP BY orders.order_id, orders.status, users.email HAVING AVG(orders.user_id) >= 85 ORDER BY orders.order_id, orders.status, users.email;
SELECT COUNT(*) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.product_id >= 738 AND products.price >= 80.80574279697859 LIMIT 1000;
SELECT users.status, SUM(users.user_id + users.age) as agg_0, AVG(users.age) as agg_1, MAX(users.age) as agg_2 FROM users  WHERE users.name = 'pending' AND users.email != 'pending' AND users.user_id <= 30 AND users.city = 'pending' AND users.status = 'pending' GROUP BY users.status ORDER BY users.status;
SELECT orders.quantity, AVG(orders.product_id + orders.order_id) as agg_0, AVG(orders.product_id) as agg_1, SUM(orders.quantity) as agg_2 FROM orders  WHERE orders.order_date = 'inactive' AND orders.quantity <= 39 AND orders.status = 'inactive' AND orders.user_id >= 3596 GROUP BY orders.quantity ORDER BY orders.quantity;
SELECT products.product_id, products.name, MAX(products.price) as agg_0, COUNT(*) as agg_1 FROM products  WHERE products.created_at != 'inactive' AND products.name != 'inactive' AND products.category = 'pending' AND products.price <= 95.5659479514876 AND products.description != 'active' GROUP BY products.product_id, products.name ORDER BY products.product_id, products.name;
SELECT users.created_at, MAX(users.age + users.user_id) as agg_0, AVG(users.user_id + users.age) as agg_1 FROM users  WHERE users.city = 'active' AND users.created_at = 'active' AND users.status = 'pending' GROUP BY users.created_at HAVING AVG(users.user_id + users.age) <= 14 ORDER BY users.created_at;
SELECT products.name, orders.order_id, users.status, AVG(orders.user_id) as agg_0, MAX(users.age + orders.order_id) as agg_1, SUM(orders.order_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.user_id <= 834 AND orders.status != 'pending' AND products.category != 'pending' AND products.stock >= 162 GROUP BY products.name, orders.order_id, users.status HAVING MAX(users.age + orders.order_id) >= 9 ORDER BY products.name, orders.order_id, users.status;
SELECT users.city, users.name, users.status, AVG(users.user_id + users.age) as agg_0, SUM(users.user_id) as agg_1, AVG(users.user_id) as agg_2 FROM users  WHERE users.name != 'active' AND users.email = 'active' GROUP BY users.city, users.name, users.status ORDER BY users.city, users.name, users.status;
SELECT products.stock, SUM(products.product_id) as agg_0, SUM(products.stock + products.product_id) as agg_1 FROM products  WHERE products.created_at = 'pending' AND products.category != 'active' AND products.description = 'pending' AND products.stock >= 402 GROUP BY products.stock HAVING SUM(products.product_id) <= 68 ORDER BY products.stock;
SELECT users.name, MIN(orders.price) as agg_0, AVG(orders.price) as agg_1, SUM(orders.quantity + users.age) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.age <= 832 AND orders.product_id <= 3997 AND orders.order_date = 'pending' AND users.email != 'inactive' GROUP BY users.name ORDER BY users.name LIMIT 100;
SELECT products.created_at, orders.quantity, users.email, COUNT(*) as agg_0, MAX(products.price) as agg_1, MIN(orders.order_id + orders.product_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.city = 'pending' AND orders.order_id <= 3751 AND products.category = 'inactive' AND users.email != 'inactive' AND orders.quantity >= 1817 GROUP BY products.created_at, orders.quantity, users.email ORDER BY products.created_at, orders.quantity, users.email;
SELECT orders.user_id, users.user_id, orders.order_id, MIN(orders.order_id + orders.product_id) as agg_0, MAX(users.age) as agg_1, MAX(orders.order_id + products.stock) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.price <= 4.077187242727433 GROUP BY orders.user_id, users.user_id, orders.order_id ORDER BY orders.user_id, users.user_id, orders.order_id;
SELECT products.description, products.category, products.product_id, MIN(products.price) as agg_0, SUM(products.product_id) as agg_1, SUM(products.product_id + products.price) as agg_2 FROM products  WHERE products.category != 'inactive' AND products.stock <= 404 AND products.product_id <= 1220 AND products.created_at = 'active' AND products.description = 'active' GROUP BY products.description, products.category, products.product_id HAVING MIN(products.price) <= 76 ORDER BY products.description, products.category, products.product_id;
SELECT orders.status, products.stock, orders.product_id, MIN(orders.total_amount + products.product_id) as agg_0, MIN(products.price) as agg_1, MAX(products.product_id) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE orders.status = 'pending' AND products.category != 'pending' AND orders.total_amount <= 60.951192259416025 AND orders.order_id <= 4804 GROUP BY orders.status, products.stock, orders.product_id ORDER BY orders.status, products.stock, orders.product_id;
SELECT orders.user_id, users.created_at, COUNT(*) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.created_at != 'pending' AND orders.user_id <= 379 AND orders.total_amount <= 59.15431644934779 AND orders.price <= 315.92312259369567 AND users.user_id >= 210 GROUP BY orders.user_id, users.created_at ORDER BY orders.user_id, users.created_at;
SELECT orders.order_id, users.city, orders.product_id, AVG(orders.quantity) as agg_0, COUNT(*) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.quantity <= 98 AND products.stock >= 77 AND users.age <= 801 AND products.category != 'active' AND orders.total_amount <= 15.045430343427562 GROUP BY orders.order_id, users.city, orders.product_id ORDER BY orders.order_id, users.city, orders.product_id LIMIT 10;
SELECT products.category, orders.order_id, MAX(orders.user_id) as agg_0, MIN(orders.order_id + orders.user_id) as agg_1, MAX(orders.user_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.age <= 34 AND orders.price >= 84.21010031295405 AND orders.product_id >= 857 AND orders.total_amount >= 99.0665038625007 GROUP BY products.category, orders.order_id ORDER BY products.category, orders.order_id LIMIT 1000;
SELECT products.stock, users.age, products.created_at, MAX(orders.order_id + orders.total_amount) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.price <= 32.76265564672731 AND products.product_id <= 856 AND users.email != 'inactive' AND products.stock <= 38 GROUP BY products.stock, users.age, products.created_at HAVING MAX(orders.order_id + orders.total_amount) >= 54 ORDER BY products.stock, users.age, products.created_at LIMIT 1000;
SELECT MAX(orders.user_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.user_id >= 189 AND users.name = 'inactive' AND orders.order_id >= 19 AND products.name != 'pending' AND products.stock >= 259;
SELECT products.stock, products.product_id, products.created_at, MAX(products.product_id) as agg_0, MAX(products.price + products.stock) as agg_1 FROM products  WHERE products.category = 'inactive' AND products.created_at = 'inactive' AND products.name = 'inactive' AND products.product_id >= 69 GROUP BY products.stock, products.product_id, products.created_at ORDER BY products.stock, products.product_id, products.created_at LIMIT 10;
SELECT products.description, users.age, products.name, AVG(products.price + products.product_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.created_at != 'active' AND products.category = 'pending' GROUP BY products.description, users.age, products.name ORDER BY products.description, users.age, products.name LIMIT 10;
SELECT orders.status, products.stock, orders.order_date, MIN(orders.user_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.name = 'active' AND orders.product_id >= 429 AND products.description != 'inactive' AND products.product_id >= 2037 GROUP BY orders.status, products.stock, orders.order_date ORDER BY orders.status, products.stock, orders.order_date LIMIT 10;
SELECT products.product_id, SUM(users.user_id + orders.quantity) as agg_0, SUM(orders.order_id + users.age) as agg_1, MIN(users.age + products.price) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.user_id >= 468 AND users.city = 'inactive' AND products.product_id >= 199 AND orders.status = 'inactive' AND users.email = 'inactive' GROUP BY products.product_id ORDER BY products.product_id;
SELECT SUM(users.user_id) as agg_0, COUNT(*) as agg_1, MAX(users.age) as agg_2 FROM users  WHERE users.user_id <= 451;
SELECT users.email, MAX(products.stock + orders.total_amount) as agg_0, MIN(products.product_id) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.description != 'active' AND users.age >= 644 AND users.city = 'inactive' AND products.category != 'active' GROUP BY users.email ORDER BY users.email;
SELECT products.category, users.age, MIN(products.product_id) as agg_0, AVG(products.price + products.product_id) as agg_1, AVG(orders.user_id + orders.order_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.name = 'active' GROUP BY products.category, users.age ORDER BY products.category, users.age LIMIT 100;
SELECT orders.user_id, orders.product_id, products.description, MIN(orders.product_id) as agg_0, SUM(products.price) as agg_1, COUNT(*) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.price <= 94.45049605938235 AND orders.quantity <= 849 AND products.stock <= 44 AND orders.order_date = 'inactive' AND products.name = 'inactive' GROUP BY orders.user_id, orders.product_id, products.description ORDER BY orders.user_id, orders.product_id, products.description;
SELECT users.name, users.email, SUM(orders.total_amount) as agg_0, AVG(orders.price) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.price >= 4.644088909839098 GROUP BY users.name, users.email ORDER BY users.name, users.email;
SELECT orders.order_date, users.created_at, MIN(orders.user_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.total_amount >= 124.47145443499954 AND products.product_id >= 503 GROUP BY orders.order_date, users.created_at ORDER BY orders.order_date, users.created_at;
SELECT users.status, orders.user_id, MAX(orders.quantity + orders.total_amount) as agg_0, AVG(orders.total_amount) as agg_1, AVG(orders.price + orders.order_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE orders.user_id <= 217 AND orders.status = 'pending' AND orders.product_id <= 66 GROUP BY users.status, orders.user_id ORDER BY users.status, orders.user_id;
SELECT orders.order_date, orders.order_id, MAX(orders.order_id + orders.quantity) as agg_0 FROM orders  WHERE orders.order_id >= 653 GROUP BY orders.order_date, orders.order_id ORDER BY orders.order_date, orders.order_id;
SELECT products.stock, orders.user_id, MAX(products.stock) as agg_0, COUNT(*) as agg_1, MAX(users.age) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.stock <= 2733 GROUP BY products.stock, orders.user_id ORDER BY products.stock, orders.user_id;
SELECT users.name, products.product_id, users.age, AVG(users.user_id) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.status = 'inactive' GROUP BY users.name, products.product_id, users.age ORDER BY users.name, products.product_id, users.age;
SELECT products.stock, orders.quantity, orders.user_id, MAX(orders.quantity) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.category != 'active' GROUP BY products.stock, orders.quantity, orders.user_id ORDER BY products.stock, orders.quantity, orders.user_id;
SELECT products.description, orders.order_id, orders.user_id, MIN(orders.quantity + orders.product_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.name != 'inactive' AND orders.status = 'active' AND products.description = 'inactive' GROUP BY products.description, orders.order_id, orders.user_id ORDER BY products.description, orders.order_id, orders.user_id;
SELECT SUM(products.stock) as agg_0, MIN(products.stock) as agg_1 FROM products  WHERE products.price <= 40.979178170743545 AND products.stock <= 12;
SELECT AVG(orders.product_id) as agg_0, AVG(orders.user_id + orders.order_id) as agg_1, COUNT(*) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.user_id <= 37 LIMIT 100;
SELECT users.name, orders.quantity, users.status, AVG(products.price + products.product_id) as agg_0, AVG(products.stock) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_id >= 45 AND users.email = 'inactive' GROUP BY users.name, orders.quantity, users.status ORDER BY users.name, orders.quantity, users.status;
SELECT products.name, COUNT(*) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.quantity <= 191 AND products.price >= 7.943077295934478 AND orders.user_id <= 34 AND orders.total_amount <= 2.1884041509110395 GROUP BY products.name ORDER BY products.name;
SELECT products.created_at, orders.quantity, products.category, MAX(orders.product_id) as agg_0, AVG(products.stock + orders.price) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.created_at != 'active' AND orders.user_id >= 338 AND users.name = 'inactive' GROUP BY products.created_at, orders.quantity, products.category ORDER BY products.created_at, orders.quantity, products.category LIMIT 10;
SELECT COUNT(*) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.description != 'pending' AND orders.order_id >= 386 AND products.name = 'pending' AND users.name != 'pending';
SELECT orders.product_id, orders.user_id, MAX(orders.total_amount + orders.user_id) as agg_0, AVG(orders.product_id + orders.order_id) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.price <= 1.8682438010975182 AND products.description != 'active' GROUP BY orders.product_id, orders.user_id ORDER BY orders.product_id, orders.user_id;
SELECT products.category, products.stock, MAX(orders.price + products.price) as agg_0, MAX(orders.quantity) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE orders.price >= 7.18677809052651 AND products.created_at != 'active' GROUP BY products.category, products.stock ORDER BY products.category, products.stock;
SELECT SUM(orders.total_amount) as agg_0, MAX(orders.total_amount) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.order_date = 'inactive' AND products.product_id >= 28 AND products.category != 'active' AND orders.quantity >= 844;
SELECT users.user_id, orders.quantity, SUM(users.age) as agg_0, AVG(orders.quantity) as agg_1, MAX(orders.order_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.user_id >= 3213 AND users.name != 'inactive' GROUP BY users.user_id, orders.quantity ORDER BY users.user_id, orders.quantity;
SELECT users.user_id, users.city, AVG(users.age) as agg_0 FROM users  WHERE users.user_id <= 42 AND users.status = 'pending' GROUP BY users.user_id, users.city ORDER BY users.user_id, users.city;
SELECT products.stock, COUNT(*) as agg_0 FROM products  WHERE products.product_id >= 739 AND products.created_at != 'active' GROUP BY products.stock ORDER BY products.stock;
SELECT AVG(products.price) as agg_0, MIN(products.product_id) as agg_1, AVG(products.stock) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.product_id <= 37 AND orders.quantity >= 262 AND products.name != 'active';
SELECT products.created_at, COUNT(*) as agg_0, SUM(orders.product_id + products.stock) as agg_1, SUM(orders.order_id + orders.total_amount) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.user_id <= 291 AND products.category != 'pending' AND products.description != 'inactive' GROUP BY products.created_at ORDER BY products.created_at;
SELECT AVG(products.product_id + products.price) as agg_0, COUNT(*) as agg_1 FROM products  WHERE products.stock <= 55 AND products.name != 'active';
SELECT SUM(products.stock) as agg_0, MIN(products.stock + orders.price) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.price >= 47.49906885514292 AND orders.order_id >= 3546 AND orders.order_date = 'pending';
SELECT products.name, products.product_id, orders.user_id, SUM(products.price) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.name = 'pending' AND orders.product_id >= 94 AND products.stock <= 426 AND products.product_id >= 357 GROUP BY products.name, products.product_id, orders.user_id HAVING SUM(products.price) >= 26 ORDER BY products.name, products.product_id, orders.user_id;
SELECT users.created_at, SUM(orders.quantity) as agg_0, COUNT(*) as agg_1, MAX(orders.order_id + orders.user_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.age <= 756 AND orders.order_date = 'pending' GROUP BY users.created_at HAVING SUM(orders.quantity) <= 25 ORDER BY users.created_at;
SELECT users.created_at, products.category, products.name, MAX(orders.order_id + orders.price) as agg_0, MAX(products.stock + orders.product_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.created_at != 'inactive' GROUP BY users.created_at, products.category, products.name HAVING MAX(products.stock + orders.product_id) <= 92 ORDER BY users.created_at, products.category, products.name;
SELECT orders.quantity, COUNT(*) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.city != 'pending' AND orders.status != 'active' AND users.name != 'inactive' AND users.created_at != 'pending' AND orders.user_id >= 508 GROUP BY orders.quantity ORDER BY orders.quantity;
SELECT MAX(users.user_id + orders.price) as agg_0, SUM(orders.quantity + products.stock) as agg_1, SUM(orders.total_amount) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.status != 'inactive' AND orders.status = 'inactive' AND users.created_at != 'pending' AND products.product_id <= 13 AND orders.quantity >= 789;
SELECT products.stock, AVG(products.product_id + products.price) as agg_0, AVG(products.price + products.stock) as agg_1 FROM products  WHERE products.stock >= 4658 GROUP BY products.stock ORDER BY products.stock;
SELECT orders.order_date, COUNT(*) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.created_at != 'pending' AND orders.order_date != 'inactive' AND orders.total_amount >= 7.190850120436474 GROUP BY orders.order_date ORDER BY orders.order_date;
SELECT products.description, products.created_at, products.product_id, AVG(products.price + products.product_id) as agg_0, MIN(products.price + products.product_id) as agg_1 FROM products  WHERE products.description != 'active' AND products.name = 'inactive' AND products.stock >= 70 GROUP BY products.description, products.created_at, products.product_id ORDER BY products.description, products.created_at, products.product_id LIMIT 100;
SELECT products.product_id, products.name, SUM(orders.quantity + products.product_id) as agg_0, MAX(orders.product_id) as agg_1, MIN(orders.price + users.user_id) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.created_at = 'inactive' AND users.status = 'active' AND products.description != 'pending' AND orders.price <= 129.6742952450951 GROUP BY products.product_id, products.name ORDER BY products.product_id, products.name;
SELECT products.name, products.created_at, COUNT(*) as agg_0, SUM(products.product_id + products.stock) as agg_1, MAX(products.price) as agg_2 FROM products  WHERE products.product_id <= 648 AND products.name = 'inactive' AND products.price >= 214.51339369635028 GROUP BY products.name, products.created_at ORDER BY products.name, products.created_at;
SELECT COUNT(*) as agg_0, COUNT(*) as agg_1, AVG(products.stock + products.product_id) as agg_2 FROM products  WHERE products.price >= 2.5989236479669255 AND products.description != 'inactive' AND products.stock >= 976 LIMIT 100;
SELECT users.city, orders.order_id, SUM(orders.product_id) as agg_0, SUM(products.stock + products.price) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.created_at = 'inactive' AND products.created_at != 'active' AND products.product_id <= 1555 AND users.user_id <= 247 AND products.stock <= 961 GROUP BY users.city, orders.order_id ORDER BY users.city, orders.order_id;
SELECT users.age, AVG(users.age + orders.quantity) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.email = 'active' AND orders.order_date = 'inactive' AND orders.product_id <= 4036 GROUP BY users.age HAVING AVG(users.age + orders.quantity) >= 23 ORDER BY users.age;
SELECT users.user_id, MAX(orders.total_amount) as agg_0, MIN(orders.user_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.product_id >= 706 AND users.user_id >= 57 AND users.age <= 4489 AND orders.product_id <= 755 GROUP BY users.user_id HAVING MIN(orders.user_id) >= 66 ORDER BY users.user_id;
SELECT orders.status, MIN(orders.product_id) as agg_0, SUM(products.price) as agg_1, COUNT(*) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.category = 'pending' AND users.name = 'active' AND users.city = 'pending' GROUP BY orders.status ORDER BY orders.status LIMIT 100;
SELECT users.email, users.name, AVG(users.user_id) as agg_0, MAX(orders.user_id) as agg_1, AVG(orders.user_id + products.product_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.user_id <= 303 GROUP BY users.email, users.name HAVING MAX(orders.user_id) <= 54 ORDER BY users.email, users.name;
SELECT orders.status, users.user_id, COUNT(*) as agg_0, MAX(products.price + products.product_id) as agg_1, MAX(orders.total_amount) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.product_id <= 262 AND users.name != 'inactive' AND orders.status = 'inactive' AND users.user_id >= 195 GROUP BY orders.status, users.user_id HAVING COUNT(*) <= 94 ORDER BY orders.status, users.user_id;
SELECT orders.quantity, products.category, orders.order_date, AVG(orders.price) as agg_0, SUM(products.stock + orders.order_id) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE orders.status != 'active' AND orders.quantity >= 52 AND orders.order_date != 'active' AND products.stock >= 4558 AND orders.product_id <= 667 GROUP BY orders.quantity, products.category, orders.order_date ORDER BY orders.quantity, products.category, orders.order_date LIMIT 10;
SELECT orders.order_date, COUNT(*) as agg_0, MIN(orders.price) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.product_id <= 591 AND users.user_id <= 595 AND orders.status = 'pending' GROUP BY orders.order_date HAVING MIN(orders.price) >= 28 ORDER BY orders.order_date;
SELECT users.email, products.name, AVG(orders.user_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.order_date = 'pending' AND products.created_at = 'inactive' AND orders.order_id <= 459 AND orders.total_amount >= 32.25254123933887 GROUP BY users.email, products.name ORDER BY users.email, products.name;
SELECT COUNT(*) as agg_0, COUNT(*) as agg_1, MIN(users.user_id + orders.price) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.user_id <= 371 AND products.stock <= 53 AND products.product_id <= 223;
SELECT MIN(users.user_id + orders.quantity) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.user_id <= 481 AND products.name = 'pending';
SELECT products.name, users.age, users.email, SUM(orders.total_amount) as agg_0, MIN(orders.order_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.user_id <= 3473 GROUP BY products.name, users.age, users.email ORDER BY products.name, users.age, users.email;
SELECT products.description, products.created_at, products.stock, SUM(products.price + products.product_id) as agg_0, MAX(orders.price) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.product_id <= 883 GROUP BY products.description, products.created_at, products.stock ORDER BY products.description, products.created_at, products.stock;
SELECT users.email, products.stock, users.name, MAX(products.product_id + users.age) as agg_0, SUM(orders.total_amount) as agg_1, SUM(orders.price) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.price >= 1.8328760034382892 AND users.created_at = 'inactive' GROUP BY users.email, products.stock, users.name ORDER BY users.email, products.stock, users.name;
SELECT MAX(orders.price + products.price) as agg_0, MAX(products.stock + users.user_id) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.total_amount <= 24.55814681740486 AND users.age >= 631 AND orders.order_date = 'active' AND orders.quantity <= 4436;
SELECT AVG(users.age + users.user_id) as agg_0, MAX(users.age + users.user_id) as agg_1 FROM users  WHERE users.name = 'pending' AND users.email != 'pending' AND users.age >= 615;
SELECT users.user_id, AVG(orders.total_amount + orders.price) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.product_id <= 48 AND products.stock <= 2081 AND orders.quantity <= 426 AND users.email != 'pending' GROUP BY users.user_id ORDER BY users.user_id;
SELECT products.name, MIN(orders.total_amount + users.user_id) as agg_0, MAX(users.age) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.age <= 3439 AND orders.order_id <= 1458 AND users.email = 'pending' GROUP BY products.name ORDER BY products.name LIMIT 1000;
SELECT products.stock, users.name, MIN(users.age + orders.total_amount) as agg_0, MIN(products.price) as agg_1, AVG(orders.price + products.product_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.status = 'inactive' AND orders.price >= 495.9903940100924 GROUP BY products.stock, users.name ORDER BY products.stock, users.name LIMIT 1000;
SELECT orders.order_date, MAX(products.price + products.product_id) as agg_0, AVG(orders.product_id + products.stock) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.product_id <= 85 AND orders.status = 'pending' GROUP BY orders.order_date HAVING MAX(products.price + products.product_id) <= 30 ORDER BY orders.order_date LIMIT 100;
SELECT AVG(products.product_id) as agg_0, COUNT(*) as agg_1, MAX(products.product_id + products.price) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE orders.order_date = 'active' AND products.product_id <= 2392 AND products.name = 'inactive' AND orders.quantity >= 658;
SELECT users.name, orders.status, MIN(products.price + orders.order_id) as agg_0, AVG(users.user_id) as agg_1, COUNT(*) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.age >= 2177 AND orders.quantity >= 8 AND products.product_id >= 51 AND orders.price >= 1.8077504783639944 GROUP BY users.name, orders.status ORDER BY users.name, orders.status LIMIT 100;
SELECT orders.status, MAX(orders.user_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_id >= 803 AND users.email != 'inactive' GROUP BY orders.status ORDER BY orders.status;
SELECT MIN(users.age + products.price) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.name = 'pending';
SELECT orders.status, products.stock, products.created_at, MAX(products.stock + products.product_id) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.user_id <= 4357 AND users.age >= 428 GROUP BY orders.status, products.stock, products.created_at HAVING MAX(products.stock + products.product_id) >= 45 ORDER BY orders.status, products.stock, products.created_at;
SELECT products.name, users.name, SUM(products.product_id + products.stock) as agg_0, AVG(orders.user_id + products.price) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.quantity >= 842 AND users.age <= 634 AND products.category = 'inactive' GROUP BY products.name, users.name ORDER BY products.name, users.name;
SELECT orders.order_id, orders.product_id, products.product_id, AVG(orders.user_id + orders.total_amount) as agg_0, MIN(products.price) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.price >= 285.2245478669312 AND products.price <= 78.69732730045241 GROUP BY orders.order_id, orders.product_id, products.product_id ORDER BY orders.order_id, orders.product_id, products.product_id;
SELECT users.user_id, users.age, products.product_id, MAX(users.age + users.user_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.city = 'inactive' AND products.created_at != 'inactive' AND users.status = 'active' AND orders.order_id >= 262 AND products.price <= 5.235733853098432 GROUP BY users.user_id, users.age, products.product_id ORDER BY users.user_id, users.age, products.product_id LIMIT 10;
SELECT users.email, MAX(orders.quantity + orders.total_amount) as agg_0, SUM(users.age) as agg_1, AVG(orders.quantity) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.age <= 2093 AND users.user_id <= 6 AND orders.price <= 16.609637954762142 AND users.city = 'pending' AND orders.total_amount <= 4.220357099438156 GROUP BY users.email ORDER BY users.email;
SELECT MAX(users.age) as agg_0 FROM users  WHERE users.created_at = 'inactive';
SELECT products.stock, users.name, SUM(orders.user_id) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.name != 'inactive' AND users.city = 'pending' AND users.email = 'active' GROUP BY products.stock, users.name HAVING SUM(orders.user_id) >= 27 ORDER BY products.stock, users.name;
SELECT products.name, users.status, SUM(users.user_id + products.product_id) as agg_0, MAX(orders.product_id + orders.total_amount) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.total_amount <= 260.8186500873598 AND products.product_id <= 3500 AND products.category = 'active' AND orders.order_id <= 37 AND users.age >= 780 GROUP BY products.name, users.status ORDER BY products.name, users.status;
SELECT products.stock, orders.status, orders.product_id, MIN(orders.order_id) as agg_0, COUNT(*) as agg_1, AVG(orders.order_id + orders.product_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.stock <= 3891 AND products.description != 'active' AND products.name != 'inactive' GROUP BY products.stock, orders.status, orders.product_id ORDER BY products.stock, orders.status, orders.product_id;
SELECT products.description, orders.user_id, SUM(products.price) as agg_0, SUM(orders.total_amount) as agg_1, MAX(orders.quantity) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.category = 'pending' AND orders.order_id <= 134 AND orders.total_amount >= 302.49626052834054 GROUP BY products.description, orders.user_id ORDER BY products.description, orders.user_id;
SELECT products.product_id, users.created_at, AVG(orders.total_amount) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.city != 'inactive' AND orders.price >= 1.4666074837798022 AND products.stock >= 1768 AND orders.total_amount >= 58.486600706743616 GROUP BY products.product_id, users.created_at ORDER BY products.product_id, users.created_at;
SELECT products.created_at, MAX(products.stock) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.total_amount <= 74.08472360766592 AND orders.order_id <= 85 AND orders.quantity >= 387 AND products.category = 'active' AND products.description != 'active' GROUP BY products.created_at HAVING MAX(products.stock) <= 8 ORDER BY products.created_at;
SELECT SUM(products.product_id) as agg_0, COUNT(*) as agg_1, COUNT(*) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.quantity <= 3513 AND products.name = 'inactive' AND orders.user_id <= 124 AND orders.price >= 88.03987969625807;
SELECT users.city, users.user_id, MIN(users.age) as agg_0, MAX(users.user_id) as agg_1, MAX(users.age) as agg_2 FROM users  WHERE users.email != 'inactive' AND users.city = 'pending' AND users.age >= 687 GROUP BY users.city, users.user_id ORDER BY users.city, users.user_id;
SELECT orders.order_date, orders.quantity, products.name, COUNT(*) as agg_0, COUNT(*) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.user_id >= 47 GROUP BY orders.order_date, orders.quantity, products.name ORDER BY orders.order_date, orders.quantity, products.name;
SELECT orders.product_id, MAX(orders.price) as agg_0 FROM orders  WHERE orders.status != 'active' GROUP BY orders.product_id HAVING MAX(orders.price) >= 62 ORDER BY orders.product_id LIMIT 1000;
SELECT MIN(orders.price) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.category != 'inactive' AND orders.order_id <= 469 AND orders.order_date != 'pending';
SELECT orders.order_id, products.stock, products.product_id, MIN(products.product_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.quantity <= 371 AND orders.order_id >= 954 AND products.category = 'pending' GROUP BY orders.order_id, products.stock, products.product_id ORDER BY orders.order_id, products.stock, products.product_id LIMIT 1000;
SELECT users.name, users.age, users.city, MAX(users.user_id + users.age) as agg_0, SUM(users.user_id) as agg_1 FROM users  WHERE users.email != 'pending' AND users.age >= 4143 GROUP BY users.name, users.age, users.city ORDER BY users.name, users.age, users.city;
SELECT products.stock, products.created_at, MIN(products.price) as agg_0, MIN(products.stock + orders.user_id) as agg_1, AVG(orders.order_id) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE orders.price >= 492.4828190283777 AND orders.status = 'active' AND products.price >= 51.254601248529916 GROUP BY products.stock, products.created_at ORDER BY products.stock, products.created_at;
SELECT users.age, orders.status, MIN(orders.quantity + users.age) as agg_0, MAX(orders.order_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.quantity <= 10 AND orders.total_amount >= 15.069451507942183 AND users.created_at != 'pending' AND users.age >= 66 AND users.city = 'pending' GROUP BY users.age, orders.status HAVING MIN(orders.quantity + users.age) <= 4 ORDER BY users.age, orders.status;
SELECT COUNT(*) as agg_0, MAX(orders.price) as agg_1, MAX(users.user_id + users.age) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.created_at = 'inactive';
SELECT COUNT(*) as agg_0, SUM(orders.quantity) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.city = 'inactive' LIMIT 10;
SELECT orders.quantity, orders.user_id, COUNT(*) as agg_0, AVG(products.product_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.stock >= 6 AND products.created_at = 'inactive' AND products.product_id >= 6 AND products.name = 'inactive' AND orders.product_id <= 3924 GROUP BY orders.quantity, orders.user_id ORDER BY orders.quantity, orders.user_id;
SELECT users.city, AVG(users.user_id) as agg_0, SUM(users.age + users.user_id) as agg_1, MIN(users.age) as agg_2 FROM users  WHERE users.city != 'active' GROUP BY users.city ORDER BY users.city;
SELECT COUNT(*) as agg_0, MAX(orders.quantity + orders.price) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.created_at != 'active' AND products.product_id <= 181 AND users.status != 'inactive' AND products.price >= 4.986452628845489 AND orders.quantity <= 950;
SELECT products.created_at, users.created_at, AVG(products.price) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.total_amount <= 11.328464296957176 AND products.stock <= 9 AND products.price >= 67.41775266436753 AND users.user_id >= 3521 AND orders.status != 'inactive' GROUP BY products.created_at, users.created_at ORDER BY products.created_at, users.created_at;
SELECT users.city, SUM(orders.total_amount) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.price <= 6.958085998360163 AND users.email = 'active' AND users.status = 'inactive' AND orders.order_id <= 101 GROUP BY users.city HAVING SUM(orders.total_amount) >= 38 ORDER BY users.city;
SELECT users.city, orders.status, orders.quantity, COUNT(*) as agg_0, AVG(orders.quantity + products.product_id) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.status = 'active' AND orders.quantity <= 852 GROUP BY users.city, orders.status, orders.quantity ORDER BY users.city, orders.status, orders.quantity;
SELECT orders.product_id, AVG(orders.price + orders.quantity) as agg_0 FROM orders  WHERE orders.total_amount >= 241.86180037687254 AND orders.order_date = 'active' AND orders.order_id <= 92 GROUP BY orders.product_id ORDER BY orders.product_id;
SELECT users.created_at, COUNT(*) as agg_0, COUNT(*) as agg_1 FROM users  WHERE users.name = 'active' GROUP BY users.created_at ORDER BY users.created_at;
SELECT orders.user_id, users.name, users.created_at, SUM(orders.price) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE orders.price <= 105.62097868428775 GROUP BY orders.user_id, users.name, users.created_at HAVING SUM(orders.price) <= 29 ORDER BY orders.user_id, users.name, users.created_at;
SELECT SUM(orders.product_id + products.price) as agg_0, AVG(orders.product_id + orders.price) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.created_at != 'pending';
SELECT users.city, users.email, users.status, COUNT(*) as agg_0 FROM users  WHERE users.user_id >= 415 GROUP BY users.city, users.email, users.status ORDER BY users.city, users.email, users.status;
SELECT AVG(orders.total_amount) as agg_0, COUNT(*) as agg_1, MIN(orders.price + orders.order_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.category = 'inactive';
SELECT MAX(orders.order_id) as agg_0, MAX(orders.quantity + products.product_id) as agg_1, MIN(orders.user_id + users.age) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.product_id <= 1299 AND products.stock >= 4218 AND products.description = 'active' AND users.user_id >= 156;
SELECT MIN(products.product_id) as agg_0, MIN(products.stock + products.price) as agg_1 FROM products  WHERE products.category = 'active' AND products.stock <= 186 AND products.product_id <= 873 AND products.name = 'pending' AND products.price >= 68.93794720763353;
SELECT users.age, orders.quantity, MAX(users.user_id) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.user_id >= 20 AND orders.product_id >= 979 GROUP BY users.age, orders.quantity ORDER BY users.age, orders.quantity;
SELECT products.product_id, MAX(products.product_id) as agg_0, SUM(products.stock + products.price) as agg_1 FROM products  WHERE products.name = 'active' AND products.created_at = 'active' AND products.price <= 380.9776827283905 AND products.product_id <= 55 AND products.description = 'pending' GROUP BY products.product_id ORDER BY products.product_id;
SELECT users.status, users.name, AVG(orders.total_amount + users.user_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.user_id <= 371 AND users.age <= 83 AND orders.quantity >= 23 GROUP BY users.status, users.name ORDER BY users.status, users.name;
SELECT SUM(orders.order_id) as agg_0, AVG(users.user_id + orders.product_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.email = 'pending' AND orders.total_amount >= 271.1127887645282 AND products.product_id >= 8;
SELECT SUM(orders.product_id + orders.order_id) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE orders.price >= 271.4302219898658 AND orders.quantity <= 3717 AND orders.user_id <= 85;
SELECT orders.order_id, MAX(orders.product_id) as agg_0, SUM(orders.order_id + orders.user_id) as agg_1 FROM orders  WHERE orders.order_date = 'inactive' AND orders.user_id <= 281 AND orders.product_id >= 41 AND orders.price >= 3.4042981565602686 GROUP BY orders.order_id ORDER BY orders.order_id;
SELECT users.name, orders.order_date, COUNT(*) as agg_0, COUNT(*) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.order_id >= 307 AND users.name = 'inactive' AND users.created_at = 'inactive' AND users.email != 'active' GROUP BY users.name, orders.order_date HAVING COUNT(*) >= 46 ORDER BY users.name, orders.order_date LIMIT 100;
SELECT products.product_id, products.description, orders.user_id, MAX(orders.order_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.product_id <= 715 AND products.description != 'active' GROUP BY products.product_id, products.description, orders.user_id ORDER BY products.product_id, products.description, orders.user_id LIMIT 100;
SELECT SUM(orders.order_id) as agg_0, AVG(products.stock) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.description = 'active' AND products.category != 'active' AND users.status != 'inactive';
SELECT orders.status, products.stock, users.age, COUNT(*) as agg_0, SUM(products.product_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.description != 'inactive' AND orders.product_id <= 4169 AND orders.order_id <= 84 AND users.city != 'active' GROUP BY orders.status, products.stock, users.age ORDER BY orders.status, products.stock, users.age LIMIT 1000;
SELECT MAX(orders.user_id + orders.quantity) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.category != 'pending' AND orders.quantity <= 75 AND orders.order_id <= 73 AND products.created_at != 'inactive' AND orders.price <= 7.202913452458697;
SELECT MIN(orders.total_amount + products.price) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.price <= 58.50190241573925 AND orders.product_id >= 1340 AND products.created_at != 'active';
SELECT AVG(orders.user_id + users.age) as agg_0, COUNT(*) as agg_1, COUNT(*) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.user_id <= 1 LIMIT 100;
SELECT products.created_at, products.stock, COUNT(*) as agg_0 FROM products  WHERE products.category != 'pending' GROUP BY products.created_at, products.stock HAVING COUNT(*) >= 64 ORDER BY products.created_at, products.stock;
SELECT COUNT(*) as agg_0, SUM(products.product_id) as agg_1, MIN(orders.user_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.product_id <= 17 AND products.description != 'pending';
SELECT orders.quantity, MIN(orders.price + orders.quantity) as agg_0 FROM orders  WHERE orders.user_id <= 2833 AND orders.quantity >= 778 AND orders.order_date != 'inactive' AND orders.total_amount <= 9.884661389083133 AND orders.product_id >= 3283 GROUP BY orders.quantity ORDER BY orders.quantity;
SELECT products.description, MIN(products.price + products.stock) as agg_0, MAX(products.price + products.stock) as agg_1 FROM products  WHERE products.created_at != 'inactive' AND products.name = 'active' AND products.category = 'inactive' AND products.description = 'inactive' GROUP BY products.description ORDER BY products.description;
SELECT products.stock, products.category, products.name, COUNT(*) as agg_0, COUNT(*) as agg_1 FROM products  WHERE products.category != 'pending' GROUP BY products.stock, products.category, products.name ORDER BY products.stock, products.category, products.name;
SELECT MAX(orders.order_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_date != 'inactive' AND users.name != 'pending' AND orders.total_amount <= 47.85459486733752 AND orders.status = 'active';
SELECT orders.product_id, users.user_id, users.city, MIN(orders.user_id) as agg_0, MAX(users.user_id + orders.quantity) as agg_1, SUM(orders.price) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.quantity <= 94 GROUP BY orders.product_id, users.user_id, users.city ORDER BY orders.product_id, users.user_id, users.city;
SELECT users.email, MIN(orders.user_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.price <= 97.41485042957959 GROUP BY users.email ORDER BY users.email;
SELECT orders.order_id, orders.status, MIN(orders.order_id + orders.user_id) as agg_0 FROM orders  WHERE orders.product_id >= 35 AND orders.user_id >= 561 GROUP BY orders.order_id, orders.status HAVING MIN(orders.order_id + orders.user_id) <= 91 ORDER BY orders.order_id, orders.status;
SELECT MIN(orders.order_id + products.price) as agg_0, SUM(products.product_id) as agg_1, COUNT(*) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.order_date != 'active' AND products.name = 'active' AND products.description != 'inactive';
SELECT MAX(orders.user_id + orders.quantity) as agg_0, SUM(products.price + users.age) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.created_at = 'pending';
SELECT users.created_at, SUM(orders.product_id) as agg_0, AVG(orders.total_amount) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.quantity >= 52 AND orders.product_id >= 91 AND orders.price >= 7.42781015368505 AND products.description != 'pending' AND orders.user_id <= 869 GROUP BY users.created_at ORDER BY users.created_at;
SELECT MAX(orders.user_id) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.age >= 14 AND products.created_at = 'pending' LIMIT 100;
SELECT orders.status, products.name, MIN(orders.product_id) as agg_0, COUNT(*) as agg_1, MAX(products.stock) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE products.description != 'pending' AND products.category != 'active' AND products.created_at = 'inactive' AND orders.total_amount >= 197.64954363221455 GROUP BY orders.status, products.name ORDER BY orders.status, products.name;
SELECT AVG(products.product_id) as agg_0, MAX(products.price) as agg_1, AVG(products.price) as agg_2 FROM products  WHERE products.name != 'pending' AND products.description != 'pending' AND products.stock >= 771 AND products.category != 'inactive';
SELECT AVG(products.stock + products.product_id) as agg_0, AVG(users.user_id) as agg_1, SUM(products.product_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.product_id <= 668;
SELECT products.created_at, AVG(orders.total_amount + products.price) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.name != 'pending' AND orders.price <= 73.80579733699926 GROUP BY products.created_at ORDER BY products.created_at LIMIT 100;
SELECT SUM(orders.quantity) as agg_0, AVG(orders.total_amount) as agg_1, MAX(users.user_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.user_id <= 2712 AND users.status = 'pending';
SELECT users.created_at, MAX(users.age + users.user_id) as agg_0 FROM users  WHERE users.status = 'active' GROUP BY users.created_at ORDER BY users.created_at;
SELECT products.category, AVG(users.age) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.city = 'inactive' AND orders.quantity >= 789 AND users.email = 'inactive' AND users.name != 'inactive' GROUP BY products.category ORDER BY products.category;
SELECT orders.status, MIN(users.age + orders.product_id) as agg_0, MAX(orders.price + users.user_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.total_amount <= 8.281986344684375 AND orders.status != 'inactive' GROUP BY orders.status HAVING MAX(orders.price + users.user_id) >= 41 ORDER BY orders.status;
SELECT users.city, products.description, COUNT(*) as agg_0, SUM(users.age + products.product_id) as agg_1, AVG(orders.user_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.age >= 12 AND products.category = 'pending' AND products.product_id <= 368 AND users.email = 'inactive' GROUP BY users.city, products.description ORDER BY users.city, products.description LIMIT 1000;
SELECT users.created_at, COUNT(*) as agg_0, SUM(products.stock) as agg_1, SUM(products.stock + orders.quantity) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.product_id >= 466 AND products.created_at = 'inactive' AND orders.order_id <= 63 AND users.status != 'inactive' AND users.created_at = 'inactive' GROUP BY users.created_at ORDER BY users.created_at LIMIT 1000;
SELECT users.user_id, SUM(users.age + users.user_id) as agg_0 FROM users  WHERE users.city != 'active' AND users.user_id >= 68 AND users.created_at != 'active' GROUP BY users.user_id ORDER BY users.user_id;
SELECT orders.product_id, users.age, users.created_at, SUM(orders.product_id) as agg_0, COUNT(*) as agg_1, AVG(users.user_id + orders.quantity) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.user_id >= 12 GROUP BY orders.product_id, users.age, users.created_at ORDER BY orders.product_id, users.age, users.created_at;
SELECT COUNT(*) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.quantity <= 734 AND orders.price >= 53.752120496172736 AND orders.user_id <= 99 AND products.product_id >= 3642 AND products.price >= 300.68266481340095 LIMIT 1000;
SELECT MIN(orders.user_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.user_id <= 88 AND products.name != 'active' LIMIT 100;
SELECT users.email, orders.order_date, products.name, SUM(orders.price) as agg_0, AVG(products.stock + orders.product_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.city = 'active' GROUP BY users.email, orders.order_date, products.name ORDER BY users.email, orders.order_date, products.name;
SELECT products.category, COUNT(*) as agg_0, COUNT(*) as agg_1, AVG(products.product_id + products.price) as agg_2 FROM products  WHERE products.category != 'inactive' AND products.description != 'pending' AND products.stock >= 923 AND products.name = 'pending' AND products.price >= 251.79859027488845 GROUP BY products.category HAVING COUNT(*) <= 45 ORDER BY products.category;
SELECT users.email, orders.order_id, MIN(orders.product_id + orders.quantity) as agg_0, COUNT(*) as agg_1, MIN(products.stock + orders.user_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.status = 'inactive' AND users.created_at = 'active' AND users.city != 'inactive' AND products.stock >= 90 AND products.price >= 2.803718783318632 GROUP BY users.email, orders.order_id ORDER BY users.email, orders.order_id;
SELECT MAX(orders.quantity + orders.total_amount) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.name != 'active' AND orders.quantity <= 25 LIMIT 10;
SELECT users.city, MAX(users.age + users.user_id) as agg_0 FROM users  WHERE users.age >= 499 AND users.email = 'active' GROUP BY users.city ORDER BY users.city;
SELECT orders.product_id, orders.order_id, products.stock, SUM(orders.order_id + orders.total_amount) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.user_id <= 93 AND orders.total_amount >= 7.174349338999602 AND orders.product_id >= 170 AND products.name != 'inactive' AND products.stock >= 2887 GROUP BY orders.product_id, orders.order_id, products.stock HAVING SUM(orders.order_id + orders.total_amount) <= 23 ORDER BY orders.product_id, orders.order_id, products.stock;
SELECT MAX(orders.product_id + orders.total_amount) as agg_0, AVG(orders.user_id + users.age) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.status != 'active' AND orders.order_id <= 150 AND orders.user_id <= 39 AND users.city != 'active' LIMIT 10;
SELECT users.name, orders.order_date, products.stock, COUNT(*) as agg_0, AVG(orders.quantity) as agg_1, MIN(products.stock + orders.total_amount) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.total_amount >= 202.71907179302727 AND orders.product_id <= 807 GROUP BY users.name, orders.order_date, products.stock ORDER BY users.name, orders.order_date, products.stock;
SELECT MAX(orders.total_amount) as agg_0, COUNT(*) as agg_1 FROM orders  WHERE orders.status = 'active';
SELECT SUM(users.age) as agg_0, COUNT(*) as agg_1, AVG(orders.order_id) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.age >= 843;
SELECT MAX(orders.user_id) as agg_0, MIN(users.age + orders.total_amount) as agg_1, COUNT(*) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.user_id <= 935 AND orders.order_date != 'pending' AND orders.product_id <= 600 AND users.created_at != 'active';
SELECT users.created_at, MIN(users.user_id) as agg_0, SUM(users.age) as agg_1, SUM(users.user_id + users.age) as agg_2 FROM users  WHERE users.city = 'pending' GROUP BY users.created_at ORDER BY users.created_at;
SELECT COUNT(*) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.product_id >= 536 AND orders.order_date = 'active';
SELECT users.created_at, users.status, COUNT(*) as agg_0, MAX(users.age) as agg_1 FROM users  WHERE users.name != 'active' AND users.city = 'active' AND users.email = 'pending' AND users.age >= 2924 AND users.status != 'pending' GROUP BY users.created_at, users.status HAVING MAX(users.age) <= 59 ORDER BY users.created_at, users.status;
SELECT products.created_at, products.product_id, SUM(users.age) as agg_0, SUM(orders.order_id + products.product_id) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.name != 'active' AND products.stock <= 68 AND users.status = 'pending' AND products.description != 'pending' GROUP BY products.created_at, products.product_id ORDER BY products.created_at, products.product_id;
SELECT SUM(orders.price + users.age) as agg_0, COUNT(*) as agg_1, AVG(orders.price + orders.order_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.created_at != 'pending' AND users.status != 'active';
SELECT users.created_at, users.user_id, users.email, COUNT(*) as agg_0, SUM(users.user_id) as agg_1 FROM users  WHERE users.created_at = 'active' GROUP BY users.created_at, users.user_id, users.email HAVING SUM(users.user_id) >= 71 ORDER BY users.created_at, users.user_id, users.email LIMIT 10;
SELECT products.created_at, orders.status, AVG(users.user_id + users.age) as agg_0, MIN(users.user_id) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.status = 'pending' AND orders.order_id <= 2080 AND orders.total_amount <= 168.8925699716437 AND users.city = 'inactive' GROUP BY products.created_at, orders.status ORDER BY products.created_at, orders.status;
SELECT products.created_at, users.email, orders.order_id, MIN(products.price + orders.product_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.quantity >= 425 AND products.created_at != 'inactive' AND orders.user_id <= 200 AND users.status != 'inactive' AND products.price <= 381.1806742517363 GROUP BY products.created_at, users.email, orders.order_id ORDER BY products.created_at, users.email, orders.order_id;
SELECT orders.status, users.user_id, MIN(users.user_id) as agg_0, MIN(users.user_id + orders.price) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.city = 'inactive' AND orders.user_id >= 2961 GROUP BY orders.status, users.user_id ORDER BY orders.status, users.user_id;
SELECT MAX(orders.user_id + orders.quantity) as agg_0, MIN(products.stock) as agg_1, MAX(orders.user_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.total_amount >= 12.645364225102472 AND orders.order_date != 'active' AND products.name != 'pending' AND products.description = 'active' AND orders.price >= 86.71298368058858;
SELECT MAX(users.user_id) as agg_0 FROM users  WHERE users.name != 'active' AND users.status != 'inactive';
SELECT users.name, users.email, MAX(users.user_id) as agg_0, COUNT(*) as agg_1 FROM users  WHERE users.email = 'inactive' GROUP BY users.name, users.email ORDER BY users.name, users.email;
SELECT products.name, users.status, orders.order_date, MAX(orders.quantity) as agg_0, MIN(orders.user_id + users.age) as agg_1, AVG(orders.user_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.age <= 1869 AND products.price <= 50.26643799490726 AND products.stock >= 7 AND products.description = 'active' GROUP BY products.name, users.status, orders.order_date ORDER BY products.name, users.status, orders.order_date;
SELECT users.email, users.age, AVG(orders.user_id + users.age) as agg_0, SUM(orders.quantity + orders.total_amount) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.status != 'pending' AND orders.product_id <= 682 AND users.user_id >= 698 AND users.email != 'active' AND orders.price >= 3.657148761345333 GROUP BY users.email, users.age HAVING AVG(orders.user_id + users.age) >= 33 ORDER BY users.email, users.age;
SELECT MAX(users.user_id + orders.total_amount) as agg_0, SUM(orders.quantity) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.user_id >= 1025;
SELECT orders.quantity, SUM(orders.total_amount) as agg_0, SUM(orders.product_id) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE products.category = 'active' AND orders.price >= 70.05528849218965 AND orders.status = 'pending' AND products.description != 'pending' GROUP BY orders.quantity HAVING SUM(orders.total_amount) >= 20 ORDER BY orders.quantity;
SELECT orders.user_id, users.name, orders.status, MAX(users.user_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.price <= 19.932903757634573 AND users.user_id <= 797 GROUP BY orders.user_id, users.name, orders.status HAVING MAX(users.user_id) <= 36 ORDER BY orders.user_id, users.name, orders.status LIMIT 1000;
SELECT products.name, orders.order_id, users.email, AVG(orders.order_id) as agg_0, MIN(products.product_id + orders.total_amount) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.product_id <= 382 AND orders.price >= 78.50855225598237 AND orders.quantity <= 1155 AND users.created_at = 'inactive' GROUP BY products.name, orders.order_id, users.email ORDER BY products.name, orders.order_id, users.email;
SELECT orders.order_id, orders.order_date, orders.product_id, AVG(orders.total_amount) as agg_0, COUNT(*) as agg_1, MIN(orders.total_amount) as agg_2 FROM orders  WHERE orders.status != 'inactive' GROUP BY orders.order_id, orders.order_date, orders.product_id ORDER BY orders.order_id, orders.order_date, orders.product_id;
SELECT orders.order_id, products.created_at, orders.order_date, MIN(products.stock) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE orders.status != 'inactive' AND products.description = 'pending' AND products.product_id >= 170 AND products.created_at != 'inactive' AND orders.user_id <= 1450 GROUP BY orders.order_id, products.created_at, orders.order_date ORDER BY orders.order_id, products.created_at, orders.order_date;
SELECT users.user_id, COUNT(*) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.status = 'pending' AND orders.total_amount <= 75.8237607066635 AND products.stock <= 1456 AND products.price <= 56.93596044123388 AND products.description = 'pending' GROUP BY users.user_id ORDER BY users.user_id LIMIT 1000;
SELECT MIN(orders.order_id) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE orders.order_id >= 444 AND orders.total_amount <= 23.29004619591954;
SELECT users.created_at, orders.order_id, MIN(orders.order_id) as agg_0, SUM(orders.quantity + orders.total_amount) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.email != 'pending' GROUP BY users.created_at, orders.order_id HAVING SUM(orders.quantity + orders.total_amount) <= 63 ORDER BY users.created_at, orders.order_id;
SELECT orders.user_id, orders.product_id, MAX(orders.user_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.total_amount >= 50.95009987329644 AND users.status != 'active' GROUP BY orders.user_id, orders.product_id ORDER BY orders.user_id, orders.product_id;
SELECT products.product_id, users.created_at, COUNT(*) as agg_0, COUNT(*) as agg_1, SUM(products.price) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.price >= 155.62040684845675 AND orders.product_id <= 92 AND users.user_id <= 3730 AND users.email = 'active' GROUP BY products.product_id, users.created_at ORDER BY products.product_id, users.created_at LIMIT 10;
SELECT users.created_at, users.age, MIN(users.user_id + users.age) as agg_0, AVG(users.user_id) as agg_1 FROM users  WHERE users.age <= 581 AND users.user_id >= 3 AND users.created_at = 'pending' AND users.email != 'active' GROUP BY users.created_at, users.age ORDER BY users.created_at, users.age;
SELECT orders.user_id, users.name, users.created_at, AVG(orders.quantity) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_date = 'pending' AND users.user_id >= 829 AND products.created_at = 'pending' AND orders.product_id >= 213 GROUP BY orders.user_id, users.name, users.created_at ORDER BY orders.user_id, users.name, users.created_at;
SELECT orders.order_date, MIN(users.age) as agg_0, COUNT(*) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.user_id >= 4840 AND users.user_id >= 4181 AND orders.product_id <= 3456 AND users.city = 'inactive' AND orders.total_amount <= 7.38316228270402 GROUP BY orders.order_date HAVING COUNT(*) <= 64 ORDER BY orders.order_date;
SELECT orders.product_id, users.city, MIN(orders.user_id + orders.order_id) as agg_0, MIN(orders.price) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.email = 'active' AND orders.product_id >= 67 AND orders.price <= 190.5266660636612 GROUP BY orders.product_id, users.city HAVING MIN(orders.price) >= 54 ORDER BY orders.product_id, users.city;
SELECT users.created_at, users.name, users.status, MIN(users.age) as agg_0, COUNT(*) as agg_1, MIN(users.user_id) as agg_2 FROM users  WHERE users.city = 'pending' GROUP BY users.created_at, users.name, users.status ORDER BY users.created_at, users.name, users.status;
SELECT orders.order_id, users.status, SUM(orders.order_id + users.age) as agg_0, MAX(orders.price + users.age) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.total_amount <= 59.90583391517304 GROUP BY orders.order_id, users.status ORDER BY orders.order_id, users.status;
SELECT COUNT(*) as agg_0, MIN(orders.product_id + products.product_id) as agg_1, SUM(orders.user_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.stock >= 444 AND orders.total_amount <= 82.38663117744892 AND users.user_id <= 203;
SELECT users.name, users.created_at, users.city, SUM(users.age) as agg_0, MAX(users.user_id + users.age) as agg_1, MAX(users.user_id + users.age) as agg_2 FROM users  WHERE users.name = 'inactive' AND users.city != 'inactive' AND users.email != 'pending' AND users.status != 'pending' AND users.age >= 62 GROUP BY users.name, users.created_at, users.city ORDER BY users.name, users.created_at, users.city LIMIT 1000;
SELECT COUNT(*) as agg_0, MIN(products.product_id + orders.quantity) as agg_1, COUNT(*) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.quantity >= 2204 AND products.created_at = 'inactive' AND orders.status = 'active';
SELECT products.product_id, users.email, orders.status, SUM(orders.price + orders.user_id) as agg_0, COUNT(*) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.created_at = 'inactive' AND orders.user_id >= 40 AND products.name = 'inactive' GROUP BY products.product_id, users.email, orders.status ORDER BY products.product_id, users.email, orders.status;
SELECT AVG(orders.total_amount + orders.product_id) as agg_0, MIN(orders.price) as agg_1, COUNT(*) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.status != 'inactive' AND users.created_at = 'active' LIMIT 10;
SELECT orders.status, COUNT(*) as agg_0, COUNT(*) as agg_1 FROM orders  WHERE orders.order_id <= 422 AND orders.product_id >= 2323 AND orders.total_amount <= 3.3360530730876263 AND orders.quantity <= 428 AND orders.price <= 57.4459520966266 GROUP BY orders.status ORDER BY orders.status;
SELECT users.status, MAX(users.user_id) as agg_0, MAX(users.age + users.user_id) as agg_1, MIN(users.age) as agg_2 FROM users  WHERE users.user_id <= 926 AND users.email = 'pending' AND users.created_at != 'active' GROUP BY users.status ORDER BY users.status;
SELECT COUNT(*) as agg_0, MAX(orders.total_amount + orders.quantity) as agg_1, COUNT(*) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.created_at = 'active' AND products.category != 'pending';
SELECT COUNT(*) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.created_at = 'pending' AND orders.status != 'inactive' AND orders.product_id <= 3786 AND orders.user_id <= 138 AND users.age >= 662 LIMIT 10;
SELECT users.age, products.name, COUNT(*) as agg_0, SUM(users.age) as agg_1, SUM(products.stock) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.description = 'inactive' AND orders.order_date != 'pending' AND users.age <= 337 AND users.created_at != 'active' GROUP BY users.age, products.name ORDER BY users.age, products.name;
SELECT MIN(users.user_id + products.product_id) as agg_0, COUNT(*) as agg_1, AVG(orders.user_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.stock >= 104 AND products.price <= 52.79785120535605 AND products.category != 'pending';
SELECT users.email, users.age, MIN(users.age + orders.product_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.name != 'active' AND orders.product_id <= 1246 AND users.city = 'inactive' GROUP BY users.email, users.age ORDER BY users.email, users.age;
SELECT users.age, products.description, products.category, AVG(orders.product_id + orders.price) as agg_0, AVG(users.age) as agg_1, AVG(orders.total_amount) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.city != 'inactive' AND products.category = 'active' AND orders.order_id >= 176 AND users.created_at = 'pending' GROUP BY users.age, products.description, products.category HAVING AVG(orders.total_amount) <= 7 ORDER BY users.age, products.description, products.category;
SELECT SUM(products.price + orders.order_id) as agg_0, MAX(orders.quantity + products.price) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE products.name != 'inactive' AND orders.price >= 69.79806365403766 AND orders.user_id <= 52 AND products.category = 'inactive';
SELECT users.user_id, users.age, AVG(users.age) as agg_0 FROM users  WHERE users.name = 'active' AND users.age <= 698 AND users.city = 'active' AND users.user_id <= 4800 GROUP BY users.user_id, users.age ORDER BY users.user_id, users.age;
SELECT orders.product_id, MAX(orders.order_id + orders.quantity) as agg_0, SUM(orders.price + orders.order_id) as agg_1 FROM orders  WHERE orders.quantity >= 301 GROUP BY orders.product_id ORDER BY orders.product_id;
SELECT orders.order_id, products.category, MIN(orders.product_id + products.product_id) as agg_0, MIN(products.product_id + orders.order_id) as agg_1, MAX(orders.order_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.description = 'pending' AND products.created_at != 'pending' AND orders.total_amount >= 89.75935393495865 GROUP BY orders.order_id, products.category ORDER BY orders.order_id, products.category;
SELECT products.category, COUNT(*) as agg_0, MIN(products.product_id) as agg_1, MAX(products.product_id) as agg_2 FROM products  WHERE products.category = 'active' AND products.name != 'pending' AND products.stock >= 299 AND products.price >= 5.928180474375637 AND products.product_id >= 9 GROUP BY products.category HAVING MIN(products.product_id) >= 14 ORDER BY products.category;
SELECT users.age, MAX(users.age) as agg_0, MIN(users.age + users.user_id) as agg_1, MAX(users.user_id + users.age) as agg_2 FROM users  WHERE users.name = 'active' AND users.email != 'active' AND users.user_id <= 303 AND users.city != 'inactive' AND users.created_at = 'pending' GROUP BY users.age HAVING MIN(users.age + users.user_id) <= 72 ORDER BY users.age;
SELECT orders.order_date, orders.user_id, products.stock, COUNT(*) as agg_0, COUNT(*) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.order_id >= 253 AND products.product_id <= 36 AND users.created_at != 'pending' AND orders.user_id >= 687 GROUP BY orders.order_date, orders.user_id, products.stock ORDER BY orders.order_date, orders.user_id, products.stock;
SELECT users.age, orders.user_id, products.category, MIN(orders.product_id + orders.quantity) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.product_id >= 66 GROUP BY users.age, orders.user_id, products.category ORDER BY users.age, orders.user_id, products.category;
SELECT orders.status, users.user_id, products.product_id, COUNT(*) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.created_at = 'active' AND users.age >= 353 AND orders.order_date = 'active' AND products.price <= 69.9195479132844 GROUP BY orders.status, users.user_id, products.product_id ORDER BY orders.status, users.user_id, products.product_id;
SELECT users.name, COUNT(*) as agg_0, SUM(users.age + users.user_id) as agg_1, SUM(users.user_id + users.age) as agg_2 FROM users  WHERE users.created_at = 'active' AND users.city != 'pending' GROUP BY users.name ORDER BY users.name;
SELECT users.name, SUM(products.price) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.created_at = 'pending' AND users.age >= 1242 AND orders.order_id <= 2364 GROUP BY users.name ORDER BY users.name LIMIT 1000;
SELECT users.age, orders.order_id, users.status, COUNT(*) as agg_0, SUM(orders.total_amount + orders.order_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.status = 'inactive' AND users.name != 'active' GROUP BY users.age, orders.order_id, users.status ORDER BY users.age, orders.order_id, users.status;
SELECT products.name, MIN(products.stock) as agg_0, COUNT(*) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.created_at != 'inactive' AND orders.user_id >= 25 AND orders.quantity >= 2132 AND products.category = 'pending' AND products.name != 'inactive' GROUP BY products.name ORDER BY products.name;
SELECT users.age, MAX(orders.quantity + orders.price) as agg_0, COUNT(*) as agg_1, MIN(users.age) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.user_id <= 748 AND orders.user_id <= 647 AND products.name != 'inactive' AND orders.order_date = 'inactive' GROUP BY users.age HAVING COUNT(*) >= 1 ORDER BY users.age;
SELECT COUNT(*) as agg_0, MAX(orders.quantity) as agg_1, SUM(orders.order_id + orders.product_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.quantity <= 728 LIMIT 1000;
SELECT users.email, orders.status, products.stock, MAX(orders.order_id + orders.user_id) as agg_0, COUNT(*) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.order_id >= 839 AND orders.user_id >= 4462 AND products.created_at = 'inactive' AND orders.product_id >= 77 GROUP BY users.email, orders.status, products.stock ORDER BY users.email, orders.status, products.stock;
SELECT COUNT(*) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.name = 'inactive' AND users.created_at = 'pending' AND orders.status != 'active' AND users.email != 'active';
SELECT orders.quantity, AVG(users.age + orders.price) as agg_0, COUNT(*) as agg_1, MIN(orders.user_id) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.status != 'inactive' AND products.stock >= 146 GROUP BY orders.quantity ORDER BY orders.quantity;
SELECT MIN(users.age) as agg_0 FROM users  WHERE users.age >= 57 AND users.created_at != 'active' AND users.name != 'pending' LIMIT 100;
SELECT orders.order_date, users.status, MAX(orders.order_id + orders.quantity) as agg_0, SUM(orders.product_id) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.age >= 241 AND users.name = 'pending' AND orders.order_date = 'active' GROUP BY orders.order_date, users.status ORDER BY orders.order_date, users.status;
SELECT orders.status, AVG(orders.product_id + orders.order_id) as agg_0 FROM orders  WHERE orders.price <= 412.02009086223785 AND orders.total_amount <= 25.899444513127285 AND orders.status = 'pending' GROUP BY orders.status ORDER BY orders.status;
SELECT users.created_at, products.created_at, products.description, MIN(orders.user_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.total_amount >= 29.440785078344316 GROUP BY users.created_at, products.created_at, products.description ORDER BY users.created_at, products.created_at, products.description;
SELECT products.name, MIN(orders.quantity) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.user_id >= 302 AND products.stock >= 383 AND users.name = 'active' AND products.price <= 171.66431651927854 AND orders.total_amount >= 2.1273980121482916 GROUP BY products.name ORDER BY products.name;
SELECT orders.product_id, users.user_id, orders.user_id, SUM(orders.quantity + users.age) as agg_0, MIN(orders.product_id) as agg_1, AVG(users.age + orders.product_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE orders.user_id <= 636 AND users.email != 'active' AND users.age <= 29 AND users.user_id <= 35 GROUP BY orders.product_id, users.user_id, orders.user_id ORDER BY orders.product_id, users.user_id, orders.user_id LIMIT 100;
SELECT products.name, MIN(orders.total_amount + products.stock) as agg_0, COUNT(*) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE orders.order_id >= 89 AND products.name != 'pending' AND products.category != 'active' AND products.created_at != 'pending' AND orders.price >= 26.273800674665566 GROUP BY products.name ORDER BY products.name;
SELECT orders.status, COUNT(*) as agg_0, AVG(orders.price) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_date != 'pending' AND products.name = 'inactive' AND orders.price <= 95.37595441870855 AND users.user_id <= 2488 GROUP BY orders.status ORDER BY orders.status;
SELECT AVG(products.product_id) as agg_0, MIN(products.stock + orders.total_amount) as agg_1, MIN(products.product_id + products.price) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.price <= 24.351637623285246 AND users.email = 'inactive' AND orders.status = 'active' AND orders.order_id <= 4901;
SELECT MIN(users.user_id + users.age) as agg_0, SUM(orders.quantity) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.price <= 23.121033986147154;
SELECT products.stock, MAX(users.age + products.stock) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.age >= 882 AND users.user_id >= 3998 AND users.city = 'pending' GROUP BY products.stock ORDER BY products.stock;
SELECT users.user_id, users.created_at, orders.order_id, AVG(orders.order_id) as agg_0, COUNT(*) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.status != 'pending' AND orders.price <= 51.59463792407186 AND orders.status != 'inactive' AND orders.user_id <= 9 AND orders.order_date != 'inactive' GROUP BY users.user_id, users.created_at, orders.order_id HAVING COUNT(*) <= 18 ORDER BY users.user_id, users.created_at, orders.order_id;
SELECT MIN(orders.price) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.price >= 28.95803975477999 AND users.city != 'pending' AND users.email != 'active';
SELECT users.user_id, users.city, AVG(users.user_id) as agg_0 FROM users  WHERE users.status = 'active' AND users.city != 'pending' AND users.name != 'inactive' AND users.email != 'pending' AND users.created_at = 'pending' GROUP BY users.user_id, users.city ORDER BY users.user_id, users.city;
SELECT users.created_at, users.user_id, users.age, COUNT(*) as agg_0, MAX(users.age + users.user_id) as agg_1 FROM users  WHERE users.user_id <= 596 AND users.name = 'inactive' AND users.created_at != 'pending' AND users.email != 'pending' AND users.status != 'active' GROUP BY users.created_at, users.user_id, users.age ORDER BY users.created_at, users.user_id, users.age;
SELECT users.user_id, SUM(users.age) as agg_0 FROM users  WHERE users.city != 'inactive' AND users.age >= 97 AND users.name != 'inactive' AND users.user_id <= 803 GROUP BY users.user_id ORDER BY users.user_id;
SELECT orders.quantity, orders.user_id, orders.order_id, AVG(orders.price) as agg_0 FROM orders  WHERE orders.order_date = 'active' AND orders.total_amount <= 6.032667449513085 AND orders.status = 'pending' GROUP BY orders.quantity, orders.user_id, orders.order_id ORDER BY orders.quantity, orders.user_id, orders.order_id;
SELECT orders.order_date, orders.product_id, orders.user_id, MIN(orders.price + orders.user_id) as agg_0, SUM(orders.user_id + orders.price) as agg_1 FROM orders  WHERE orders.user_id <= 691 AND orders.status != 'pending' AND orders.order_id >= 798 GROUP BY orders.order_date, orders.product_id, orders.user_id HAVING MIN(orders.price + orders.user_id) <= 43 ORDER BY orders.order_date, orders.product_id, orders.user_id LIMIT 1000;
SELECT orders.order_id, MIN(orders.price + orders.order_id) as agg_0, AVG(orders.quantity) as agg_1, COUNT(*) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.description != 'active' AND orders.product_id <= 307 AND orders.price >= 80.75021753490563 AND orders.status != 'pending' AND users.name = 'pending' GROUP BY orders.order_id HAVING COUNT(*) <= 54 ORDER BY orders.order_id;
SELECT users.email, products.product_id, AVG(orders.product_id + orders.quantity) as agg_0, MIN(orders.user_id + orders.product_id) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.user_id >= 224 AND orders.order_id <= 167 AND orders.quantity >= 106 GROUP BY users.email, products.product_id ORDER BY users.email, products.product_id;
SELECT orders.user_id, orders.status, COUNT(*) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.price >= 290.5605547681953 GROUP BY orders.user_id, orders.status ORDER BY orders.user_id, orders.status;
SELECT orders.order_date, products.product_id, orders.status, MIN(orders.quantity + products.stock) as agg_0, COUNT(*) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_id <= 40 AND users.user_id >= 1844 GROUP BY orders.order_date, products.product_id, orders.status HAVING COUNT(*) <= 35 ORDER BY orders.order_date, products.product_id, orders.status;
SELECT orders.order_date, products.product_id, AVG(products.product_id + products.stock) as agg_0, MIN(products.product_id) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.price <= 20.999883230691157 AND products.price <= 34.600542754146815 AND users.status = 'pending' AND products.category != 'pending' GROUP BY orders.order_date, products.product_id ORDER BY orders.order_date, products.product_id;
SELECT users.name, orders.order_id, users.email, MIN(users.age) as agg_0, SUM(orders.user_id) as agg_1, SUM(orders.order_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.product_id <= 1740 AND orders.price <= 8.796010858456846 GROUP BY users.name, orders.order_id, users.email ORDER BY users.name, orders.order_id, users.email LIMIT 10;
SELECT orders.order_date, orders.product_id, users.status, COUNT(*) as agg_0, COUNT(*) as agg_1, SUM(orders.order_id + orders.price) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.order_id >= 901 AND orders.quantity >= 481 AND orders.total_amount <= 3.2822862581083982 AND orders.order_date != 'active' AND orders.user_id <= 2969 GROUP BY orders.order_date, orders.product_id, users.status ORDER BY orders.order_date, orders.product_id, users.status;
SELECT orders.user_id, products.created_at, MAX(orders.product_id) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE orders.quantity >= 513 AND orders.total_amount <= 84.74534519017428 AND products.stock <= 487 AND products.price >= 12.228454264278898 GROUP BY orders.user_id, products.created_at HAVING MAX(orders.product_id) >= 67 ORDER BY orders.user_id, products.created_at;
SELECT MAX(products.product_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.order_id <= 12 AND products.created_at = 'pending' AND orders.total_amount <= 428.845140302576 AND users.user_id >= 459 AND users.created_at != 'inactive';
SELECT MIN(products.stock + orders.quantity) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.product_id >= 287 AND users.age <= 43;
SELECT products.category, AVG(orders.total_amount + orders.product_id) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.price >= 388.82892315306265 GROUP BY products.category ORDER BY products.category;
SELECT users.email, MIN(users.user_id + users.age) as agg_0, AVG(users.age + users.user_id) as agg_1 FROM users  WHERE users.created_at = 'inactive' AND users.email != 'pending' GROUP BY users.email ORDER BY users.email;
SELECT orders.user_id, products.category, products.description, AVG(users.age) as agg_0, COUNT(*) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.price <= 44.40924757006245 AND products.name = 'pending' AND products.price <= 335.61552743368645 AND users.age >= 435 AND orders.quantity >= 97 GROUP BY orders.user_id, products.category, products.description ORDER BY orders.user_id, products.category, products.description LIMIT 1000;
SELECT products.stock, orders.user_id, SUM(products.price + orders.order_id) as agg_0, MAX(orders.total_amount) as agg_1, COUNT(*) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.name != 'pending' AND orders.product_id <= 23 GROUP BY products.stock, orders.user_id ORDER BY products.stock, orders.user_id;
SELECT users.user_id, MAX(orders.product_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.order_date != 'active' AND products.stock <= 789 AND orders.price >= 86.66426339900454 GROUP BY users.user_id HAVING MAX(orders.product_id) <= 16 ORDER BY users.user_id;
SELECT MAX(orders.product_id) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.price >= 61.44031665224737 AND orders.total_amount <= 3.7434539206106603 AND products.description = 'inactive' AND products.created_at != 'active';
SELECT MAX(orders.product_id) as agg_0, AVG(orders.quantity + orders.order_id) as agg_1, MAX(orders.price + orders.quantity) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.name = 'active';
SELECT users.name, MIN(products.product_id) as agg_0, MIN(products.price) as agg_1, MIN(orders.user_id + orders.price) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.user_id >= 1 AND products.category = 'active' AND users.email = 'pending' AND users.name = 'pending' GROUP BY users.name ORDER BY users.name LIMIT 100;
SELECT users.name, COUNT(*) as agg_0, AVG(users.user_id) as agg_1, SUM(users.user_id + users.age) as agg_2 FROM users  WHERE users.name != 'inactive' GROUP BY users.name HAVING COUNT(*) >= 5 ORDER BY users.name LIMIT 1000;
SELECT products.stock, orders.order_date, orders.user_id, MAX(products.stock) as agg_0, MAX(orders.product_id + orders.quantity) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.price >= 85.5113198956447 AND orders.total_amount >= 75.55935110089818 AND products.stock >= 81 AND orders.product_id <= 4401 GROUP BY products.stock, orders.order_date, orders.user_id ORDER BY products.stock, orders.order_date, orders.user_id;
SELECT COUNT(*) as agg_0, COUNT(*) as agg_1 FROM products  WHERE products.category = 'pending' AND products.stock <= 603 AND products.name = 'pending' AND products.created_at = 'pending';
SELECT orders.order_id, users.status, AVG(products.price) as agg_0, SUM(orders.price + products.stock) as agg_1, COUNT(*) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.user_id <= 73 GROUP BY orders.order_id, users.status HAVING SUM(orders.price + products.stock) <= 27 ORDER BY orders.order_id, users.status LIMIT 100;
SELECT AVG(products.stock) as agg_0 FROM products  WHERE products.stock <= 472 AND products.product_id >= 310 AND products.created_at != 'active' AND products.price <= 245.40106009253685 AND products.category = 'active';
SELECT orders.user_id, COUNT(*) as agg_0, AVG(orders.product_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.price >= 40.76491148685575 GROUP BY orders.user_id ORDER BY orders.user_id;
SELECT MIN(products.price + products.stock) as agg_0 FROM products  WHERE products.stock <= 310 AND products.product_id >= 436;
SELECT orders.order_date, SUM(orders.price) as agg_0, AVG(orders.quantity) as agg_1, SUM(products.stock) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.email != 'pending' AND orders.order_id >= 86 GROUP BY orders.order_date ORDER BY orders.order_date;
SELECT orders.product_id, products.description, users.status, MAX(products.stock + users.user_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.description != 'inactive' AND users.name = 'inactive' AND users.user_id <= 2360 AND products.created_at = 'pending' GROUP BY orders.product_id, products.description, users.status ORDER BY orders.product_id, products.description, users.status;
SELECT MAX(orders.price + users.user_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.status != 'inactive' AND orders.price <= 177.96917709538658 AND users.status != 'pending' AND users.name = 'inactive';
SELECT users.city, users.created_at, orders.quantity, AVG(orders.quantity) as agg_0, MAX(products.stock + orders.order_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.name = 'inactive' AND orders.status != 'inactive' AND orders.total_amount >= 71.71478652418453 AND users.city = 'pending' AND orders.quantity <= 3731 GROUP BY users.city, users.created_at, orders.quantity HAVING AVG(orders.quantity) >= 66 ORDER BY users.city, users.created_at, orders.quantity;
SELECT orders.quantity, MAX(orders.total_amount + orders.user_id) as agg_0, SUM(orders.order_id + orders.total_amount) as agg_1, MAX(orders.product_id + orders.quantity) as agg_2 FROM orders  WHERE orders.status != 'pending' AND orders.order_id <= 279 AND orders.total_amount >= 93.43247758239907 AND orders.user_id <= 982 AND orders.order_date != 'pending' GROUP BY orders.quantity HAVING MAX(orders.product_id + orders.quantity) >= 48 ORDER BY orders.quantity;
SELECT users.name, products.product_id, COUNT(*) as agg_0, AVG(orders.total_amount + orders.user_id) as agg_1, SUM(users.age) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.product_id >= 715 AND users.name = 'pending' AND products.category = 'inactive' AND orders.user_id <= 200 AND products.price >= 301.5934200774314 GROUP BY users.name, products.product_id HAVING AVG(orders.total_amount + orders.user_id) >= 30 ORDER BY users.name, products.product_id;
SELECT orders.quantity, orders.status, orders.order_id, AVG(orders.quantity) as agg_0 FROM orders  WHERE orders.quantity <= 78 AND orders.total_amount >= 98.85687449942851 AND orders.order_date = 'active' GROUP BY orders.quantity, orders.status, orders.order_id ORDER BY orders.quantity, orders.status, orders.order_id;
SELECT users.email, orders.user_id, MIN(orders.price) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.email = 'active' GROUP BY users.email, orders.user_id ORDER BY users.email, orders.user_id;
SELECT orders.user_id, COUNT(*) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.created_at = 'active' GROUP BY orders.user_id HAVING COUNT(*) >= 46 ORDER BY orders.user_id;
SELECT orders.order_date, COUNT(*) as agg_0, MIN(orders.product_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.created_at = 'active' AND orders.quantity <= 639 AND orders.status != 'inactive' AND users.city = 'inactive' AND products.product_id <= 1580 GROUP BY orders.order_date HAVING MIN(orders.product_id) <= 93 ORDER BY orders.order_date;
SELECT MIN(products.price + products.product_id) as agg_0, SUM(products.price + products.product_id) as agg_1 FROM products  WHERE products.stock >= 996 AND products.created_at != 'inactive' AND products.description != 'pending' AND products.product_id >= 50 AND products.name = 'active';
SELECT SUM(products.price + orders.product_id) as agg_0, MIN(orders.quantity + orders.order_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.created_at != 'active' AND orders.quantity >= 65 AND products.stock >= 1168;
SELECT orders.order_id, AVG(users.age + orders.product_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.age <= 231 AND products.category = 'inactive' GROUP BY orders.order_id ORDER BY orders.order_id;
SELECT products.description, products.stock, orders.user_id, COUNT(*) as agg_0, MIN(orders.quantity + products.price) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.total_amount <= 8.648127100099476 AND orders.product_id >= 4434 AND products.price <= 4.508294658803344 AND products.category = 'inactive' AND products.description != 'pending' GROUP BY products.description, products.stock, orders.user_id ORDER BY products.description, products.stock, orders.user_id LIMIT 1000;
SELECT users.name, users.user_id, orders.user_id, MIN(orders.user_id) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.status = 'active' AND users.created_at = 'active' AND users.email != 'inactive' GROUP BY users.name, users.user_id, orders.user_id ORDER BY users.name, users.user_id, orders.user_id;
SELECT products.product_id, COUNT(*) as agg_0, AVG(orders.product_id + orders.user_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.created_at != 'inactive' AND products.description != 'pending' AND products.category = 'active' GROUP BY products.product_id ORDER BY products.product_id;
SELECT products.category, MAX(users.age) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.email = 'pending' AND orders.product_id <= 56 AND orders.total_amount <= 9.185625648479908 GROUP BY products.category HAVING MAX(users.age) <= 83 ORDER BY products.category;
SELECT orders.user_id, orders.order_id, AVG(orders.quantity + orders.product_id) as agg_0 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.name = 'pending' AND orders.status != 'pending' AND orders.total_amount <= 38.839717928628914 GROUP BY orders.user_id, orders.order_id ORDER BY orders.user_id, orders.order_id;
SELECT orders.status, orders.quantity, orders.user_id, MIN(orders.product_id + orders.total_amount) as agg_0 FROM orders  WHERE orders.status = 'active' AND orders.product_id <= 2257 AND orders.order_id >= 169 AND orders.total_amount <= 3.5698779549994146 GROUP BY orders.status, orders.quantity, orders.user_id HAVING MIN(orders.product_id + orders.total_amount) <= 51 ORDER BY orders.status, orders.quantity, orders.user_id;
SELECT users.email, orders.status, MAX(orders.quantity + products.price) as agg_0, SUM(users.user_id) as agg_1, COUNT(*) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.quantity <= 4504 AND orders.user_id >= 122 AND products.price >= 37.570345698503594 GROUP BY users.email, orders.status ORDER BY users.email, orders.status;
SELECT products.stock, products.description, COUNT(*) as agg_0, SUM(orders.product_id) as agg_1, AVG(orders.product_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.description != 'inactive' AND orders.status != 'active' GROUP BY products.stock, products.description ORDER BY products.stock, products.description;
SELECT orders.status, users.age, users.city, SUM(orders.total_amount + orders.order_id) as agg_0, MIN(orders.user_id + orders.price) as agg_1, AVG(users.age) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.email = 'pending' AND orders.price >= 1.4753880968214812 AND products.price <= 424.9020510972859 AND users.age <= 92 GROUP BY orders.status, users.age, users.city ORDER BY orders.status, users.age, users.city LIMIT 1000;
SELECT users.user_id, users.email, users.city, COUNT(*) as agg_0 FROM users  WHERE users.city = 'active' AND users.age >= 28 AND users.name != 'inactive' AND users.user_id <= 394 GROUP BY users.user_id, users.email, users.city HAVING COUNT(*) <= 29 ORDER BY users.user_id, users.email, users.city LIMIT 10;
SELECT products.category, orders.quantity, COUNT(*) as agg_0, AVG(orders.total_amount + orders.order_id) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.product_id >= 1910 AND orders.product_id >= 85 AND products.category = 'inactive' AND users.user_id >= 525 AND users.status = 'inactive' GROUP BY products.category, orders.quantity ORDER BY products.category, orders.quantity LIMIT 1000;
SELECT SUM(products.price + products.product_id) as agg_0 FROM products  WHERE products.stock >= 972 AND products.product_id <= 3780 AND products.category != 'pending';
SELECT users.age, AVG(users.user_id + orders.quantity) as agg_0, AVG(users.age + products.price) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.city != 'inactive' AND orders.product_id <= 809 AND users.user_id >= 829 AND users.created_at = 'pending' GROUP BY users.age ORDER BY users.age;
SELECT orders.quantity, users.age, products.category, AVG(users.age + orders.product_id) as agg_0, MAX(orders.order_id + products.stock) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.category = 'active' AND products.price >= 29.071278374915607 GROUP BY orders.quantity, users.age, products.category HAVING AVG(users.age + orders.product_id) <= 66 ORDER BY orders.quantity, users.age, products.category;
SELECT users.user_id, AVG(users.age + users.user_id) as agg_0 FROM users  WHERE users.user_id >= 1 AND users.age >= 300 AND users.email = 'inactive' AND users.city != 'pending' GROUP BY users.user_id HAVING AVG(users.age + users.user_id) >= 23 ORDER BY users.user_id LIMIT 100;
SELECT products.category, users.city, orders.status, COUNT(*) as agg_0, SUM(orders.product_id + orders.quantity) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.order_date = 'inactive' AND products.price >= 2.8425744832949738 AND users.email = 'inactive' AND orders.total_amount <= 5.9428118336423355 AND users.user_id >= 749 GROUP BY products.category, users.city, orders.status ORDER BY products.category, users.city, orders.status;
SELECT products.name, products.product_id, MAX(products.stock) as agg_0, SUM(products.product_id + products.price) as agg_1 FROM products  WHERE products.stock <= 950 AND products.product_id >= 594 AND products.created_at = 'active' AND products.name = 'inactive' AND products.description = 'active' GROUP BY products.name, products.product_id ORDER BY products.name, products.product_id;
SELECT AVG(orders.quantity + orders.product_id) as agg_0, COUNT(*) as agg_1 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE users.created_at = 'active' AND users.age <= 649 AND users.user_id <= 686 AND orders.order_date != 'inactive';
SELECT products.stock, products.description, COUNT(*) as agg_0 FROM products  WHERE products.description = 'active' GROUP BY products.stock, products.description ORDER BY products.stock, products.description LIMIT 10;
SELECT products.category, products.stock, COUNT(*) as agg_0, MAX(products.price + products.stock) as agg_1 FROM products  WHERE products.created_at = 'active' AND products.product_id >= 964 AND products.description != 'active' AND products.name != 'pending' AND products.category = 'inactive' GROUP BY products.category, products.stock ORDER BY products.category, products.stock;
SELECT orders.order_id, MIN(products.product_id) as agg_0, MIN(orders.price) as agg_1, MAX(orders.order_id + orders.product_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.stock <= 658 AND orders.total_amount >= 4.604573472670733 GROUP BY orders.order_id HAVING MIN(orders.price) >= 56 ORDER BY orders.order_id;
SELECT orders.product_id, SUM(products.stock + orders.total_amount) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.total_amount <= 4.117920899961653 GROUP BY orders.product_id ORDER BY orders.product_id;
SELECT users.city, users.user_id, users.email, MAX(users.user_id) as agg_0 FROM users  WHERE users.name = 'inactive' AND users.email = 'pending' AND users.status = 'active' AND users.age >= 4690 AND users.city != 'active' GROUP BY users.city, users.user_id, users.email ORDER BY users.city, users.user_id, users.email LIMIT 100;
SELECT products.created_at, orders.status, SUM(products.stock + users.age) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.city = 'active' AND products.price >= 47.22677453044832 AND orders.total_amount <= 2.132287269875989 GROUP BY products.created_at, orders.status ORDER BY products.created_at, orders.status;
SELECT orders.order_date, orders.status, products.description, MIN(products.product_id) as agg_0, SUM(products.product_id) as agg_1, MAX(orders.quantity + orders.order_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.user_id >= 87 AND products.created_at != 'inactive' AND orders.total_amount <= 9.949175274253468 AND orders.price <= 61.157695018598815 AND users.user_id >= 593 GROUP BY orders.order_date, orders.status, products.description HAVING SUM(products.product_id) <= 88 ORDER BY orders.order_date, orders.status, products.description;
SELECT COUNT(*) as agg_0, AVG(orders.product_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.city != 'active' AND users.created_at != 'pending' LIMIT 1000;
SELECT products.description, AVG(products.stock + products.price) as agg_0, COUNT(*) as agg_1, MIN(products.stock) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.user_id >= 79 GROUP BY products.description HAVING AVG(products.stock + products.price) <= 66 ORDER BY products.description LIMIT 1000;
SELECT SUM(orders.product_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.user_id <= 73 AND users.status = 'active' AND orders.user_id <= 81 AND orders.product_id >= 4405;
SELECT orders.product_id, products.description, MAX(products.stock + orders.user_id) as agg_0, MAX(products.price) as agg_1, MIN(orders.total_amount + users.age) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.age <= 4030 GROUP BY orders.product_id, products.description ORDER BY orders.product_id, products.description;
SELECT orders.order_date, orders.quantity, SUM(users.age) as agg_0 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.user_id >= 935 AND orders.user_id <= 693 GROUP BY orders.order_date, orders.quantity ORDER BY orders.order_date, orders.quantity;
SELECT products.name, MIN(products.price + products.product_id) as agg_0, SUM(products.product_id + products.stock) as agg_1, MIN(products.price) as agg_2 FROM products  WHERE products.product_id <= 45 AND products.name != 'active' AND products.description != 'pending' AND products.stock <= 310 AND products.created_at != 'active' GROUP BY products.name ORDER BY products.name LIMIT 1000;
SELECT users.user_id, COUNT(*) as agg_0, SUM(products.stock) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.quantity <= 399 AND orders.user_id >= 4695 AND orders.order_id <= 550 AND products.created_at != 'pending' GROUP BY users.user_id ORDER BY users.user_id;
SELECT products.product_id, products.name, MIN(orders.user_id + users.user_id) as agg_0, SUM(products.product_id) as agg_1, COUNT(*) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.product_id <= 3213 GROUP BY products.product_id, products.name HAVING MIN(orders.user_id + users.user_id) >= 77 ORDER BY products.product_id, products.name;
SELECT users.email, orders.quantity, MAX(orders.total_amount + users.age) as agg_0, AVG(orders.order_id) as agg_1, COUNT(*) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.user_id >= 2587 AND users.status = 'pending' GROUP BY users.email, orders.quantity ORDER BY users.email, orders.quantity;
SELECT COUNT(*) as agg_0, AVG(orders.user_id + orders.price) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.status != 'inactive' AND orders.total_amount >= 387.5154060721141;
SELECT products.name, products.description, MAX(products.price) as agg_0, SUM(products.stock + products.price) as agg_1, MIN(products.product_id + products.price) as agg_2 FROM products  WHERE products.name = 'inactive' AND products.created_at = 'active' AND products.product_id >= 953 GROUP BY products.name, products.description ORDER BY products.name, products.description;
SELECT orders.order_id, orders.order_date, AVG(orders.user_id) as agg_0, MIN(orders.product_id + orders.order_id) as agg_1 FROM orders  WHERE orders.total_amount <= 56.30403135808484 GROUP BY orders.order_id, orders.order_date ORDER BY orders.order_id, orders.order_date;
SELECT AVG(orders.quantity) as agg_0, SUM(orders.order_id + products.product_id) as agg_1, MIN(products.stock + orders.order_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.total_amount >= 6.853115736634018;
SELECT users.age, SUM(users.user_id) as agg_0, MAX(users.age + users.user_id) as agg_1 FROM users  WHERE users.email != 'active' AND users.name = 'pending' AND users.city != 'inactive' GROUP BY users.age ORDER BY users.age;
SELECT products.created_at, SUM(orders.total_amount) as agg_0, MIN(orders.user_id) as agg_1, MIN(orders.product_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.product_id <= 379 AND products.description != 'active' AND products.stock <= 964 AND orders.total_amount >= 3.5378908872380657 GROUP BY products.created_at ORDER BY products.created_at;
SELECT orders.order_id, users.city, orders.quantity, MIN(users.age + orders.price) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.price >= 35.92470191119196 GROUP BY orders.order_id, users.city, orders.quantity ORDER BY orders.order_id, users.city, orders.quantity;
SELECT products.description, SUM(products.stock) as agg_0, MIN(products.stock) as agg_1 FROM products  WHERE products.price >= 56.00244846576503 GROUP BY products.description ORDER BY products.description;
SELECT orders.order_date, products.description, products.created_at, COUNT(*) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.stock >= 77 AND orders.order_id >= 773 AND orders.status = 'inactive' AND orders.order_date = 'pending' GROUP BY orders.order_date, products.description, products.created_at ORDER BY orders.order_date, products.description, products.created_at;
SELECT products.name, users.city, SUM(products.product_id + products.stock) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.city != 'pending' AND orders.user_id <= 76 AND users.email != 'pending' AND products.created_at != 'active' AND products.product_id <= 454 GROUP BY products.name, users.city ORDER BY products.name, users.city;
SELECT products.created_at, users.name, SUM(orders.total_amount + products.stock) as agg_0, MAX(users.age + products.stock) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.created_at != 'pending' AND users.age <= 948 AND orders.order_date = 'pending' GROUP BY products.created_at, users.name ORDER BY products.created_at, users.name;
SELECT orders.product_id, AVG(products.price + products.stock) as agg_0, MAX(products.stock + orders.user_id) as agg_1, MAX(orders.user_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.city != 'pending' AND orders.total_amount >= 161.44375799537414 GROUP BY orders.product_id ORDER BY orders.product_id;
SELECT orders.status, MAX(products.stock + orders.price) as agg_0, MAX(products.price) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id  WHERE products.stock >= 391 AND orders.total_amount >= 405.2934335685097 AND orders.status != 'pending' GROUP BY orders.status ORDER BY orders.status LIMIT 1000;
SELECT orders.order_date, orders.quantity, SUM(users.user_id) as agg_0, SUM(orders.product_id + orders.order_id) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.status = 'pending' AND orders.product_id >= 53 AND orders.total_amount <= 184.77384367635676 GROUP BY orders.order_date, orders.quantity ORDER BY orders.order_date, orders.quantity LIMIT 10;
SELECT orders.product_id, products.product_id, AVG(orders.total_amount) as agg_0, SUM(orders.order_id) as agg_1, COUNT(*) as agg_2 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE orders.order_date != 'pending' AND products.stock <= 4588 AND products.product_id <= 50 AND users.status != 'inactive' AND users.created_at = 'inactive' GROUP BY orders.product_id, products.product_id ORDER BY orders.product_id, products.product_id;
SELECT products.description, users.city, MAX(orders.product_id + users.age) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.product_id <= 471 AND products.category != 'pending' AND orders.order_id <= 2789 AND users.city = 'inactive' AND users.email = 'pending' GROUP BY products.description, users.city ORDER BY products.description, users.city;
SELECT orders.order_id, orders.status, AVG(orders.total_amount + orders.product_id) as agg_0 FROM orders  WHERE orders.product_id >= 184 AND orders.status != 'active' AND orders.order_id >= 61 AND orders.quantity >= 508 AND orders.order_date = 'inactive' GROUP BY orders.order_id, orders.status ORDER BY orders.order_id, orders.status;
SELECT orders.product_id, orders.order_date, orders.status, COUNT(*) as agg_0 FROM orders  WHERE orders.status = 'inactive' AND orders.order_date != 'inactive' AND orders.total_amount <= 440.56423800468616 GROUP BY orders.product_id, orders.order_date, orders.status ORDER BY orders.product_id, orders.order_date, orders.status;
SELECT COUNT(*) as agg_0, MIN(users.age + products.price) as agg_1, COUNT(*) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.total_amount <= 15.422410068564524 AND products.product_id <= 842;
SELECT users.user_id, MAX(users.user_id) as agg_0, SUM(users.age) as agg_1 FROM users  WHERE users.email = 'inactive' AND users.name = 'pending' AND users.city != 'pending' AND users.age >= 4598 AND users.status != 'active' GROUP BY users.user_id ORDER BY users.user_id;
SELECT orders.order_date, orders.status, products.name, AVG(products.stock + orders.order_id) as agg_0, AVG(orders.total_amount) as agg_1, SUM(orders.order_id) as agg_2 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.stock <= 86 AND products.description = 'inactive' AND users.name = 'active' AND orders.quantity <= 4576 AND products.category != 'pending' GROUP BY orders.order_date, orders.status, products.name ORDER BY orders.order_date, orders.status, products.name;
SELECT orders.status, orders.quantity, MAX(orders.quantity) as agg_0 FROM orders  WHERE orders.user_id >= 133 AND orders.quantity >= 138 AND orders.order_id >= 204 AND orders.total_amount <= 37.357553217458744 GROUP BY orders.status, orders.quantity ORDER BY orders.status, orders.quantity;
SELECT orders.order_id, users.name, SUM(orders.user_id) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.status != 'active' AND users.created_at = 'pending' GROUP BY orders.order_id, users.name ORDER BY orders.order_id, users.name;
SELECT orders.product_id, AVG(orders.order_id) as agg_0 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE products.price <= 7.686874053310714 AND orders.product_id <= 157 AND orders.total_amount >= 56.03600003669395 AND products.category != 'pending' GROUP BY orders.product_id ORDER BY orders.product_id;
SELECT COUNT(*) as agg_0, MIN(users.age) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.quantity >= 987 AND orders.price >= 36.901671947395656;
SELECT orders.order_id, AVG(products.product_id) as agg_0, MAX(products.stock + users.user_id) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.price <= 79.33200820228409 AND orders.product_id >= 229 AND users.email != 'active' AND products.description != 'pending' AND products.product_id <= 437 GROUP BY orders.order_id ORDER BY orders.order_id;
SELECT products.category, COUNT(*) as agg_0, AVG(orders.price + products.product_id) as agg_1, AVG(orders.order_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id  WHERE orders.user_id <= 28 AND products.product_id >= 980 GROUP BY products.category HAVING COUNT(*) >= 24 ORDER BY products.category;
SELECT orders.order_id, SUM(orders.product_id) as agg_0, MIN(orders.order_id + users.user_id) as agg_1, SUM(users.user_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.user_id <= 81 AND products.description != 'active' AND users.created_at != 'active' AND users.status = 'pending' GROUP BY orders.order_id ORDER BY orders.order_id;
SELECT orders.quantity, products.category, MAX(orders.user_id + users.user_id) as agg_0, AVG(orders.total_amount) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.user_id >= 779 AND products.stock <= 3 AND orders.price >= 74.89448674984436 AND users.age >= 607 GROUP BY orders.quantity, products.category ORDER BY orders.quantity, products.category;
SELECT MIN(users.user_id + orders.total_amount) as agg_0, MIN(products.product_id + orders.order_id) as agg_1, AVG(products.product_id + orders.product_id) as agg_2 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE users.created_at != 'inactive' AND users.name = 'inactive';
SELECT COUNT(*) as agg_0, COUNT(*) as agg_1, MIN(orders.quantity) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id JOIN products ON orders.product_id = products.product_id  WHERE users.email = 'inactive' AND orders.order_date != 'inactive' AND products.product_id >= 776 AND products.stock >= 1892;
SELECT SUM(orders.price) as agg_0, COUNT(*) as agg_1 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE orders.order_date = 'pending' AND users.name = 'pending';
SELECT orders.user_id, SUM(orders.price) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id  WHERE users.city = 'pending' GROUP BY orders.user_id ORDER BY orders.user_id;
SELECT AVG(users.user_id + users.age) as agg_0 FROM users  WHERE users.created_at = 'inactive' AND users.age <= 271 AND users.status = 'inactive' AND users.name = 'pending' AND users.email = 'inactive' LIMIT 10;
SELECT orders.user_id, products.stock, SUM(products.price + orders.quantity) as agg_0 FROM users JOIN orders ON users.user_id = orders.user_id JOIN products ON orders.product_id = products.product_id  WHERE products.product_id >= 17 AND users.city != 'pending' GROUP BY orders.user_id, products.stock ORDER BY orders.user_id, products.stock;
SELECT users.age, users.city, users.status, COUNT(*) as agg_0, COUNT(*) as agg_1 FROM users  WHERE users.email != 'inactive' AND users.age <= 3314 AND users.user_id <= 77 GROUP BY users.age, users.city, users.status ORDER BY users.age, users.city, users.status;
SELECT products.name, products.product_id, products.description, COUNT(*) as agg_0, SUM(products.stock + products.price) as agg_1, COUNT(*) as agg_2 FROM products  WHERE products.product_id <= 26 GROUP BY products.name, products.product_id, products.description ORDER BY products.name, products.product_id, products.description;
SELECT orders.quantity, MIN(orders.user_id) as agg_0, COUNT(*) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE products.stock <= 14 AND orders.status != 'inactive' AND orders.total_amount >= 7.7843228127007285 AND orders.product_id <= 770 AND orders.order_id <= 625 GROUP BY orders.quantity ORDER BY orders.quantity LIMIT 100;
SELECT MIN(orders.product_id + orders.user_id) as agg_0, AVG(orders.user_id) as agg_1, SUM(orders.user_id) as agg_2 FROM orders JOIN users ON orders.user_id = users.user_id  WHERE orders.order_date = 'inactive' AND users.age <= 701;
SELECT users.user_id, orders.order_date, MAX(orders.order_id + users.user_id) as agg_0, MIN(orders.order_id) as agg_1 FROM orders JOIN products ON orders.product_id = products.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.order_id >= 2048 AND users.created_at != 'active' AND products.category != 'pending' AND products.price <= 65.04720110267068 AND products.name != 'pending' GROUP BY users.user_id, orders.order_date ORDER BY users.user_id, orders.order_date LIMIT 1000;
SELECT products.product_id, products.name, products.category, SUM(products.product_id + products.price) as agg_0, MAX(products.stock) as agg_1, MAX(products.price + products.stock) as agg_2 FROM products  WHERE products.product_id <= 998 AND products.price >= 73.37601916933825 GROUP BY products.product_id, products.name, products.category ORDER BY products.product_id, products.name, products.category;
SELECT products.name, orders.user_id, MIN(orders.product_id + products.price) as agg_0, SUM(orders.product_id + products.product_id) as agg_1 FROM products JOIN orders ON products.product_id = orders.product_id JOIN users ON orders.user_id = users.user_id  WHERE orders.product_id >= 77 AND products.description = 'active' AND users.name != 'inactive' AND products.created_at = 'pending' GROUP BY products.name, orders.user_id HAVING SUM(orders.product_id + products.product_id) >= 67 ORDER BY products.name, orders.user_id;
SELECT users.email, users.name, users.created_at, SUM(users.user_id) as agg_0, MIN(users.user_id + users.age) as agg_1 FROM users  WHERE users.name != 'pending' AND users.user_id >= 561 AND users.age >= 1147 GROUP BY users.email, users.name, users.created_at ORDER BY users.email, users.name, users.created_at;